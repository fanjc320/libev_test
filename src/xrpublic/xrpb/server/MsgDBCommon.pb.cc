// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server/MsgDBCommon.proto

#include "server/MsgDBCommon.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace XrPb {
constexpr MsgSvrMod_DBCommon::MsgSvrMod_DBCommon(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgSvrMod_DBCommonDefaultTypeInternal {
  constexpr MsgSvrMod_DBCommonDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgSvrMod_DBCommonDefaultTypeInternal() {}
  union {
    MsgSvrMod_DBCommon _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgSvrMod_DBCommonDefaultTypeInternal _MsgSvrMod_DBCommon_default_instance_;
constexpr Msg_DBGS_UpdateData::Msg_DBGS_UpdateData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : strmsg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , llaccid_(int64_t{0})
  , uimoduleid_(0u)
  , uiactivityid_(0u)
  , uigroupid_(0u)
  , uiprotocol_(0u){}
struct Msg_DBGS_UpdateDataDefaultTypeInternal {
  constexpr Msg_DBGS_UpdateDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DBGS_UpdateDataDefaultTypeInternal() {}
  union {
    Msg_DBGS_UpdateData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DBGS_UpdateDataDefaultTypeInternal _Msg_DBGS_UpdateData_default_instance_;
constexpr Msg_DBGS_UpdateVersion::Msg_DBGS_UpdateVersion(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : strversion_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , llreset_(int64_t{0}){}
struct Msg_DBGS_UpdateVersionDefaultTypeInternal {
  constexpr Msg_DBGS_UpdateVersionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DBGS_UpdateVersionDefaultTypeInternal() {}
  union {
    Msg_DBGS_UpdateVersion _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DBGS_UpdateVersionDefaultTypeInternal _Msg_DBGS_UpdateVersion_default_instance_;
constexpr Msg_DBGS_UpdateSign::Msg_DBGS_UpdateSign(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uisignedday_(0u)
  , uisupplement_(0u){}
struct Msg_DBGS_UpdateSignDefaultTypeInternal {
  constexpr Msg_DBGS_UpdateSignDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DBGS_UpdateSignDefaultTypeInternal() {}
  union {
    Msg_DBGS_UpdateSign _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DBGS_UpdateSignDefaultTypeInternal _Msg_DBGS_UpdateSign_default_instance_;
constexpr DBGS_COM_Value::DBGS_COM_Value(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : index_(0)
  , value_(0){}
struct DBGS_COM_ValueDefaultTypeInternal {
  constexpr DBGS_COM_ValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DBGS_COM_ValueDefaultTypeInternal() {}
  union {
    DBGS_COM_Value _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DBGS_COM_ValueDefaultTypeInternal _DBGS_COM_Value_default_instance_;
constexpr Msg_DBGS_UpdateValue::Msg_DBGS_UpdateValue(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ovalue_(nullptr){}
struct Msg_DBGS_UpdateValueDefaultTypeInternal {
  constexpr Msg_DBGS_UpdateValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DBGS_UpdateValueDefaultTypeInternal() {}
  union {
    Msg_DBGS_UpdateValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DBGS_UpdateValueDefaultTypeInternal _Msg_DBGS_UpdateValue_default_instance_;
}  // namespace XrPb
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_server_2fMsgDBCommon_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_server_2fMsgDBCommon_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_server_2fMsgDBCommon_2eproto = nullptr;

const uint32_t TableStruct_server_2fMsgDBCommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::MsgSvrMod_DBCommon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateData, llaccid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateData, uimoduleid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateData, uiactivityid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateData, uigroupid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateData, uiprotocol_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateData, strmsg_),
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateVersion, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateVersion, strversion_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateVersion, llreset_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateSign, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateSign, uisignedday_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateSign, uisupplement_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::DBGS_COM_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::DBGS_COM_Value, index_),
  PROTOBUF_FIELD_OFFSET(::XrPb::DBGS_COM_Value, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DBGS_UpdateValue, ovalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::XrPb::MsgSvrMod_DBCommon)},
  { 6, 18, -1, sizeof(::XrPb::Msg_DBGS_UpdateData)},
  { 24, 32, -1, sizeof(::XrPb::Msg_DBGS_UpdateVersion)},
  { 34, 42, -1, sizeof(::XrPb::Msg_DBGS_UpdateSign)},
  { 44, -1, -1, sizeof(::XrPb::DBGS_COM_Value)},
  { 52, -1, -1, sizeof(::XrPb::Msg_DBGS_UpdateValue)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_MsgSvrMod_DBCommon_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DBGS_UpdateData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DBGS_UpdateVersion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DBGS_UpdateSign_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_DBGS_COM_Value_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DBGS_UpdateValue_default_instance_),
};

const char descriptor_table_protodef_server_2fMsgDBCommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030server/MsgDBCommon.proto\022\004XrPb\"\223\001\n\022Msg"
  "SvrMod_DBCommon\"}\n\005MsgId\022\014\n\010Msg_None\020\000\022\027"
  "\n\023Msg_DBGS_UpdateData\020\001\022\032\n\026Msg_DBGS_Upda"
  "teVersion\020\002\022\027\n\023Msg_DBGS_UpdateSign\020\003\022\030\n\024"
  "Msg_DBGS_UpdateValue\020\004\"\276\001\n\023Msg_DBGS_Upda"
  "teData\022\017\n\007llAccId\030\001 \001(\003\022\022\n\nuiModuleId\030\002 "
  "\001(\r\022\024\n\014uiActivityId\030\003 \001(\r\022\026\n\tuiGroupId\030\004"
  " \001(\rH\000\210\001\001\022\027\n\nuiProtocol\030\005 \001(\rH\001\210\001\001\022\023\n\006st"
  "rMsg\030\006 \001(\014H\002\210\001\001B\014\n\n_uiGroupIdB\r\n\013_uiProt"
  "ocolB\t\n\007_strMsg\"b\n\026Msg_DBGS_UpdateVersio"
  "n\022\027\n\nstrVersion\030\001 \001(\tH\000\210\001\001\022\024\n\007llReset\030\002 "
  "\001(\003H\001\210\001\001B\r\n\013_strVersionB\n\n\010_llReset\"k\n\023M"
  "sg_DBGS_UpdateSign\022\030\n\013uiSignedDay\030\001 \001(\rH"
  "\000\210\001\001\022\031\n\014uiSupplement\030\002 \001(\rH\001\210\001\001B\016\n\014_uiSi"
  "gnedDayB\017\n\r_uiSupplement\".\n\016DBGS_COM_Val"
  "ue\022\r\n\005index\030\001 \001(\005\022\r\n\005value\030\002 \001(\005\"<\n\024Msg_"
  "DBGS_UpdateValue\022$\n\006oValue\030\001 \001(\0132\024.XrPb."
  "DBGS_COM_Valueb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_server_2fMsgDBCommon_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_server_2fMsgDBCommon_2eproto = {
  false, false, 702, descriptor_table_protodef_server_2fMsgDBCommon_2eproto, "server/MsgDBCommon.proto", 
  &descriptor_table_server_2fMsgDBCommon_2eproto_once, nullptr, 0, 6,
  schemas, file_default_instances, TableStruct_server_2fMsgDBCommon_2eproto::offsets,
  file_level_metadata_server_2fMsgDBCommon_2eproto, file_level_enum_descriptors_server_2fMsgDBCommon_2eproto, file_level_service_descriptors_server_2fMsgDBCommon_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_server_2fMsgDBCommon_2eproto_getter() {
  return &descriptor_table_server_2fMsgDBCommon_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_server_2fMsgDBCommon_2eproto(&descriptor_table_server_2fMsgDBCommon_2eproto);
namespace XrPb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgSvrMod_DBCommon_MsgId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_server_2fMsgDBCommon_2eproto);
  return file_level_enum_descriptors_server_2fMsgDBCommon_2eproto[0];
}
bool MsgSvrMod_DBCommon_MsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MsgSvrMod_DBCommon_MsgId MsgSvrMod_DBCommon::Msg_None;
constexpr MsgSvrMod_DBCommon_MsgId MsgSvrMod_DBCommon::Msg_DBGS_UpdateData;
constexpr MsgSvrMod_DBCommon_MsgId MsgSvrMod_DBCommon::Msg_DBGS_UpdateVersion;
constexpr MsgSvrMod_DBCommon_MsgId MsgSvrMod_DBCommon::Msg_DBGS_UpdateSign;
constexpr MsgSvrMod_DBCommon_MsgId MsgSvrMod_DBCommon::Msg_DBGS_UpdateValue;
constexpr MsgSvrMod_DBCommon_MsgId MsgSvrMod_DBCommon::MsgId_MIN;
constexpr MsgSvrMod_DBCommon_MsgId MsgSvrMod_DBCommon::MsgId_MAX;
constexpr int MsgSvrMod_DBCommon::MsgId_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MsgSvrMod_DBCommon::_Internal {
 public:
};

MsgSvrMod_DBCommon::MsgSvrMod_DBCommon(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.MsgSvrMod_DBCommon)
}
MsgSvrMod_DBCommon::MsgSvrMod_DBCommon(const MsgSvrMod_DBCommon& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.MsgSvrMod_DBCommon)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSvrMod_DBCommon::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSvrMod_DBCommon::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgSvrMod_DBCommon::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgDBCommon_2eproto_getter, &descriptor_table_server_2fMsgDBCommon_2eproto_once,
      file_level_metadata_server_2fMsgDBCommon_2eproto[0]);
}

// ===================================================================

class Msg_DBGS_UpdateData::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_DBGS_UpdateData>()._has_bits_);
  static void set_has_uigroupid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uiprotocol(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_strmsg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Msg_DBGS_UpdateData::Msg_DBGS_UpdateData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DBGS_UpdateData)
}
Msg_DBGS_UpdateData::Msg_DBGS_UpdateData(const Msg_DBGS_UpdateData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strmsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_strmsg()) {
    strmsg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strmsg(), 
      GetArenaForAllocation());
  }
  ::memcpy(&llaccid_, &from.llaccid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uiprotocol_) -
    reinterpret_cast<char*>(&llaccid_)) + sizeof(uiprotocol_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DBGS_UpdateData)
}

inline void Msg_DBGS_UpdateData::SharedCtor() {
strmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strmsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&llaccid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uiprotocol_) -
    reinterpret_cast<char*>(&llaccid_)) + sizeof(uiprotocol_));
}

Msg_DBGS_UpdateData::~Msg_DBGS_UpdateData() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_DBGS_UpdateData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_DBGS_UpdateData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strmsg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_DBGS_UpdateData::ArenaDtor(void* object) {
  Msg_DBGS_UpdateData* _this = reinterpret_cast< Msg_DBGS_UpdateData* >(object);
  (void)_this;
}
void Msg_DBGS_UpdateData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_DBGS_UpdateData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_DBGS_UpdateData::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_DBGS_UpdateData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    strmsg_.ClearNonDefaultToEmpty();
  }
  ::memset(&llaccid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiactivityid_) -
      reinterpret_cast<char*>(&llaccid_)) + sizeof(uiactivityid_));
  if (cached_has_bits & 0x00000006u) {
    ::memset(&uigroupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uiprotocol_) -
        reinterpret_cast<char*>(&uigroupid_)) + sizeof(uiprotocol_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_DBGS_UpdateData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 llAccId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          llaccid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiModuleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uimoduleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 uiActivityId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uiactivityid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 uiGroupId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_uigroupid(&has_bits);
          uigroupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 uiProtocol = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_uiprotocol(&has_bits);
          uiprotocol_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes strMsg = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_strmsg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_DBGS_UpdateData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_DBGS_UpdateData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 llAccId = 1;
  if (this->_internal_llaccid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_llaccid(), target);
  }

  // uint32 uiModuleId = 2;
  if (this->_internal_uimoduleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uimoduleid(), target);
  }

  // uint32 uiActivityId = 3;
  if (this->_internal_uiactivityid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_uiactivityid(), target);
  }

  // optional uint32 uiGroupId = 4;
  if (_internal_has_uigroupid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_uigroupid(), target);
  }

  // optional uint32 uiProtocol = 5;
  if (_internal_has_uiprotocol()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_uiprotocol(), target);
  }

  // optional bytes strMsg = 6;
  if (_internal_has_strmsg()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_strmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_DBGS_UpdateData)
  return target;
}

size_t Msg_DBGS_UpdateData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_DBGS_UpdateData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes strMsg = 6;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_strmsg());
  }

  // int64 llAccId = 1;
  if (this->_internal_llaccid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_llaccid());
  }

  // uint32 uiModuleId = 2;
  if (this->_internal_uimoduleid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_uimoduleid());
  }

  // uint32 uiActivityId = 3;
  if (this->_internal_uiactivityid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_uiactivityid());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional uint32 uiGroupId = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_uigroupid());
    }

    // optional uint32 uiProtocol = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_uiprotocol());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DBGS_UpdateData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_DBGS_UpdateData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DBGS_UpdateData::GetClassData() const { return &_class_data_; }

void Msg_DBGS_UpdateData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_DBGS_UpdateData *>(to)->MergeFrom(
      static_cast<const Msg_DBGS_UpdateData &>(from));
}


void Msg_DBGS_UpdateData::MergeFrom(const Msg_DBGS_UpdateData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_DBGS_UpdateData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_strmsg()) {
    _internal_set_strmsg(from._internal_strmsg());
  }
  if (from._internal_llaccid() != 0) {
    _internal_set_llaccid(from._internal_llaccid());
  }
  if (from._internal_uimoduleid() != 0) {
    _internal_set_uimoduleid(from._internal_uimoduleid());
  }
  if (from._internal_uiactivityid() != 0) {
    _internal_set_uiactivityid(from._internal_uiactivityid());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    if (cached_has_bits & 0x00000002u) {
      uigroupid_ = from.uigroupid_;
    }
    if (cached_has_bits & 0x00000004u) {
      uiprotocol_ = from.uiprotocol_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_DBGS_UpdateData::CopyFrom(const Msg_DBGS_UpdateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_DBGS_UpdateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DBGS_UpdateData::IsInitialized() const {
  return true;
}

void Msg_DBGS_UpdateData::InternalSwap(Msg_DBGS_UpdateData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strmsg_, lhs_arena,
      &other->strmsg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_DBGS_UpdateData, uiprotocol_)
      + sizeof(Msg_DBGS_UpdateData::uiprotocol_)
      - PROTOBUF_FIELD_OFFSET(Msg_DBGS_UpdateData, llaccid_)>(
          reinterpret_cast<char*>(&llaccid_),
          reinterpret_cast<char*>(&other->llaccid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_DBGS_UpdateData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgDBCommon_2eproto_getter, &descriptor_table_server_2fMsgDBCommon_2eproto_once,
      file_level_metadata_server_2fMsgDBCommon_2eproto[1]);
}

// ===================================================================

class Msg_DBGS_UpdateVersion::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_DBGS_UpdateVersion>()._has_bits_);
  static void set_has_strversion(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_llreset(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Msg_DBGS_UpdateVersion::Msg_DBGS_UpdateVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DBGS_UpdateVersion)
}
Msg_DBGS_UpdateVersion::Msg_DBGS_UpdateVersion(const Msg_DBGS_UpdateVersion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_strversion()) {
    strversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strversion(), 
      GetArenaForAllocation());
  }
  llreset_ = from.llreset_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DBGS_UpdateVersion)
}

inline void Msg_DBGS_UpdateVersion::SharedCtor() {
strversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
llreset_ = int64_t{0};
}

Msg_DBGS_UpdateVersion::~Msg_DBGS_UpdateVersion() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_DBGS_UpdateVersion)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_DBGS_UpdateVersion::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_DBGS_UpdateVersion::ArenaDtor(void* object) {
  Msg_DBGS_UpdateVersion* _this = reinterpret_cast< Msg_DBGS_UpdateVersion* >(object);
  (void)_this;
}
void Msg_DBGS_UpdateVersion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_DBGS_UpdateVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_DBGS_UpdateVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_DBGS_UpdateVersion)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    strversion_.ClearNonDefaultToEmpty();
  }
  llreset_ = int64_t{0};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_DBGS_UpdateVersion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string strVersion = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_strversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_DBGS_UpdateVersion.strVersion"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 llReset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_llreset(&has_bits);
          llreset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_DBGS_UpdateVersion::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_DBGS_UpdateVersion)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string strVersion = 1;
  if (_internal_has_strversion()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strversion().data(), static_cast<int>(this->_internal_strversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_DBGS_UpdateVersion.strVersion");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_strversion(), target);
  }

  // optional int64 llReset = 2;
  if (_internal_has_llreset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_llreset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_DBGS_UpdateVersion)
  return target;
}

size_t Msg_DBGS_UpdateVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_DBGS_UpdateVersion)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string strVersion = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_strversion());
    }

    // optional int64 llReset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_llreset());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DBGS_UpdateVersion::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_DBGS_UpdateVersion::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DBGS_UpdateVersion::GetClassData() const { return &_class_data_; }

void Msg_DBGS_UpdateVersion::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_DBGS_UpdateVersion *>(to)->MergeFrom(
      static_cast<const Msg_DBGS_UpdateVersion &>(from));
}


void Msg_DBGS_UpdateVersion::MergeFrom(const Msg_DBGS_UpdateVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_DBGS_UpdateVersion)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_strversion(from._internal_strversion());
    }
    if (cached_has_bits & 0x00000002u) {
      llreset_ = from.llreset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_DBGS_UpdateVersion::CopyFrom(const Msg_DBGS_UpdateVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_DBGS_UpdateVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DBGS_UpdateVersion::IsInitialized() const {
  return true;
}

void Msg_DBGS_UpdateVersion::InternalSwap(Msg_DBGS_UpdateVersion* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strversion_, lhs_arena,
      &other->strversion_, rhs_arena
  );
  swap(llreset_, other->llreset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_DBGS_UpdateVersion::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgDBCommon_2eproto_getter, &descriptor_table_server_2fMsgDBCommon_2eproto_once,
      file_level_metadata_server_2fMsgDBCommon_2eproto[2]);
}

// ===================================================================

class Msg_DBGS_UpdateSign::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_DBGS_UpdateSign>()._has_bits_);
  static void set_has_uisignedday(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_uisupplement(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Msg_DBGS_UpdateSign::Msg_DBGS_UpdateSign(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DBGS_UpdateSign)
}
Msg_DBGS_UpdateSign::Msg_DBGS_UpdateSign(const Msg_DBGS_UpdateSign& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&uisignedday_, &from.uisignedday_,
    static_cast<size_t>(reinterpret_cast<char*>(&uisupplement_) -
    reinterpret_cast<char*>(&uisignedday_)) + sizeof(uisupplement_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DBGS_UpdateSign)
}

inline void Msg_DBGS_UpdateSign::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uisignedday_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uisupplement_) -
    reinterpret_cast<char*>(&uisignedday_)) + sizeof(uisupplement_));
}

Msg_DBGS_UpdateSign::~Msg_DBGS_UpdateSign() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_DBGS_UpdateSign)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_DBGS_UpdateSign::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_DBGS_UpdateSign::ArenaDtor(void* object) {
  Msg_DBGS_UpdateSign* _this = reinterpret_cast< Msg_DBGS_UpdateSign* >(object);
  (void)_this;
}
void Msg_DBGS_UpdateSign::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_DBGS_UpdateSign::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_DBGS_UpdateSign::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_DBGS_UpdateSign)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&uisignedday_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uisupplement_) -
        reinterpret_cast<char*>(&uisignedday_)) + sizeof(uisupplement_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_DBGS_UpdateSign::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 uiSignedDay = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_uisignedday(&has_bits);
          uisignedday_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 uiSupplement = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_uisupplement(&has_bits);
          uisupplement_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_DBGS_UpdateSign::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_DBGS_UpdateSign)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional uint32 uiSignedDay = 1;
  if (_internal_has_uisignedday()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_uisignedday(), target);
  }

  // optional uint32 uiSupplement = 2;
  if (_internal_has_uisupplement()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_uisupplement(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_DBGS_UpdateSign)
  return target;
}

size_t Msg_DBGS_UpdateSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_DBGS_UpdateSign)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 uiSignedDay = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_uisignedday());
    }

    // optional uint32 uiSupplement = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_uisupplement());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DBGS_UpdateSign::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_DBGS_UpdateSign::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DBGS_UpdateSign::GetClassData() const { return &_class_data_; }

void Msg_DBGS_UpdateSign::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_DBGS_UpdateSign *>(to)->MergeFrom(
      static_cast<const Msg_DBGS_UpdateSign &>(from));
}


void Msg_DBGS_UpdateSign::MergeFrom(const Msg_DBGS_UpdateSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_DBGS_UpdateSign)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      uisignedday_ = from.uisignedday_;
    }
    if (cached_has_bits & 0x00000002u) {
      uisupplement_ = from.uisupplement_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_DBGS_UpdateSign::CopyFrom(const Msg_DBGS_UpdateSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_DBGS_UpdateSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DBGS_UpdateSign::IsInitialized() const {
  return true;
}

void Msg_DBGS_UpdateSign::InternalSwap(Msg_DBGS_UpdateSign* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_DBGS_UpdateSign, uisupplement_)
      + sizeof(Msg_DBGS_UpdateSign::uisupplement_)
      - PROTOBUF_FIELD_OFFSET(Msg_DBGS_UpdateSign, uisignedday_)>(
          reinterpret_cast<char*>(&uisignedday_),
          reinterpret_cast<char*>(&other->uisignedday_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_DBGS_UpdateSign::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgDBCommon_2eproto_getter, &descriptor_table_server_2fMsgDBCommon_2eproto_once,
      file_level_metadata_server_2fMsgDBCommon_2eproto[3]);
}

// ===================================================================

class DBGS_COM_Value::_Internal {
 public:
};

DBGS_COM_Value::DBGS_COM_Value(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.DBGS_COM_Value)
}
DBGS_COM_Value::DBGS_COM_Value(const DBGS_COM_Value& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&index_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:XrPb.DBGS_COM_Value)
}

inline void DBGS_COM_Value::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&index_)) + sizeof(value_));
}

DBGS_COM_Value::~DBGS_COM_Value() {
  // @@protoc_insertion_point(destructor:XrPb.DBGS_COM_Value)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DBGS_COM_Value::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DBGS_COM_Value::ArenaDtor(void* object) {
  DBGS_COM_Value* _this = reinterpret_cast< DBGS_COM_Value* >(object);
  (void)_this;
}
void DBGS_COM_Value::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DBGS_COM_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DBGS_COM_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.DBGS_COM_Value)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&index_)) + sizeof(value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DBGS_COM_Value::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DBGS_COM_Value::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.DBGS_COM_Value)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  // int32 value = 2;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.DBGS_COM_Value)
  return target;
}

size_t DBGS_COM_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.DBGS_COM_Value)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_index());
  }

  // int32 value = 2;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DBGS_COM_Value::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DBGS_COM_Value::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DBGS_COM_Value::GetClassData() const { return &_class_data_; }

void DBGS_COM_Value::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DBGS_COM_Value *>(to)->MergeFrom(
      static_cast<const DBGS_COM_Value &>(from));
}


void DBGS_COM_Value::MergeFrom(const DBGS_COM_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.DBGS_COM_Value)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DBGS_COM_Value::CopyFrom(const DBGS_COM_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.DBGS_COM_Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBGS_COM_Value::IsInitialized() const {
  return true;
}

void DBGS_COM_Value::InternalSwap(DBGS_COM_Value* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBGS_COM_Value, value_)
      + sizeof(DBGS_COM_Value::value_)
      - PROTOBUF_FIELD_OFFSET(DBGS_COM_Value, index_)>(
          reinterpret_cast<char*>(&index_),
          reinterpret_cast<char*>(&other->index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DBGS_COM_Value::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgDBCommon_2eproto_getter, &descriptor_table_server_2fMsgDBCommon_2eproto_once,
      file_level_metadata_server_2fMsgDBCommon_2eproto[4]);
}

// ===================================================================

class Msg_DBGS_UpdateValue::_Internal {
 public:
  static const ::XrPb::DBGS_COM_Value& ovalue(const Msg_DBGS_UpdateValue* msg);
};

const ::XrPb::DBGS_COM_Value&
Msg_DBGS_UpdateValue::_Internal::ovalue(const Msg_DBGS_UpdateValue* msg) {
  return *msg->ovalue_;
}
Msg_DBGS_UpdateValue::Msg_DBGS_UpdateValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DBGS_UpdateValue)
}
Msg_DBGS_UpdateValue::Msg_DBGS_UpdateValue(const Msg_DBGS_UpdateValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ovalue()) {
    ovalue_ = new ::XrPb::DBGS_COM_Value(*from.ovalue_);
  } else {
    ovalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DBGS_UpdateValue)
}

inline void Msg_DBGS_UpdateValue::SharedCtor() {
ovalue_ = nullptr;
}

Msg_DBGS_UpdateValue::~Msg_DBGS_UpdateValue() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_DBGS_UpdateValue)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_DBGS_UpdateValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete ovalue_;
}

void Msg_DBGS_UpdateValue::ArenaDtor(void* object) {
  Msg_DBGS_UpdateValue* _this = reinterpret_cast< Msg_DBGS_UpdateValue* >(object);
  (void)_this;
}
void Msg_DBGS_UpdateValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_DBGS_UpdateValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_DBGS_UpdateValue::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_DBGS_UpdateValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && ovalue_ != nullptr) {
    delete ovalue_;
  }
  ovalue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_DBGS_UpdateValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .XrPb.DBGS_COM_Value oValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ovalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_DBGS_UpdateValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_DBGS_UpdateValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .XrPb.DBGS_COM_Value oValue = 1;
  if (this->_internal_has_ovalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ovalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_DBGS_UpdateValue)
  return target;
}

size_t Msg_DBGS_UpdateValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_DBGS_UpdateValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .XrPb.DBGS_COM_Value oValue = 1;
  if (this->_internal_has_ovalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ovalue_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DBGS_UpdateValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_DBGS_UpdateValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DBGS_UpdateValue::GetClassData() const { return &_class_data_; }

void Msg_DBGS_UpdateValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_DBGS_UpdateValue *>(to)->MergeFrom(
      static_cast<const Msg_DBGS_UpdateValue &>(from));
}


void Msg_DBGS_UpdateValue::MergeFrom(const Msg_DBGS_UpdateValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_DBGS_UpdateValue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_ovalue()) {
    _internal_mutable_ovalue()->::XrPb::DBGS_COM_Value::MergeFrom(from._internal_ovalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_DBGS_UpdateValue::CopyFrom(const Msg_DBGS_UpdateValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_DBGS_UpdateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DBGS_UpdateValue::IsInitialized() const {
  return true;
}

void Msg_DBGS_UpdateValue::InternalSwap(Msg_DBGS_UpdateValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ovalue_, other->ovalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_DBGS_UpdateValue::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgDBCommon_2eproto_getter, &descriptor_table_server_2fMsgDBCommon_2eproto_once,
      file_level_metadata_server_2fMsgDBCommon_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace XrPb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::XrPb::MsgSvrMod_DBCommon* Arena::CreateMaybeMessage< ::XrPb::MsgSvrMod_DBCommon >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::MsgSvrMod_DBCommon >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DBGS_UpdateData* Arena::CreateMaybeMessage< ::XrPb::Msg_DBGS_UpdateData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DBGS_UpdateData >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DBGS_UpdateVersion* Arena::CreateMaybeMessage< ::XrPb::Msg_DBGS_UpdateVersion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DBGS_UpdateVersion >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DBGS_UpdateSign* Arena::CreateMaybeMessage< ::XrPb::Msg_DBGS_UpdateSign >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DBGS_UpdateSign >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::DBGS_COM_Value* Arena::CreateMaybeMessage< ::XrPb::DBGS_COM_Value >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::DBGS_COM_Value >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DBGS_UpdateValue* Arena::CreateMaybeMessage< ::XrPb::Msg_DBGS_UpdateValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DBGS_UpdateValue >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
