// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server/MsgGsWs.proto

#include "server/MsgGsWs.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace XrPb {
constexpr MsgSvrMod_GsWs::MsgSvrMod_GsWs(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgSvrMod_GsWsDefaultTypeInternal {
  constexpr MsgSvrMod_GsWsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgSvrMod_GsWsDefaultTypeInternal() {}
  union {
    MsgSvrMod_GsWs _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgSvrMod_GsWsDefaultTypeInternal _MsgSvrMod_GsWs_default_instance_;
constexpr GsWs_PlayerInfo::GsWs_PlayerInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : strrolename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , channel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , form_(nullptr)
  , gameversion_(nullptr)
  , uiaccid_(int64_t{0})
  , uiroleid_(int64_t{0})
  , uilevel_(0u)
  , province_(0u)
  , gm_level_(0u)
  , proarea_(0u)
  , bnewserver_(false)
  , llpunishtime_(int64_t{0}){}
struct GsWs_PlayerInfoDefaultTypeInternal {
  constexpr GsWs_PlayerInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GsWs_PlayerInfoDefaultTypeInternal() {}
  union {
    GsWs_PlayerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GsWs_PlayerInfoDefaultTypeInternal _GsWs_PlayerInfo_default_instance_;
constexpr Msg_GsWs_ConfirmEnter_CS::Msg_GsWs_ConfirmEnter_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GsWs_ConfirmEnter_CSDefaultTypeInternal {
  constexpr Msg_GsWs_ConfirmEnter_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_ConfirmEnter_CSDefaultTypeInternal() {}
  union {
    Msg_GsWs_ConfirmEnter_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_ConfirmEnter_CSDefaultTypeInternal _Msg_GsWs_ConfirmEnter_CS_default_instance_;
constexpr Msg_GsWs_GetRoomInfo_CS::Msg_GsWs_GetRoomInfo_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GsWs_GetRoomInfo_CSDefaultTypeInternal {
  constexpr Msg_GsWs_GetRoomInfo_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_GetRoomInfo_CSDefaultTypeInternal() {}
  union {
    Msg_GsWs_GetRoomInfo_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_GetRoomInfo_CSDefaultTypeInternal _Msg_GsWs_GetRoomInfo_CS_default_instance_;
constexpr Msg_GsWs_GetMatchInfo_CS::Msg_GsWs_GetMatchInfo_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GsWs_GetMatchInfo_CSDefaultTypeInternal {
  constexpr Msg_GsWs_GetMatchInfo_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_GetMatchInfo_CSDefaultTypeInternal() {}
  union {
    Msg_GsWs_GetMatchInfo_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_GetMatchInfo_CSDefaultTypeInternal _Msg_GsWs_GetMatchInfo_CS_default_instance_;
constexpr Msg_GsWs_ExitRoom_PUSH::Msg_GsWs_ExitRoom_PUSH(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GsWs_ExitRoom_PUSHDefaultTypeInternal {
  constexpr Msg_GsWs_ExitRoom_PUSHDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_ExitRoom_PUSHDefaultTypeInternal() {}
  union {
    Msg_GsWs_ExitRoom_PUSH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_ExitRoom_PUSHDefaultTypeInternal _Msg_GsWs_ExitRoom_PUSH_default_instance_;
constexpr Msg_GsWs_PlayerOnline_CS::Msg_GsWs_PlayerOnline_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : passed_boss_()
  , _passed_boss_cached_byte_size_(0){}
struct Msg_GsWs_PlayerOnline_CSDefaultTypeInternal {
  constexpr Msg_GsWs_PlayerOnline_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_PlayerOnline_CSDefaultTypeInternal() {}
  union {
    Msg_GsWs_PlayerOnline_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_PlayerOnline_CSDefaultTypeInternal _Msg_GsWs_PlayerOnline_CS_default_instance_;
constexpr Msg_GsWs_PlayerOffline_CS::Msg_GsWs_PlayerOffline_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GsWs_PlayerOffline_CSDefaultTypeInternal {
  constexpr Msg_GsWs_PlayerOffline_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_PlayerOffline_CSDefaultTypeInternal() {}
  union {
    Msg_GsWs_PlayerOffline_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_PlayerOffline_CSDefaultTypeInternal _Msg_GsWs_PlayerOffline_CS_default_instance_;
constexpr Msg_GsWs_SetRoomConfig_CS::Msg_GsWs_SetRoomConfig_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scene_time_(0u)
  , life_num_(0u){}
struct Msg_GsWs_SetRoomConfig_CSDefaultTypeInternal {
  constexpr Msg_GsWs_SetRoomConfig_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_SetRoomConfig_CSDefaultTypeInternal() {}
  union {
    Msg_GsWs_SetRoomConfig_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_SetRoomConfig_CSDefaultTypeInternal _Msg_GsWs_SetRoomConfig_CS_default_instance_;
constexpr Msg_GsWs_SetCustomRoomType_CS::Msg_GsWs_SetCustomRoomType_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GsWs_SetCustomRoomType_CSDefaultTypeInternal {
  constexpr Msg_GsWs_SetCustomRoomType_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_SetCustomRoomType_CSDefaultTypeInternal() {}
  union {
    Msg_GsWs_SetCustomRoomType_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_SetCustomRoomType_CSDefaultTypeInternal _Msg_GsWs_SetCustomRoomType_CS_default_instance_;
constexpr Msg_GsWs_SetCustomRoomMap_CS::Msg_GsWs_SetCustomRoomMap_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : map_id_(0u){}
struct Msg_GsWs_SetCustomRoomMap_CSDefaultTypeInternal {
  constexpr Msg_GsWs_SetCustomRoomMap_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_SetCustomRoomMap_CSDefaultTypeInternal() {}
  union {
    Msg_GsWs_SetCustomRoomMap_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_SetCustomRoomMap_CSDefaultTypeInternal _Msg_GsWs_SetCustomRoomMap_CS_default_instance_;
constexpr Msg_GsWs_UpdatePlayerStatus::Msg_GsWs_UpdatePlayerStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scenelogid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uiaccid_(int64_t{0})
  , status_(0)

  , syserror_(false){}
struct Msg_GsWs_UpdatePlayerStatusDefaultTypeInternal {
  constexpr Msg_GsWs_UpdatePlayerStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_UpdatePlayerStatusDefaultTypeInternal() {}
  union {
    Msg_GsWs_UpdatePlayerStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_UpdatePlayerStatusDefaultTypeInternal _Msg_GsWs_UpdatePlayerStatus_default_instance_;
constexpr Msg_GsWs_AppResVer_Push::Msg_GsWs_AppResVer_Push(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : appver_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , resver_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Msg_GsWs_AppResVer_PushDefaultTypeInternal {
  constexpr Msg_GsWs_AppResVer_PushDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GsWs_AppResVer_PushDefaultTypeInternal() {}
  union {
    Msg_GsWs_AppResVer_Push _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GsWs_AppResVer_PushDefaultTypeInternal _Msg_GsWs_AppResVer_Push_default_instance_;
}  // namespace XrPb
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_server_2fMsgGsWs_2eproto[13];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_server_2fMsgGsWs_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_server_2fMsgGsWs_2eproto = nullptr;

const uint32_t TableStruct_server_2fMsgGsWs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::MsgSvrMod_GsWs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, uiaccid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, uiroleid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, strrolename_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, form_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, uilevel_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, province_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, proarea_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, bnewserver_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, channel_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, gm_level_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, gameversion_),
  PROTOBUF_FIELD_OFFSET(::XrPb::GsWs_PlayerInfo, llpunishtime_),
  ~0u,
  ~0u,
  0,
  2,
  4,
  5,
  7,
  8,
  1,
  6,
  3,
  9,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_ConfirmEnter_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_GetRoomInfo_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_GetMatchInfo_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_ExitRoom_PUSH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_PlayerOnline_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_PlayerOnline_CS, passed_boss_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_PlayerOffline_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_SetRoomConfig_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_SetRoomConfig_CS, scene_time_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_SetRoomConfig_CS, life_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_SetCustomRoomType_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_SetCustomRoomMap_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_SetCustomRoomMap_CS, map_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_UpdatePlayerStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_UpdatePlayerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_UpdatePlayerStatus, uiaccid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_UpdatePlayerStatus, status_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_UpdatePlayerStatus, scenelogid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_UpdatePlayerStatus, syserror_),
  ~0u,
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_AppResVer_Push, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_AppResVer_Push, appver_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GsWs_AppResVer_Push, resver_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::XrPb::MsgSvrMod_GsWs)},
  { 6, 24, -1, sizeof(::XrPb::GsWs_PlayerInfo)},
  { 36, -1, -1, sizeof(::XrPb::Msg_GsWs_ConfirmEnter_CS)},
  { 42, -1, -1, sizeof(::XrPb::Msg_GsWs_GetRoomInfo_CS)},
  { 48, -1, -1, sizeof(::XrPb::Msg_GsWs_GetMatchInfo_CS)},
  { 54, -1, -1, sizeof(::XrPb::Msg_GsWs_ExitRoom_PUSH)},
  { 60, -1, -1, sizeof(::XrPb::Msg_GsWs_PlayerOnline_CS)},
  { 67, -1, -1, sizeof(::XrPb::Msg_GsWs_PlayerOffline_CS)},
  { 73, -1, -1, sizeof(::XrPb::Msg_GsWs_SetRoomConfig_CS)},
  { 81, -1, -1, sizeof(::XrPb::Msg_GsWs_SetCustomRoomType_CS)},
  { 87, -1, -1, sizeof(::XrPb::Msg_GsWs_SetCustomRoomMap_CS)},
  { 94, 104, -1, sizeof(::XrPb::Msg_GsWs_UpdatePlayerStatus)},
  { 108, -1, -1, sizeof(::XrPb::Msg_GsWs_AppResVer_Push)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_MsgSvrMod_GsWs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_GsWs_PlayerInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_ConfirmEnter_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_GetRoomInfo_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_GetMatchInfo_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_ExitRoom_PUSH_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_PlayerOnline_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_PlayerOffline_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_SetRoomConfig_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_SetCustomRoomType_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_SetCustomRoomMap_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_UpdatePlayerStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GsWs_AppResVer_Push_default_instance_),
};

const char descriptor_table_protodef_server_2fMsgGsWs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024server/MsgGsWs.proto\022\004XrPb\032\023client/Com"
  "mon.proto\"\343\002\n\016MsgSvrMod_GsWs\"\320\002\n\005MsgId\022\021"
  "\n\rMsg_GsWs_None\020\000\022\034\n\030Msg_GsWs_ConfirmEnt"
  "er_CS\020\001\022\033\n\027Msg_GsWs_GetRoomInfo_CS\020\002\022\032\n\026"
  "Msg_GsWs_ExitRoom_PUSH\020\003\022\037\n\033Msg_GsWs_Upd"
  "atePlayerStatus\020\004\022\033\n\027Msg_GsWs_AppResVer_"
  "Push\020\005\022\034\n\030Msg_GsWs_PlayerOnline_CS\020\006\022\035\n\031"
  "Msg_GsWs_PlayerOffline_CS\020\007\022\035\n\031Msg_GsWs_"
  "SetRoomConfig_CS\020\010\022!\n\035Msg_GsWs_SetCustom"
  "RoomType_CS\020\t\022 \n\034Msg_GsWs_SetCustomRoomM"
  "ap_CS\020\n\"\311\003\n\017GsWs_PlayerInfo\022\017\n\007uiAccID\030\001"
  " \001(\003\022\020\n\010uiRoleId\030\002 \001(\003\022\030\n\013strRoleName\030\003 "
  "\001(\tH\000\210\001\001\022!\n\004form\030\n \001(\0132\016.XrPb.FormDataH\001"
  "\210\001\001\022\024\n\007uiLevel\030\013 \001(\rH\002\210\001\001\022\025\n\010province\030\016 "
  "\001(\rH\003\210\001\001\022\024\n\007proarea\030\017 \001(\rH\004\210\001\001\022\027\n\nbNewSe"
  "rver\030\021 \001(\010H\005\210\001\001\022\024\n\007channel\030\030 \001(\tH\006\210\001\001\022\025\n"
  "\010gm_level\030\031 \001(\rH\007\210\001\001\022+\n\013gameversion\030\034 \001("
  "\0132\021.XrPb.GameVersionH\010\210\001\001\022\031\n\014llPunishTim"
  "e\030  \001(\003H\t\210\001\001B\016\n\014_strRoleNameB\007\n\005_formB\n\n"
  "\010_uiLevelB\013\n\t_provinceB\n\n\010_proareaB\r\n\013_b"
  "NewServerB\n\n\010_channelB\013\n\t_gm_levelB\016\n\014_g"
  "ameversionB\017\n\r_llPunishTime\"\032\n\030Msg_GsWs_"
  "ConfirmEnter_CS\"\031\n\027Msg_GsWs_GetRoomInfo_"
  "CS\"\032\n\030Msg_GsWs_GetMatchInfo_CS\"\030\n\026Msg_Gs"
  "Ws_ExitRoom_PUSH\"/\n\030Msg_GsWs_PlayerOnlin"
  "e_CS\022\023\n\013passed_boss\030\001 \003(\r\"\033\n\031Msg_GsWs_Pl"
  "ayerOffline_CS\"A\n\031Msg_GsWs_SetRoomConfig"
  "_CS\022\022\n\nscene_time\030\001 \001(\r\022\020\n\010life_num\030\002 \001("
  "\r\"\037\n\035Msg_GsWs_SetCustomRoomType_CS\".\n\034Ms"
  "g_GsWs_SetCustomRoomMap_CS\022\016\n\006map_id\030\001 \001"
  "(\r\"\212\001\n\033Msg_GsWs_UpdatePlayerStatus\022\017\n\007ui"
  "AccID\030\001 \001(\003\022\"\n\006status\030\002 \001(\0162\022.XrPb.Playe"
  "rStatus\022\022\n\nSceneLogid\030\003 \001(\t\022\025\n\010syserror\030"
  "\004 \001(\010H\000\210\001\001B\013\n\t_syserror\"9\n\027Msg_GsWs_AppR"
  "esVer_Push\022\016\n\006AppVer\030\001 \001(\t\022\016\n\006ResVer\030\002 \001"
  "(\tb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_server_2fMsgGsWs_2eproto_deps[1] = {
  &::descriptor_table_client_2fCommon_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_server_2fMsgGsWs_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_server_2fMsgGsWs_2eproto = {
  false, false, 1410, descriptor_table_protodef_server_2fMsgGsWs_2eproto, "server/MsgGsWs.proto", 
  &descriptor_table_server_2fMsgGsWs_2eproto_once, descriptor_table_server_2fMsgGsWs_2eproto_deps, 1, 13,
  schemas, file_default_instances, TableStruct_server_2fMsgGsWs_2eproto::offsets,
  file_level_metadata_server_2fMsgGsWs_2eproto, file_level_enum_descriptors_server_2fMsgGsWs_2eproto, file_level_service_descriptors_server_2fMsgGsWs_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_server_2fMsgGsWs_2eproto_getter() {
  return &descriptor_table_server_2fMsgGsWs_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_server_2fMsgGsWs_2eproto(&descriptor_table_server_2fMsgGsWs_2eproto);
namespace XrPb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgSvrMod_GsWs_MsgId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_server_2fMsgGsWs_2eproto);
  return file_level_enum_descriptors_server_2fMsgGsWs_2eproto[0];
}
bool MsgSvrMod_GsWs_MsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_None;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_ConfirmEnter_CS;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_GetRoomInfo_CS;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_ExitRoom_PUSH;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_UpdatePlayerStatus;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_AppResVer_Push;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_PlayerOnline_CS;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_PlayerOffline_CS;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_SetRoomConfig_CS;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_SetCustomRoomType_CS;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::Msg_GsWs_SetCustomRoomMap_CS;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::MsgId_MIN;
constexpr MsgSvrMod_GsWs_MsgId MsgSvrMod_GsWs::MsgId_MAX;
constexpr int MsgSvrMod_GsWs::MsgId_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MsgSvrMod_GsWs::_Internal {
 public:
};

MsgSvrMod_GsWs::MsgSvrMod_GsWs(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.MsgSvrMod_GsWs)
}
MsgSvrMod_GsWs::MsgSvrMod_GsWs(const MsgSvrMod_GsWs& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.MsgSvrMod_GsWs)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSvrMod_GsWs::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSvrMod_GsWs::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgSvrMod_GsWs::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[0]);
}

// ===================================================================

class GsWs_PlayerInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<GsWs_PlayerInfo>()._has_bits_);
  static void set_has_strrolename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::XrPb::FormData& form(const GsWs_PlayerInfo* msg);
  static void set_has_form(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_uilevel(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_province(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_proarea(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_bnewserver(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_channel(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_gm_level(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::XrPb::GameVersion& gameversion(const GsWs_PlayerInfo* msg);
  static void set_has_gameversion(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_llpunishtime(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

const ::XrPb::FormData&
GsWs_PlayerInfo::_Internal::form(const GsWs_PlayerInfo* msg) {
  return *msg->form_;
}
const ::XrPb::GameVersion&
GsWs_PlayerInfo::_Internal::gameversion(const GsWs_PlayerInfo* msg) {
  return *msg->gameversion_;
}
void GsWs_PlayerInfo::clear_form() {
  if (form_ != nullptr) form_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void GsWs_PlayerInfo::clear_gameversion() {
  if (gameversion_ != nullptr) gameversion_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
GsWs_PlayerInfo::GsWs_PlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.GsWs_PlayerInfo)
}
GsWs_PlayerInfo::GsWs_PlayerInfo(const GsWs_PlayerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strrolename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strrolename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_strrolename()) {
    strrolename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strrolename(), 
      GetArenaForAllocation());
  }
  channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    channel_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_channel()) {
    channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channel(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_form()) {
    form_ = new ::XrPb::FormData(*from.form_);
  } else {
    form_ = nullptr;
  }
  if (from._internal_has_gameversion()) {
    gameversion_ = new ::XrPb::GameVersion(*from.gameversion_);
  } else {
    gameversion_ = nullptr;
  }
  ::memcpy(&uiaccid_, &from.uiaccid_,
    static_cast<size_t>(reinterpret_cast<char*>(&llpunishtime_) -
    reinterpret_cast<char*>(&uiaccid_)) + sizeof(llpunishtime_));
  // @@protoc_insertion_point(copy_constructor:XrPb.GsWs_PlayerInfo)
}

inline void GsWs_PlayerInfo::SharedCtor() {
strrolename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strrolename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  channel_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&form_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&llpunishtime_) -
    reinterpret_cast<char*>(&form_)) + sizeof(llpunishtime_));
}

GsWs_PlayerInfo::~GsWs_PlayerInfo() {
  // @@protoc_insertion_point(destructor:XrPb.GsWs_PlayerInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GsWs_PlayerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strrolename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete form_;
  if (this != internal_default_instance()) delete gameversion_;
}

void GsWs_PlayerInfo::ArenaDtor(void* object) {
  GsWs_PlayerInfo* _this = reinterpret_cast< GsWs_PlayerInfo* >(object);
  (void)_this;
}
void GsWs_PlayerInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GsWs_PlayerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GsWs_PlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.GsWs_PlayerInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      strrolename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      channel_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(form_ != nullptr);
      form_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(gameversion_ != nullptr);
      gameversion_->Clear();
    }
  }
  ::memset(&uiaccid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uiroleid_) -
      reinterpret_cast<char*>(&uiaccid_)) + sizeof(uiroleid_));
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&uilevel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&proarea_) -
        reinterpret_cast<char*>(&uilevel_)) + sizeof(proarea_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&bnewserver_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&llpunishtime_) -
        reinterpret_cast<char*>(&bnewserver_)) + sizeof(llpunishtime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GsWs_PlayerInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 uiAccID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uiaccid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 uiRoleId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uiroleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string strRoleName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_strrolename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.GsWs_PlayerInfo.strRoleName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .XrPb.FormData form = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_form(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 uiLevel = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_uilevel(&has_bits);
          uilevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 province = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_province(&has_bits);
          province_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 proarea = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _Internal::set_has_proarea(&has_bits);
          proarea_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool bNewServer = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _Internal::set_has_bnewserver(&has_bits);
          bnewserver_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string channel = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          auto str = _internal_mutable_channel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.GsWs_PlayerInfo.channel"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 gm_level = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          _Internal::set_has_gm_level(&has_bits);
          gm_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .XrPb.GameVersion gameversion = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr = ctx->ParseMessage(_internal_mutable_gameversion(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 llPunishTime = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _Internal::set_has_llpunishtime(&has_bits);
          llpunishtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GsWs_PlayerInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.GsWs_PlayerInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uiAccID = 1;
  if (this->_internal_uiaccid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_uiaccid(), target);
  }

  // int64 uiRoleId = 2;
  if (this->_internal_uiroleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_uiroleid(), target);
  }

  // optional string strRoleName = 3;
  if (_internal_has_strrolename()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strrolename().data(), static_cast<int>(this->_internal_strrolename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.GsWs_PlayerInfo.strRoleName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_strrolename(), target);
  }

  // optional .XrPb.FormData form = 10;
  if (_internal_has_form()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::form(this), target, stream);
  }

  // optional uint32 uiLevel = 11;
  if (_internal_has_uilevel()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_uilevel(), target);
  }

  // optional uint32 province = 14;
  if (_internal_has_province()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_province(), target);
  }

  // optional uint32 proarea = 15;
  if (_internal_has_proarea()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_proarea(), target);
  }

  // optional bool bNewServer = 17;
  if (_internal_has_bnewserver()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_bnewserver(), target);
  }

  // optional string channel = 24;
  if (_internal_has_channel()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channel().data(), static_cast<int>(this->_internal_channel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.GsWs_PlayerInfo.channel");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_channel(), target);
  }

  // optional uint32 gm_level = 25;
  if (_internal_has_gm_level()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(25, this->_internal_gm_level(), target);
  }

  // optional .XrPb.GameVersion gameversion = 28;
  if (_internal_has_gameversion()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        28, _Internal::gameversion(this), target, stream);
  }

  // optional int64 llPunishTime = 32;
  if (_internal_has_llpunishtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(32, this->_internal_llpunishtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.GsWs_PlayerInfo)
  return target;
}

size_t GsWs_PlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.GsWs_PlayerInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string strRoleName = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_strrolename());
    }

    // optional string channel = 24;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_channel());
    }

    // optional .XrPb.FormData form = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *form_);
    }

    // optional .XrPb.GameVersion gameversion = 28;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *gameversion_);
    }

  }
  // int64 uiAccID = 1;
  if (this->_internal_uiaccid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_uiaccid());
  }

  // int64 uiRoleId = 2;
  if (this->_internal_uiroleid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_uiroleid());
  }

  if (cached_has_bits & 0x000000f0u) {
    // optional uint32 uiLevel = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_uilevel());
    }

    // optional uint32 province = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_province());
    }

    // optional uint32 gm_level = 25;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_gm_level());
    }

    // optional uint32 proarea = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_proarea());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool bNewServer = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + 1;
    }

    // optional int64 llPunishTime = 32;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_llpunishtime());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GsWs_PlayerInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GsWs_PlayerInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GsWs_PlayerInfo::GetClassData() const { return &_class_data_; }

void GsWs_PlayerInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GsWs_PlayerInfo *>(to)->MergeFrom(
      static_cast<const GsWs_PlayerInfo &>(from));
}


void GsWs_PlayerInfo::MergeFrom(const GsWs_PlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.GsWs_PlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_strrolename(from._internal_strrolename());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_channel(from._internal_channel());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_form()->::XrPb::FormData::MergeFrom(from._internal_form());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_gameversion()->::XrPb::GameVersion::MergeFrom(from._internal_gameversion());
    }
  }
  if (from._internal_uiaccid() != 0) {
    _internal_set_uiaccid(from._internal_uiaccid());
  }
  if (from._internal_uiroleid() != 0) {
    _internal_set_uiroleid(from._internal_uiroleid());
  }
  if (cached_has_bits & 0x000000f0u) {
    if (cached_has_bits & 0x00000010u) {
      uilevel_ = from.uilevel_;
    }
    if (cached_has_bits & 0x00000020u) {
      province_ = from.province_;
    }
    if (cached_has_bits & 0x00000040u) {
      gm_level_ = from.gm_level_;
    }
    if (cached_has_bits & 0x00000080u) {
      proarea_ = from.proarea_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      bnewserver_ = from.bnewserver_;
    }
    if (cached_has_bits & 0x00000200u) {
      llpunishtime_ = from.llpunishtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GsWs_PlayerInfo::CopyFrom(const GsWs_PlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.GsWs_PlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GsWs_PlayerInfo::IsInitialized() const {
  return true;
}

void GsWs_PlayerInfo::InternalSwap(GsWs_PlayerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strrolename_, lhs_arena,
      &other->strrolename_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &channel_, lhs_arena,
      &other->channel_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GsWs_PlayerInfo, llpunishtime_)
      + sizeof(GsWs_PlayerInfo::llpunishtime_)
      - PROTOBUF_FIELD_OFFSET(GsWs_PlayerInfo, form_)>(
          reinterpret_cast<char*>(&form_),
          reinterpret_cast<char*>(&other->form_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GsWs_PlayerInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[1]);
}

// ===================================================================

class Msg_GsWs_ConfirmEnter_CS::_Internal {
 public:
};

Msg_GsWs_ConfirmEnter_CS::Msg_GsWs_ConfirmEnter_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_ConfirmEnter_CS)
}
Msg_GsWs_ConfirmEnter_CS::Msg_GsWs_ConfirmEnter_CS(const Msg_GsWs_ConfirmEnter_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_ConfirmEnter_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_ConfirmEnter_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_ConfirmEnter_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_ConfirmEnter_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[2]);
}

// ===================================================================

class Msg_GsWs_GetRoomInfo_CS::_Internal {
 public:
};

Msg_GsWs_GetRoomInfo_CS::Msg_GsWs_GetRoomInfo_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_GetRoomInfo_CS)
}
Msg_GsWs_GetRoomInfo_CS::Msg_GsWs_GetRoomInfo_CS(const Msg_GsWs_GetRoomInfo_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_GetRoomInfo_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_GetRoomInfo_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_GetRoomInfo_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_GetRoomInfo_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[3]);
}

// ===================================================================

class Msg_GsWs_GetMatchInfo_CS::_Internal {
 public:
};

Msg_GsWs_GetMatchInfo_CS::Msg_GsWs_GetMatchInfo_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_GetMatchInfo_CS)
}
Msg_GsWs_GetMatchInfo_CS::Msg_GsWs_GetMatchInfo_CS(const Msg_GsWs_GetMatchInfo_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_GetMatchInfo_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_GetMatchInfo_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_GetMatchInfo_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_GetMatchInfo_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[4]);
}

// ===================================================================

class Msg_GsWs_ExitRoom_PUSH::_Internal {
 public:
};

Msg_GsWs_ExitRoom_PUSH::Msg_GsWs_ExitRoom_PUSH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_ExitRoom_PUSH)
}
Msg_GsWs_ExitRoom_PUSH::Msg_GsWs_ExitRoom_PUSH(const Msg_GsWs_ExitRoom_PUSH& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_ExitRoom_PUSH)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_ExitRoom_PUSH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_ExitRoom_PUSH::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_ExitRoom_PUSH::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[5]);
}

// ===================================================================

class Msg_GsWs_PlayerOnline_CS::_Internal {
 public:
};

Msg_GsWs_PlayerOnline_CS::Msg_GsWs_PlayerOnline_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  passed_boss_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_PlayerOnline_CS)
}
Msg_GsWs_PlayerOnline_CS::Msg_GsWs_PlayerOnline_CS(const Msg_GsWs_PlayerOnline_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      passed_boss_(from.passed_boss_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_PlayerOnline_CS)
}

inline void Msg_GsWs_PlayerOnline_CS::SharedCtor() {
}

Msg_GsWs_PlayerOnline_CS::~Msg_GsWs_PlayerOnline_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GsWs_PlayerOnline_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GsWs_PlayerOnline_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_GsWs_PlayerOnline_CS::ArenaDtor(void* object) {
  Msg_GsWs_PlayerOnline_CS* _this = reinterpret_cast< Msg_GsWs_PlayerOnline_CS* >(object);
  (void)_this;
}
void Msg_GsWs_PlayerOnline_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GsWs_PlayerOnline_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GsWs_PlayerOnline_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GsWs_PlayerOnline_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  passed_boss_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GsWs_PlayerOnline_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 passed_boss = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_passed_boss(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_passed_boss(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GsWs_PlayerOnline_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GsWs_PlayerOnline_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 passed_boss = 1;
  {
    int byte_size = _passed_boss_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_passed_boss(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GsWs_PlayerOnline_CS)
  return target;
}

size_t Msg_GsWs_PlayerOnline_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GsWs_PlayerOnline_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 passed_boss = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->passed_boss_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _passed_boss_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_PlayerOnline_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GsWs_PlayerOnline_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_PlayerOnline_CS::GetClassData() const { return &_class_data_; }

void Msg_GsWs_PlayerOnline_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GsWs_PlayerOnline_CS *>(to)->MergeFrom(
      static_cast<const Msg_GsWs_PlayerOnline_CS &>(from));
}


void Msg_GsWs_PlayerOnline_CS::MergeFrom(const Msg_GsWs_PlayerOnline_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GsWs_PlayerOnline_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  passed_boss_.MergeFrom(from.passed_boss_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GsWs_PlayerOnline_CS::CopyFrom(const Msg_GsWs_PlayerOnline_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GsWs_PlayerOnline_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GsWs_PlayerOnline_CS::IsInitialized() const {
  return true;
}

void Msg_GsWs_PlayerOnline_CS::InternalSwap(Msg_GsWs_PlayerOnline_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  passed_boss_.InternalSwap(&other->passed_boss_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_PlayerOnline_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[6]);
}

// ===================================================================

class Msg_GsWs_PlayerOffline_CS::_Internal {
 public:
};

Msg_GsWs_PlayerOffline_CS::Msg_GsWs_PlayerOffline_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_PlayerOffline_CS)
}
Msg_GsWs_PlayerOffline_CS::Msg_GsWs_PlayerOffline_CS(const Msg_GsWs_PlayerOffline_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_PlayerOffline_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_PlayerOffline_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_PlayerOffline_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_PlayerOffline_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[7]);
}

// ===================================================================

class Msg_GsWs_SetRoomConfig_CS::_Internal {
 public:
};

Msg_GsWs_SetRoomConfig_CS::Msg_GsWs_SetRoomConfig_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_SetRoomConfig_CS)
}
Msg_GsWs_SetRoomConfig_CS::Msg_GsWs_SetRoomConfig_CS(const Msg_GsWs_SetRoomConfig_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&scene_time_, &from.scene_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&life_num_) -
    reinterpret_cast<char*>(&scene_time_)) + sizeof(life_num_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_SetRoomConfig_CS)
}

inline void Msg_GsWs_SetRoomConfig_CS::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&scene_time_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&life_num_) -
    reinterpret_cast<char*>(&scene_time_)) + sizeof(life_num_));
}

Msg_GsWs_SetRoomConfig_CS::~Msg_GsWs_SetRoomConfig_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GsWs_SetRoomConfig_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GsWs_SetRoomConfig_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_GsWs_SetRoomConfig_CS::ArenaDtor(void* object) {
  Msg_GsWs_SetRoomConfig_CS* _this = reinterpret_cast< Msg_GsWs_SetRoomConfig_CS* >(object);
  (void)_this;
}
void Msg_GsWs_SetRoomConfig_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GsWs_SetRoomConfig_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GsWs_SetRoomConfig_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GsWs_SetRoomConfig_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&life_num_) -
      reinterpret_cast<char*>(&scene_time_)) + sizeof(life_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GsWs_SetRoomConfig_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 scene_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          scene_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 life_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          life_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GsWs_SetRoomConfig_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GsWs_SetRoomConfig_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_time = 1;
  if (this->_internal_scene_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_scene_time(), target);
  }

  // uint32 life_num = 2;
  if (this->_internal_life_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_life_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GsWs_SetRoomConfig_CS)
  return target;
}

size_t Msg_GsWs_SetRoomConfig_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GsWs_SetRoomConfig_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 scene_time = 1;
  if (this->_internal_scene_time() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_scene_time());
  }

  // uint32 life_num = 2;
  if (this->_internal_life_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_life_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_SetRoomConfig_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GsWs_SetRoomConfig_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_SetRoomConfig_CS::GetClassData() const { return &_class_data_; }

void Msg_GsWs_SetRoomConfig_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GsWs_SetRoomConfig_CS *>(to)->MergeFrom(
      static_cast<const Msg_GsWs_SetRoomConfig_CS &>(from));
}


void Msg_GsWs_SetRoomConfig_CS::MergeFrom(const Msg_GsWs_SetRoomConfig_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GsWs_SetRoomConfig_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_scene_time() != 0) {
    _internal_set_scene_time(from._internal_scene_time());
  }
  if (from._internal_life_num() != 0) {
    _internal_set_life_num(from._internal_life_num());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GsWs_SetRoomConfig_CS::CopyFrom(const Msg_GsWs_SetRoomConfig_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GsWs_SetRoomConfig_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GsWs_SetRoomConfig_CS::IsInitialized() const {
  return true;
}

void Msg_GsWs_SetRoomConfig_CS::InternalSwap(Msg_GsWs_SetRoomConfig_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_GsWs_SetRoomConfig_CS, life_num_)
      + sizeof(Msg_GsWs_SetRoomConfig_CS::life_num_)
      - PROTOBUF_FIELD_OFFSET(Msg_GsWs_SetRoomConfig_CS, scene_time_)>(
          reinterpret_cast<char*>(&scene_time_),
          reinterpret_cast<char*>(&other->scene_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_SetRoomConfig_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[8]);
}

// ===================================================================

class Msg_GsWs_SetCustomRoomType_CS::_Internal {
 public:
};

Msg_GsWs_SetCustomRoomType_CS::Msg_GsWs_SetCustomRoomType_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_SetCustomRoomType_CS)
}
Msg_GsWs_SetCustomRoomType_CS::Msg_GsWs_SetCustomRoomType_CS(const Msg_GsWs_SetCustomRoomType_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_SetCustomRoomType_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_SetCustomRoomType_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_SetCustomRoomType_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_SetCustomRoomType_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[9]);
}

// ===================================================================

class Msg_GsWs_SetCustomRoomMap_CS::_Internal {
 public:
};

Msg_GsWs_SetCustomRoomMap_CS::Msg_GsWs_SetCustomRoomMap_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_SetCustomRoomMap_CS)
}
Msg_GsWs_SetCustomRoomMap_CS::Msg_GsWs_SetCustomRoomMap_CS(const Msg_GsWs_SetCustomRoomMap_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_id_ = from.map_id_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_SetCustomRoomMap_CS)
}

inline void Msg_GsWs_SetCustomRoomMap_CS::SharedCtor() {
map_id_ = 0u;
}

Msg_GsWs_SetCustomRoomMap_CS::~Msg_GsWs_SetCustomRoomMap_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GsWs_SetCustomRoomMap_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GsWs_SetCustomRoomMap_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_GsWs_SetCustomRoomMap_CS::ArenaDtor(void* object) {
  Msg_GsWs_SetCustomRoomMap_CS* _this = reinterpret_cast< Msg_GsWs_SetCustomRoomMap_CS* >(object);
  (void)_this;
}
void Msg_GsWs_SetCustomRoomMap_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GsWs_SetCustomRoomMap_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GsWs_SetCustomRoomMap_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GsWs_SetCustomRoomMap_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GsWs_SetCustomRoomMap_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 map_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          map_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GsWs_SetCustomRoomMap_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GsWs_SetCustomRoomMap_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 map_id = 1;
  if (this->_internal_map_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_map_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GsWs_SetCustomRoomMap_CS)
  return target;
}

size_t Msg_GsWs_SetCustomRoomMap_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GsWs_SetCustomRoomMap_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 map_id = 1;
  if (this->_internal_map_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_map_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_SetCustomRoomMap_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GsWs_SetCustomRoomMap_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_SetCustomRoomMap_CS::GetClassData() const { return &_class_data_; }

void Msg_GsWs_SetCustomRoomMap_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GsWs_SetCustomRoomMap_CS *>(to)->MergeFrom(
      static_cast<const Msg_GsWs_SetCustomRoomMap_CS &>(from));
}


void Msg_GsWs_SetCustomRoomMap_CS::MergeFrom(const Msg_GsWs_SetCustomRoomMap_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GsWs_SetCustomRoomMap_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_map_id() != 0) {
    _internal_set_map_id(from._internal_map_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GsWs_SetCustomRoomMap_CS::CopyFrom(const Msg_GsWs_SetCustomRoomMap_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GsWs_SetCustomRoomMap_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GsWs_SetCustomRoomMap_CS::IsInitialized() const {
  return true;
}

void Msg_GsWs_SetCustomRoomMap_CS::InternalSwap(Msg_GsWs_SetCustomRoomMap_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(map_id_, other->map_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_SetCustomRoomMap_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[10]);
}

// ===================================================================

class Msg_GsWs_UpdatePlayerStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_GsWs_UpdatePlayerStatus>()._has_bits_);
  static void set_has_syserror(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Msg_GsWs_UpdatePlayerStatus::Msg_GsWs_UpdatePlayerStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_UpdatePlayerStatus)
}
Msg_GsWs_UpdatePlayerStatus::Msg_GsWs_UpdatePlayerStatus(const Msg_GsWs_UpdatePlayerStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scenelogid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    scenelogid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_scenelogid().empty()) {
    scenelogid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_scenelogid(), 
      GetArenaForAllocation());
  }
  ::memcpy(&uiaccid_, &from.uiaccid_,
    static_cast<size_t>(reinterpret_cast<char*>(&syserror_) -
    reinterpret_cast<char*>(&uiaccid_)) + sizeof(syserror_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_UpdatePlayerStatus)
}

inline void Msg_GsWs_UpdatePlayerStatus::SharedCtor() {
scenelogid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  scenelogid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&uiaccid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&syserror_) -
    reinterpret_cast<char*>(&uiaccid_)) + sizeof(syserror_));
}

Msg_GsWs_UpdatePlayerStatus::~Msg_GsWs_UpdatePlayerStatus() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GsWs_UpdatePlayerStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GsWs_UpdatePlayerStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  scenelogid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_GsWs_UpdatePlayerStatus::ArenaDtor(void* object) {
  Msg_GsWs_UpdatePlayerStatus* _this = reinterpret_cast< Msg_GsWs_UpdatePlayerStatus* >(object);
  (void)_this;
}
void Msg_GsWs_UpdatePlayerStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GsWs_UpdatePlayerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GsWs_UpdatePlayerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GsWs_UpdatePlayerStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scenelogid_.ClearToEmpty();
  ::memset(&uiaccid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&uiaccid_)) + sizeof(status_));
  syserror_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GsWs_UpdatePlayerStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 uiAccID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uiaccid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .XrPb.PlayerStatus status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::XrPb::PlayerStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // string SceneLogid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_scenelogid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_GsWs_UpdatePlayerStatus.SceneLogid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool syserror = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_syserror(&has_bits);
          syserror_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GsWs_UpdatePlayerStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GsWs_UpdatePlayerStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uiAccID = 1;
  if (this->_internal_uiaccid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_uiaccid(), target);
  }

  // .XrPb.PlayerStatus status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  // string SceneLogid = 3;
  if (!this->_internal_scenelogid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scenelogid().data(), static_cast<int>(this->_internal_scenelogid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_GsWs_UpdatePlayerStatus.SceneLogid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_scenelogid(), target);
  }

  // optional bool syserror = 4;
  if (_internal_has_syserror()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_syserror(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GsWs_UpdatePlayerStatus)
  return target;
}

size_t Msg_GsWs_UpdatePlayerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GsWs_UpdatePlayerStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SceneLogid = 3;
  if (!this->_internal_scenelogid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scenelogid());
  }

  // int64 uiAccID = 1;
  if (this->_internal_uiaccid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_uiaccid());
  }

  // .XrPb.PlayerStatus status = 2;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  // optional bool syserror = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_UpdatePlayerStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GsWs_UpdatePlayerStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_UpdatePlayerStatus::GetClassData() const { return &_class_data_; }

void Msg_GsWs_UpdatePlayerStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GsWs_UpdatePlayerStatus *>(to)->MergeFrom(
      static_cast<const Msg_GsWs_UpdatePlayerStatus &>(from));
}


void Msg_GsWs_UpdatePlayerStatus::MergeFrom(const Msg_GsWs_UpdatePlayerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GsWs_UpdatePlayerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_scenelogid().empty()) {
    _internal_set_scenelogid(from._internal_scenelogid());
  }
  if (from._internal_uiaccid() != 0) {
    _internal_set_uiaccid(from._internal_uiaccid());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_has_syserror()) {
    _internal_set_syserror(from._internal_syserror());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GsWs_UpdatePlayerStatus::CopyFrom(const Msg_GsWs_UpdatePlayerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GsWs_UpdatePlayerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GsWs_UpdatePlayerStatus::IsInitialized() const {
  return true;
}

void Msg_GsWs_UpdatePlayerStatus::InternalSwap(Msg_GsWs_UpdatePlayerStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &scenelogid_, lhs_arena,
      &other->scenelogid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_GsWs_UpdatePlayerStatus, syserror_)
      + sizeof(Msg_GsWs_UpdatePlayerStatus::syserror_)
      - PROTOBUF_FIELD_OFFSET(Msg_GsWs_UpdatePlayerStatus, uiaccid_)>(
          reinterpret_cast<char*>(&uiaccid_),
          reinterpret_cast<char*>(&other->uiaccid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_UpdatePlayerStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[11]);
}

// ===================================================================

class Msg_GsWs_AppResVer_Push::_Internal {
 public:
};

Msg_GsWs_AppResVer_Push::Msg_GsWs_AppResVer_Push(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GsWs_AppResVer_Push)
}
Msg_GsWs_AppResVer_Push::Msg_GsWs_AppResVer_Push(const Msg_GsWs_AppResVer_Push& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  appver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    appver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_appver().empty()) {
    appver_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_appver(), 
      GetArenaForAllocation());
  }
  resver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    resver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resver().empty()) {
    resver_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resver(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GsWs_AppResVer_Push)
}

inline void Msg_GsWs_AppResVer_Push::SharedCtor() {
appver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  appver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
resver_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  resver_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Msg_GsWs_AppResVer_Push::~Msg_GsWs_AppResVer_Push() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GsWs_AppResVer_Push)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GsWs_AppResVer_Push::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  appver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resver_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_GsWs_AppResVer_Push::ArenaDtor(void* object) {
  Msg_GsWs_AppResVer_Push* _this = reinterpret_cast< Msg_GsWs_AppResVer_Push* >(object);
  (void)_this;
}
void Msg_GsWs_AppResVer_Push::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GsWs_AppResVer_Push::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GsWs_AppResVer_Push::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GsWs_AppResVer_Push)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appver_.ClearToEmpty();
  resver_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GsWs_AppResVer_Push::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string AppVer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_appver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_GsWs_AppResVer_Push.AppVer"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ResVer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_resver();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_GsWs_AppResVer_Push.ResVer"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GsWs_AppResVer_Push::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GsWs_AppResVer_Push)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string AppVer = 1;
  if (!this->_internal_appver().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_appver().data(), static_cast<int>(this->_internal_appver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_GsWs_AppResVer_Push.AppVer");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_appver(), target);
  }

  // string ResVer = 2;
  if (!this->_internal_resver().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resver().data(), static_cast<int>(this->_internal_resver().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_GsWs_AppResVer_Push.ResVer");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GsWs_AppResVer_Push)
  return target;
}

size_t Msg_GsWs_AppResVer_Push::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GsWs_AppResVer_Push)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AppVer = 1;
  if (!this->_internal_appver().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_appver());
  }

  // string ResVer = 2;
  if (!this->_internal_resver().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resver());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GsWs_AppResVer_Push::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GsWs_AppResVer_Push::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GsWs_AppResVer_Push::GetClassData() const { return &_class_data_; }

void Msg_GsWs_AppResVer_Push::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GsWs_AppResVer_Push *>(to)->MergeFrom(
      static_cast<const Msg_GsWs_AppResVer_Push &>(from));
}


void Msg_GsWs_AppResVer_Push::MergeFrom(const Msg_GsWs_AppResVer_Push& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GsWs_AppResVer_Push)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_appver().empty()) {
    _internal_set_appver(from._internal_appver());
  }
  if (!from._internal_resver().empty()) {
    _internal_set_resver(from._internal_resver());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GsWs_AppResVer_Push::CopyFrom(const Msg_GsWs_AppResVer_Push& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GsWs_AppResVer_Push)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GsWs_AppResVer_Push::IsInitialized() const {
  return true;
}

void Msg_GsWs_AppResVer_Push::InternalSwap(Msg_GsWs_AppResVer_Push* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &appver_, lhs_arena,
      &other->appver_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &resver_, lhs_arena,
      &other->resver_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GsWs_AppResVer_Push::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_server_2fMsgGsWs_2eproto_getter, &descriptor_table_server_2fMsgGsWs_2eproto_once,
      file_level_metadata_server_2fMsgGsWs_2eproto[12]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace XrPb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::XrPb::MsgSvrMod_GsWs* Arena::CreateMaybeMessage< ::XrPb::MsgSvrMod_GsWs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::MsgSvrMod_GsWs >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::GsWs_PlayerInfo* Arena::CreateMaybeMessage< ::XrPb::GsWs_PlayerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::GsWs_PlayerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_ConfirmEnter_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_ConfirmEnter_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_ConfirmEnter_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_GetRoomInfo_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_GetRoomInfo_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_GetRoomInfo_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_GetMatchInfo_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_GetMatchInfo_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_GetMatchInfo_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_ExitRoom_PUSH* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_ExitRoom_PUSH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_ExitRoom_PUSH >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_PlayerOnline_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_PlayerOnline_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_PlayerOnline_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_PlayerOffline_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_PlayerOffline_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_PlayerOffline_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_SetRoomConfig_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_SetRoomConfig_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_SetRoomConfig_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_SetCustomRoomType_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_SetCustomRoomType_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_SetCustomRoomType_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_SetCustomRoomMap_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_SetCustomRoomMap_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_SetCustomRoomMap_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_UpdatePlayerStatus* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_UpdatePlayerStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_UpdatePlayerStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GsWs_AppResVer_Push* Arena::CreateMaybeMessage< ::XrPb::Msg_GsWs_AppResVer_Push >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GsWs_AppResVer_Push >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
