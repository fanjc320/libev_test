// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server/MsgDBCommon.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_server_2fMsgDBCommon_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_server_2fMsgDBCommon_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_server_2fMsgDBCommon_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_server_2fMsgDBCommon_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_server_2fMsgDBCommon_2eproto;
namespace XrPb {
class DBGS_COM_Value;
struct DBGS_COM_ValueDefaultTypeInternal;
extern DBGS_COM_ValueDefaultTypeInternal _DBGS_COM_Value_default_instance_;
class MsgSvrMod_DBCommon;
struct MsgSvrMod_DBCommonDefaultTypeInternal;
extern MsgSvrMod_DBCommonDefaultTypeInternal _MsgSvrMod_DBCommon_default_instance_;
class Msg_DBGS_UpdateData;
struct Msg_DBGS_UpdateDataDefaultTypeInternal;
extern Msg_DBGS_UpdateDataDefaultTypeInternal _Msg_DBGS_UpdateData_default_instance_;
class Msg_DBGS_UpdateSign;
struct Msg_DBGS_UpdateSignDefaultTypeInternal;
extern Msg_DBGS_UpdateSignDefaultTypeInternal _Msg_DBGS_UpdateSign_default_instance_;
class Msg_DBGS_UpdateValue;
struct Msg_DBGS_UpdateValueDefaultTypeInternal;
extern Msg_DBGS_UpdateValueDefaultTypeInternal _Msg_DBGS_UpdateValue_default_instance_;
class Msg_DBGS_UpdateVersion;
struct Msg_DBGS_UpdateVersionDefaultTypeInternal;
extern Msg_DBGS_UpdateVersionDefaultTypeInternal _Msg_DBGS_UpdateVersion_default_instance_;
}  // namespace XrPb
PROTOBUF_NAMESPACE_OPEN
template<> ::XrPb::DBGS_COM_Value* Arena::CreateMaybeMessage<::XrPb::DBGS_COM_Value>(Arena*);
template<> ::XrPb::MsgSvrMod_DBCommon* Arena::CreateMaybeMessage<::XrPb::MsgSvrMod_DBCommon>(Arena*);
template<> ::XrPb::Msg_DBGS_UpdateData* Arena::CreateMaybeMessage<::XrPb::Msg_DBGS_UpdateData>(Arena*);
template<> ::XrPb::Msg_DBGS_UpdateSign* Arena::CreateMaybeMessage<::XrPb::Msg_DBGS_UpdateSign>(Arena*);
template<> ::XrPb::Msg_DBGS_UpdateValue* Arena::CreateMaybeMessage<::XrPb::Msg_DBGS_UpdateValue>(Arena*);
template<> ::XrPb::Msg_DBGS_UpdateVersion* Arena::CreateMaybeMessage<::XrPb::Msg_DBGS_UpdateVersion>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace XrPb {

enum MsgSvrMod_DBCommon_MsgId : int {
  MsgSvrMod_DBCommon_MsgId_Msg_None = 0,
  MsgSvrMod_DBCommon_MsgId_Msg_DBGS_UpdateData = 1,
  MsgSvrMod_DBCommon_MsgId_Msg_DBGS_UpdateVersion = 2,
  MsgSvrMod_DBCommon_MsgId_Msg_DBGS_UpdateSign = 3,
  MsgSvrMod_DBCommon_MsgId_Msg_DBGS_UpdateValue = 4,
  MsgSvrMod_DBCommon_MsgId_MsgSvrMod_DBCommon_MsgId_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MsgSvrMod_DBCommon_MsgId_MsgSvrMod_DBCommon_MsgId_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MsgSvrMod_DBCommon_MsgId_IsValid(int value);
constexpr MsgSvrMod_DBCommon_MsgId MsgSvrMod_DBCommon_MsgId_MsgId_MIN = MsgSvrMod_DBCommon_MsgId_Msg_None;
constexpr MsgSvrMod_DBCommon_MsgId MsgSvrMod_DBCommon_MsgId_MsgId_MAX = MsgSvrMod_DBCommon_MsgId_Msg_DBGS_UpdateValue;
constexpr int MsgSvrMod_DBCommon_MsgId_MsgId_ARRAYSIZE = MsgSvrMod_DBCommon_MsgId_MsgId_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgSvrMod_DBCommon_MsgId_descriptor();
template<typename T>
inline const std::string& MsgSvrMod_DBCommon_MsgId_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MsgSvrMod_DBCommon_MsgId>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MsgSvrMod_DBCommon_MsgId_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MsgSvrMod_DBCommon_MsgId_descriptor(), enum_t_value);
}
inline bool MsgSvrMod_DBCommon_MsgId_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MsgSvrMod_DBCommon_MsgId* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MsgSvrMod_DBCommon_MsgId>(
    MsgSvrMod_DBCommon_MsgId_descriptor(), name, value);
}
// ===================================================================

class MsgSvrMod_DBCommon final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:XrPb.MsgSvrMod_DBCommon) */ {
 public:
  inline MsgSvrMod_DBCommon() : MsgSvrMod_DBCommon(nullptr) {}
  explicit constexpr MsgSvrMod_DBCommon(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSvrMod_DBCommon(const MsgSvrMod_DBCommon& from);
  MsgSvrMod_DBCommon(MsgSvrMod_DBCommon&& from) noexcept
    : MsgSvrMod_DBCommon() {
    *this = ::std::move(from);
  }

  inline MsgSvrMod_DBCommon& operator=(const MsgSvrMod_DBCommon& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSvrMod_DBCommon& operator=(MsgSvrMod_DBCommon&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSvrMod_DBCommon& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSvrMod_DBCommon* internal_default_instance() {
    return reinterpret_cast<const MsgSvrMod_DBCommon*>(
               &_MsgSvrMod_DBCommon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgSvrMod_DBCommon& a, MsgSvrMod_DBCommon& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSvrMod_DBCommon* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSvrMod_DBCommon* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSvrMod_DBCommon* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSvrMod_DBCommon>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgSvrMod_DBCommon& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgSvrMod_DBCommon& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "XrPb.MsgSvrMod_DBCommon";
  }
  protected:
  explicit MsgSvrMod_DBCommon(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MsgSvrMod_DBCommon_MsgId MsgId;
  static constexpr MsgId Msg_None =
    MsgSvrMod_DBCommon_MsgId_Msg_None;
  static constexpr MsgId Msg_DBGS_UpdateData =
    MsgSvrMod_DBCommon_MsgId_Msg_DBGS_UpdateData;
  static constexpr MsgId Msg_DBGS_UpdateVersion =
    MsgSvrMod_DBCommon_MsgId_Msg_DBGS_UpdateVersion;
  static constexpr MsgId Msg_DBGS_UpdateSign =
    MsgSvrMod_DBCommon_MsgId_Msg_DBGS_UpdateSign;
  static constexpr MsgId Msg_DBGS_UpdateValue =
    MsgSvrMod_DBCommon_MsgId_Msg_DBGS_UpdateValue;
  static inline bool MsgId_IsValid(int value) {
    return MsgSvrMod_DBCommon_MsgId_IsValid(value);
  }
  static constexpr MsgId MsgId_MIN =
    MsgSvrMod_DBCommon_MsgId_MsgId_MIN;
  static constexpr MsgId MsgId_MAX =
    MsgSvrMod_DBCommon_MsgId_MsgId_MAX;
  static constexpr int MsgId_ARRAYSIZE =
    MsgSvrMod_DBCommon_MsgId_MsgId_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MsgId_descriptor() {
    return MsgSvrMod_DBCommon_MsgId_descriptor();
  }
  template<typename T>
  static inline const std::string& MsgId_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MsgId>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MsgId_Name.");
    return MsgSvrMod_DBCommon_MsgId_Name(enum_t_value);
  }
  static inline bool MsgId_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MsgId* value) {
    return MsgSvrMod_DBCommon_MsgId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:XrPb.MsgSvrMod_DBCommon)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2fMsgDBCommon_2eproto;
};
// -------------------------------------------------------------------

class Msg_DBGS_UpdateData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:XrPb.Msg_DBGS_UpdateData) */ {
 public:
  inline Msg_DBGS_UpdateData() : Msg_DBGS_UpdateData(nullptr) {}
  ~Msg_DBGS_UpdateData() override;
  explicit constexpr Msg_DBGS_UpdateData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_DBGS_UpdateData(const Msg_DBGS_UpdateData& from);
  Msg_DBGS_UpdateData(Msg_DBGS_UpdateData&& from) noexcept
    : Msg_DBGS_UpdateData() {
    *this = ::std::move(from);
  }

  inline Msg_DBGS_UpdateData& operator=(const Msg_DBGS_UpdateData& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_DBGS_UpdateData& operator=(Msg_DBGS_UpdateData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_DBGS_UpdateData& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_DBGS_UpdateData* internal_default_instance() {
    return reinterpret_cast<const Msg_DBGS_UpdateData*>(
               &_Msg_DBGS_UpdateData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Msg_DBGS_UpdateData& a, Msg_DBGS_UpdateData& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_DBGS_UpdateData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_DBGS_UpdateData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_DBGS_UpdateData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_DBGS_UpdateData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_DBGS_UpdateData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_DBGS_UpdateData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_DBGS_UpdateData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "XrPb.Msg_DBGS_UpdateData";
  }
  protected:
  explicit Msg_DBGS_UpdateData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrMsgFieldNumber = 6,
    kLlAccIdFieldNumber = 1,
    kUiModuleIdFieldNumber = 2,
    kUiActivityIdFieldNumber = 3,
    kUiGroupIdFieldNumber = 4,
    kUiProtocolFieldNumber = 5,
  };
  // optional bytes strMsg = 6;
  bool has_strmsg() const;
  private:
  bool _internal_has_strmsg() const;
  public:
  void clear_strmsg();
  const std::string& strmsg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strmsg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strmsg();
  PROTOBUF_NODISCARD std::string* release_strmsg();
  void set_allocated_strmsg(std::string* strmsg);
  private:
  const std::string& _internal_strmsg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strmsg(const std::string& value);
  std::string* _internal_mutable_strmsg();
  public:

  // int64 llAccId = 1;
  void clear_llaccid();
  int64_t llaccid() const;
  void set_llaccid(int64_t value);
  private:
  int64_t _internal_llaccid() const;
  void _internal_set_llaccid(int64_t value);
  public:

  // uint32 uiModuleId = 2;
  void clear_uimoduleid();
  uint32_t uimoduleid() const;
  void set_uimoduleid(uint32_t value);
  private:
  uint32_t _internal_uimoduleid() const;
  void _internal_set_uimoduleid(uint32_t value);
  public:

  // uint32 uiActivityId = 3;
  void clear_uiactivityid();
  uint32_t uiactivityid() const;
  void set_uiactivityid(uint32_t value);
  private:
  uint32_t _internal_uiactivityid() const;
  void _internal_set_uiactivityid(uint32_t value);
  public:

  // optional uint32 uiGroupId = 4;
  bool has_uigroupid() const;
  private:
  bool _internal_has_uigroupid() const;
  public:
  void clear_uigroupid();
  uint32_t uigroupid() const;
  void set_uigroupid(uint32_t value);
  private:
  uint32_t _internal_uigroupid() const;
  void _internal_set_uigroupid(uint32_t value);
  public:

  // optional uint32 uiProtocol = 5;
  bool has_uiprotocol() const;
  private:
  bool _internal_has_uiprotocol() const;
  public:
  void clear_uiprotocol();
  uint32_t uiprotocol() const;
  void set_uiprotocol(uint32_t value);
  private:
  uint32_t _internal_uiprotocol() const;
  void _internal_set_uiprotocol(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:XrPb.Msg_DBGS_UpdateData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strmsg_;
  int64_t llaccid_;
  uint32_t uimoduleid_;
  uint32_t uiactivityid_;
  uint32_t uigroupid_;
  uint32_t uiprotocol_;
  friend struct ::TableStruct_server_2fMsgDBCommon_2eproto;
};
// -------------------------------------------------------------------

class Msg_DBGS_UpdateVersion final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:XrPb.Msg_DBGS_UpdateVersion) */ {
 public:
  inline Msg_DBGS_UpdateVersion() : Msg_DBGS_UpdateVersion(nullptr) {}
  ~Msg_DBGS_UpdateVersion() override;
  explicit constexpr Msg_DBGS_UpdateVersion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_DBGS_UpdateVersion(const Msg_DBGS_UpdateVersion& from);
  Msg_DBGS_UpdateVersion(Msg_DBGS_UpdateVersion&& from) noexcept
    : Msg_DBGS_UpdateVersion() {
    *this = ::std::move(from);
  }

  inline Msg_DBGS_UpdateVersion& operator=(const Msg_DBGS_UpdateVersion& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_DBGS_UpdateVersion& operator=(Msg_DBGS_UpdateVersion&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_DBGS_UpdateVersion& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_DBGS_UpdateVersion* internal_default_instance() {
    return reinterpret_cast<const Msg_DBGS_UpdateVersion*>(
               &_Msg_DBGS_UpdateVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Msg_DBGS_UpdateVersion& a, Msg_DBGS_UpdateVersion& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_DBGS_UpdateVersion* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_DBGS_UpdateVersion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_DBGS_UpdateVersion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_DBGS_UpdateVersion>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_DBGS_UpdateVersion& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_DBGS_UpdateVersion& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_DBGS_UpdateVersion* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "XrPb.Msg_DBGS_UpdateVersion";
  }
  protected:
  explicit Msg_DBGS_UpdateVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrVersionFieldNumber = 1,
    kLlResetFieldNumber = 2,
  };
  // optional string strVersion = 1;
  bool has_strversion() const;
  private:
  bool _internal_has_strversion() const;
  public:
  void clear_strversion();
  const std::string& strversion() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_strversion(ArgT0&& arg0, ArgT... args);
  std::string* mutable_strversion();
  PROTOBUF_NODISCARD std::string* release_strversion();
  void set_allocated_strversion(std::string* strversion);
  private:
  const std::string& _internal_strversion() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_strversion(const std::string& value);
  std::string* _internal_mutable_strversion();
  public:

  // optional int64 llReset = 2;
  bool has_llreset() const;
  private:
  bool _internal_has_llreset() const;
  public:
  void clear_llreset();
  int64_t llreset() const;
  void set_llreset(int64_t value);
  private:
  int64_t _internal_llreset() const;
  void _internal_set_llreset(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:XrPb.Msg_DBGS_UpdateVersion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strversion_;
  int64_t llreset_;
  friend struct ::TableStruct_server_2fMsgDBCommon_2eproto;
};
// -------------------------------------------------------------------

class Msg_DBGS_UpdateSign final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:XrPb.Msg_DBGS_UpdateSign) */ {
 public:
  inline Msg_DBGS_UpdateSign() : Msg_DBGS_UpdateSign(nullptr) {}
  ~Msg_DBGS_UpdateSign() override;
  explicit constexpr Msg_DBGS_UpdateSign(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_DBGS_UpdateSign(const Msg_DBGS_UpdateSign& from);
  Msg_DBGS_UpdateSign(Msg_DBGS_UpdateSign&& from) noexcept
    : Msg_DBGS_UpdateSign() {
    *this = ::std::move(from);
  }

  inline Msg_DBGS_UpdateSign& operator=(const Msg_DBGS_UpdateSign& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_DBGS_UpdateSign& operator=(Msg_DBGS_UpdateSign&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_DBGS_UpdateSign& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_DBGS_UpdateSign* internal_default_instance() {
    return reinterpret_cast<const Msg_DBGS_UpdateSign*>(
               &_Msg_DBGS_UpdateSign_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Msg_DBGS_UpdateSign& a, Msg_DBGS_UpdateSign& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_DBGS_UpdateSign* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_DBGS_UpdateSign* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_DBGS_UpdateSign* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_DBGS_UpdateSign>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_DBGS_UpdateSign& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_DBGS_UpdateSign& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_DBGS_UpdateSign* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "XrPb.Msg_DBGS_UpdateSign";
  }
  protected:
  explicit Msg_DBGS_UpdateSign(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUiSignedDayFieldNumber = 1,
    kUiSupplementFieldNumber = 2,
  };
  // optional uint32 uiSignedDay = 1;
  bool has_uisignedday() const;
  private:
  bool _internal_has_uisignedday() const;
  public:
  void clear_uisignedday();
  uint32_t uisignedday() const;
  void set_uisignedday(uint32_t value);
  private:
  uint32_t _internal_uisignedday() const;
  void _internal_set_uisignedday(uint32_t value);
  public:

  // optional uint32 uiSupplement = 2;
  bool has_uisupplement() const;
  private:
  bool _internal_has_uisupplement() const;
  public:
  void clear_uisupplement();
  uint32_t uisupplement() const;
  void set_uisupplement(uint32_t value);
  private:
  uint32_t _internal_uisupplement() const;
  void _internal_set_uisupplement(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:XrPb.Msg_DBGS_UpdateSign)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t uisignedday_;
  uint32_t uisupplement_;
  friend struct ::TableStruct_server_2fMsgDBCommon_2eproto;
};
// -------------------------------------------------------------------

class DBGS_COM_Value final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:XrPb.DBGS_COM_Value) */ {
 public:
  inline DBGS_COM_Value() : DBGS_COM_Value(nullptr) {}
  ~DBGS_COM_Value() override;
  explicit constexpr DBGS_COM_Value(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DBGS_COM_Value(const DBGS_COM_Value& from);
  DBGS_COM_Value(DBGS_COM_Value&& from) noexcept
    : DBGS_COM_Value() {
    *this = ::std::move(from);
  }

  inline DBGS_COM_Value& operator=(const DBGS_COM_Value& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBGS_COM_Value& operator=(DBGS_COM_Value&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBGS_COM_Value& default_instance() {
    return *internal_default_instance();
  }
  static inline const DBGS_COM_Value* internal_default_instance() {
    return reinterpret_cast<const DBGS_COM_Value*>(
               &_DBGS_COM_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DBGS_COM_Value& a, DBGS_COM_Value& b) {
    a.Swap(&b);
  }
  inline void Swap(DBGS_COM_Value* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBGS_COM_Value* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBGS_COM_Value* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DBGS_COM_Value>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DBGS_COM_Value& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DBGS_COM_Value& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DBGS_COM_Value* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "XrPb.DBGS_COM_Value";
  }
  protected:
  explicit DBGS_COM_Value(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // int32 index = 1;
  void clear_index();
  int32_t index() const;
  void set_index(int32_t value);
  private:
  int32_t _internal_index() const;
  void _internal_set_index(int32_t value);
  public:

  // int32 value = 2;
  void clear_value();
  int32_t value() const;
  void set_value(int32_t value);
  private:
  int32_t _internal_value() const;
  void _internal_set_value(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:XrPb.DBGS_COM_Value)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t index_;
  int32_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2fMsgDBCommon_2eproto;
};
// -------------------------------------------------------------------

class Msg_DBGS_UpdateValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:XrPb.Msg_DBGS_UpdateValue) */ {
 public:
  inline Msg_DBGS_UpdateValue() : Msg_DBGS_UpdateValue(nullptr) {}
  ~Msg_DBGS_UpdateValue() override;
  explicit constexpr Msg_DBGS_UpdateValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_DBGS_UpdateValue(const Msg_DBGS_UpdateValue& from);
  Msg_DBGS_UpdateValue(Msg_DBGS_UpdateValue&& from) noexcept
    : Msg_DBGS_UpdateValue() {
    *this = ::std::move(from);
  }

  inline Msg_DBGS_UpdateValue& operator=(const Msg_DBGS_UpdateValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_DBGS_UpdateValue& operator=(Msg_DBGS_UpdateValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_DBGS_UpdateValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_DBGS_UpdateValue* internal_default_instance() {
    return reinterpret_cast<const Msg_DBGS_UpdateValue*>(
               &_Msg_DBGS_UpdateValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Msg_DBGS_UpdateValue& a, Msg_DBGS_UpdateValue& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_DBGS_UpdateValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_DBGS_UpdateValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg_DBGS_UpdateValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Msg_DBGS_UpdateValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_DBGS_UpdateValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_DBGS_UpdateValue& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_DBGS_UpdateValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "XrPb.Msg_DBGS_UpdateValue";
  }
  protected:
  explicit Msg_DBGS_UpdateValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOValueFieldNumber = 1,
  };
  // .XrPb.DBGS_COM_Value oValue = 1;
  bool has_ovalue() const;
  private:
  bool _internal_has_ovalue() const;
  public:
  void clear_ovalue();
  const ::XrPb::DBGS_COM_Value& ovalue() const;
  PROTOBUF_NODISCARD ::XrPb::DBGS_COM_Value* release_ovalue();
  ::XrPb::DBGS_COM_Value* mutable_ovalue();
  void set_allocated_ovalue(::XrPb::DBGS_COM_Value* ovalue);
  private:
  const ::XrPb::DBGS_COM_Value& _internal_ovalue() const;
  ::XrPb::DBGS_COM_Value* _internal_mutable_ovalue();
  public:
  void unsafe_arena_set_allocated_ovalue(
      ::XrPb::DBGS_COM_Value* ovalue);
  ::XrPb::DBGS_COM_Value* unsafe_arena_release_ovalue();

  // @@protoc_insertion_point(class_scope:XrPb.Msg_DBGS_UpdateValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::XrPb::DBGS_COM_Value* ovalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_2fMsgDBCommon_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgSvrMod_DBCommon

// -------------------------------------------------------------------

// Msg_DBGS_UpdateData

// int64 llAccId = 1;
inline void Msg_DBGS_UpdateData::clear_llaccid() {
  llaccid_ = int64_t{0};
}
inline int64_t Msg_DBGS_UpdateData::_internal_llaccid() const {
  return llaccid_;
}
inline int64_t Msg_DBGS_UpdateData::llaccid() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateData.llAccId)
  return _internal_llaccid();
}
inline void Msg_DBGS_UpdateData::_internal_set_llaccid(int64_t value) {
  
  llaccid_ = value;
}
inline void Msg_DBGS_UpdateData::set_llaccid(int64_t value) {
  _internal_set_llaccid(value);
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateData.llAccId)
}

// uint32 uiModuleId = 2;
inline void Msg_DBGS_UpdateData::clear_uimoduleid() {
  uimoduleid_ = 0u;
}
inline uint32_t Msg_DBGS_UpdateData::_internal_uimoduleid() const {
  return uimoduleid_;
}
inline uint32_t Msg_DBGS_UpdateData::uimoduleid() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateData.uiModuleId)
  return _internal_uimoduleid();
}
inline void Msg_DBGS_UpdateData::_internal_set_uimoduleid(uint32_t value) {
  
  uimoduleid_ = value;
}
inline void Msg_DBGS_UpdateData::set_uimoduleid(uint32_t value) {
  _internal_set_uimoduleid(value);
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateData.uiModuleId)
}

// uint32 uiActivityId = 3;
inline void Msg_DBGS_UpdateData::clear_uiactivityid() {
  uiactivityid_ = 0u;
}
inline uint32_t Msg_DBGS_UpdateData::_internal_uiactivityid() const {
  return uiactivityid_;
}
inline uint32_t Msg_DBGS_UpdateData::uiactivityid() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateData.uiActivityId)
  return _internal_uiactivityid();
}
inline void Msg_DBGS_UpdateData::_internal_set_uiactivityid(uint32_t value) {
  
  uiactivityid_ = value;
}
inline void Msg_DBGS_UpdateData::set_uiactivityid(uint32_t value) {
  _internal_set_uiactivityid(value);
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateData.uiActivityId)
}

// optional uint32 uiGroupId = 4;
inline bool Msg_DBGS_UpdateData::_internal_has_uigroupid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Msg_DBGS_UpdateData::has_uigroupid() const {
  return _internal_has_uigroupid();
}
inline void Msg_DBGS_UpdateData::clear_uigroupid() {
  uigroupid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t Msg_DBGS_UpdateData::_internal_uigroupid() const {
  return uigroupid_;
}
inline uint32_t Msg_DBGS_UpdateData::uigroupid() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateData.uiGroupId)
  return _internal_uigroupid();
}
inline void Msg_DBGS_UpdateData::_internal_set_uigroupid(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  uigroupid_ = value;
}
inline void Msg_DBGS_UpdateData::set_uigroupid(uint32_t value) {
  _internal_set_uigroupid(value);
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateData.uiGroupId)
}

// optional uint32 uiProtocol = 5;
inline bool Msg_DBGS_UpdateData::_internal_has_uiprotocol() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Msg_DBGS_UpdateData::has_uiprotocol() const {
  return _internal_has_uiprotocol();
}
inline void Msg_DBGS_UpdateData::clear_uiprotocol() {
  uiprotocol_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t Msg_DBGS_UpdateData::_internal_uiprotocol() const {
  return uiprotocol_;
}
inline uint32_t Msg_DBGS_UpdateData::uiprotocol() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateData.uiProtocol)
  return _internal_uiprotocol();
}
inline void Msg_DBGS_UpdateData::_internal_set_uiprotocol(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  uiprotocol_ = value;
}
inline void Msg_DBGS_UpdateData::set_uiprotocol(uint32_t value) {
  _internal_set_uiprotocol(value);
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateData.uiProtocol)
}

// optional bytes strMsg = 6;
inline bool Msg_DBGS_UpdateData::_internal_has_strmsg() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Msg_DBGS_UpdateData::has_strmsg() const {
  return _internal_has_strmsg();
}
inline void Msg_DBGS_UpdateData::clear_strmsg() {
  strmsg_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Msg_DBGS_UpdateData::strmsg() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateData.strMsg)
  return _internal_strmsg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_DBGS_UpdateData::set_strmsg(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 strmsg_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateData.strMsg)
}
inline std::string* Msg_DBGS_UpdateData::mutable_strmsg() {
  std::string* _s = _internal_mutable_strmsg();
  // @@protoc_insertion_point(field_mutable:XrPb.Msg_DBGS_UpdateData.strMsg)
  return _s;
}
inline const std::string& Msg_DBGS_UpdateData::_internal_strmsg() const {
  return strmsg_.Get();
}
inline void Msg_DBGS_UpdateData::_internal_set_strmsg(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strmsg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Msg_DBGS_UpdateData::_internal_mutable_strmsg() {
  _has_bits_[0] |= 0x00000001u;
  return strmsg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Msg_DBGS_UpdateData::release_strmsg() {
  // @@protoc_insertion_point(field_release:XrPb.Msg_DBGS_UpdateData.strMsg)
  if (!_internal_has_strmsg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = strmsg_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strmsg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    strmsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void Msg_DBGS_UpdateData::set_allocated_strmsg(std::string* strmsg) {
  if (strmsg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strmsg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strmsg,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strmsg_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    strmsg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:XrPb.Msg_DBGS_UpdateData.strMsg)
}

// -------------------------------------------------------------------

// Msg_DBGS_UpdateVersion

// optional string strVersion = 1;
inline bool Msg_DBGS_UpdateVersion::_internal_has_strversion() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Msg_DBGS_UpdateVersion::has_strversion() const {
  return _internal_has_strversion();
}
inline void Msg_DBGS_UpdateVersion::clear_strversion() {
  strversion_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Msg_DBGS_UpdateVersion::strversion() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateVersion.strVersion)
  return _internal_strversion();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg_DBGS_UpdateVersion::set_strversion(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 strversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateVersion.strVersion)
}
inline std::string* Msg_DBGS_UpdateVersion::mutable_strversion() {
  std::string* _s = _internal_mutable_strversion();
  // @@protoc_insertion_point(field_mutable:XrPb.Msg_DBGS_UpdateVersion.strVersion)
  return _s;
}
inline const std::string& Msg_DBGS_UpdateVersion::_internal_strversion() const {
  return strversion_.Get();
}
inline void Msg_DBGS_UpdateVersion::_internal_set_strversion(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  strversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Msg_DBGS_UpdateVersion::_internal_mutable_strversion() {
  _has_bits_[0] |= 0x00000001u;
  return strversion_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Msg_DBGS_UpdateVersion::release_strversion() {
  // @@protoc_insertion_point(field_release:XrPb.Msg_DBGS_UpdateVersion.strVersion)
  if (!_internal_has_strversion()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = strversion_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strversion_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    strversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void Msg_DBGS_UpdateVersion::set_allocated_strversion(std::string* strversion) {
  if (strversion != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  strversion_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strversion,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (strversion_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    strversion_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:XrPb.Msg_DBGS_UpdateVersion.strVersion)
}

// optional int64 llReset = 2;
inline bool Msg_DBGS_UpdateVersion::_internal_has_llreset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Msg_DBGS_UpdateVersion::has_llreset() const {
  return _internal_has_llreset();
}
inline void Msg_DBGS_UpdateVersion::clear_llreset() {
  llreset_ = int64_t{0};
  _has_bits_[0] &= ~0x00000002u;
}
inline int64_t Msg_DBGS_UpdateVersion::_internal_llreset() const {
  return llreset_;
}
inline int64_t Msg_DBGS_UpdateVersion::llreset() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateVersion.llReset)
  return _internal_llreset();
}
inline void Msg_DBGS_UpdateVersion::_internal_set_llreset(int64_t value) {
  _has_bits_[0] |= 0x00000002u;
  llreset_ = value;
}
inline void Msg_DBGS_UpdateVersion::set_llreset(int64_t value) {
  _internal_set_llreset(value);
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateVersion.llReset)
}

// -------------------------------------------------------------------

// Msg_DBGS_UpdateSign

// optional uint32 uiSignedDay = 1;
inline bool Msg_DBGS_UpdateSign::_internal_has_uisignedday() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Msg_DBGS_UpdateSign::has_uisignedday() const {
  return _internal_has_uisignedday();
}
inline void Msg_DBGS_UpdateSign::clear_uisignedday() {
  uisignedday_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t Msg_DBGS_UpdateSign::_internal_uisignedday() const {
  return uisignedday_;
}
inline uint32_t Msg_DBGS_UpdateSign::uisignedday() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateSign.uiSignedDay)
  return _internal_uisignedday();
}
inline void Msg_DBGS_UpdateSign::_internal_set_uisignedday(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  uisignedday_ = value;
}
inline void Msg_DBGS_UpdateSign::set_uisignedday(uint32_t value) {
  _internal_set_uisignedday(value);
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateSign.uiSignedDay)
}

// optional uint32 uiSupplement = 2;
inline bool Msg_DBGS_UpdateSign::_internal_has_uisupplement() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Msg_DBGS_UpdateSign::has_uisupplement() const {
  return _internal_has_uisupplement();
}
inline void Msg_DBGS_UpdateSign::clear_uisupplement() {
  uisupplement_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t Msg_DBGS_UpdateSign::_internal_uisupplement() const {
  return uisupplement_;
}
inline uint32_t Msg_DBGS_UpdateSign::uisupplement() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateSign.uiSupplement)
  return _internal_uisupplement();
}
inline void Msg_DBGS_UpdateSign::_internal_set_uisupplement(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  uisupplement_ = value;
}
inline void Msg_DBGS_UpdateSign::set_uisupplement(uint32_t value) {
  _internal_set_uisupplement(value);
  // @@protoc_insertion_point(field_set:XrPb.Msg_DBGS_UpdateSign.uiSupplement)
}

// -------------------------------------------------------------------

// DBGS_COM_Value

// int32 index = 1;
inline void DBGS_COM_Value::clear_index() {
  index_ = 0;
}
inline int32_t DBGS_COM_Value::_internal_index() const {
  return index_;
}
inline int32_t DBGS_COM_Value::index() const {
  // @@protoc_insertion_point(field_get:XrPb.DBGS_COM_Value.index)
  return _internal_index();
}
inline void DBGS_COM_Value::_internal_set_index(int32_t value) {
  
  index_ = value;
}
inline void DBGS_COM_Value::set_index(int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:XrPb.DBGS_COM_Value.index)
}

// int32 value = 2;
inline void DBGS_COM_Value::clear_value() {
  value_ = 0;
}
inline int32_t DBGS_COM_Value::_internal_value() const {
  return value_;
}
inline int32_t DBGS_COM_Value::value() const {
  // @@protoc_insertion_point(field_get:XrPb.DBGS_COM_Value.value)
  return _internal_value();
}
inline void DBGS_COM_Value::_internal_set_value(int32_t value) {
  
  value_ = value;
}
inline void DBGS_COM_Value::set_value(int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:XrPb.DBGS_COM_Value.value)
}

// -------------------------------------------------------------------

// Msg_DBGS_UpdateValue

// .XrPb.DBGS_COM_Value oValue = 1;
inline bool Msg_DBGS_UpdateValue::_internal_has_ovalue() const {
  return this != internal_default_instance() && ovalue_ != nullptr;
}
inline bool Msg_DBGS_UpdateValue::has_ovalue() const {
  return _internal_has_ovalue();
}
inline void Msg_DBGS_UpdateValue::clear_ovalue() {
  if (GetArenaForAllocation() == nullptr && ovalue_ != nullptr) {
    delete ovalue_;
  }
  ovalue_ = nullptr;
}
inline const ::XrPb::DBGS_COM_Value& Msg_DBGS_UpdateValue::_internal_ovalue() const {
  const ::XrPb::DBGS_COM_Value* p = ovalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::XrPb::DBGS_COM_Value&>(
      ::XrPb::_DBGS_COM_Value_default_instance_);
}
inline const ::XrPb::DBGS_COM_Value& Msg_DBGS_UpdateValue::ovalue() const {
  // @@protoc_insertion_point(field_get:XrPb.Msg_DBGS_UpdateValue.oValue)
  return _internal_ovalue();
}
inline void Msg_DBGS_UpdateValue::unsafe_arena_set_allocated_ovalue(
    ::XrPb::DBGS_COM_Value* ovalue) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ovalue_);
  }
  ovalue_ = ovalue;
  if (ovalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:XrPb.Msg_DBGS_UpdateValue.oValue)
}
inline ::XrPb::DBGS_COM_Value* Msg_DBGS_UpdateValue::release_ovalue() {
  
  ::XrPb::DBGS_COM_Value* temp = ovalue_;
  ovalue_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::XrPb::DBGS_COM_Value* Msg_DBGS_UpdateValue::unsafe_arena_release_ovalue() {
  // @@protoc_insertion_point(field_release:XrPb.Msg_DBGS_UpdateValue.oValue)
  
  ::XrPb::DBGS_COM_Value* temp = ovalue_;
  ovalue_ = nullptr;
  return temp;
}
inline ::XrPb::DBGS_COM_Value* Msg_DBGS_UpdateValue::_internal_mutable_ovalue() {
  
  if (ovalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::XrPb::DBGS_COM_Value>(GetArenaForAllocation());
    ovalue_ = p;
  }
  return ovalue_;
}
inline ::XrPb::DBGS_COM_Value* Msg_DBGS_UpdateValue::mutable_ovalue() {
  ::XrPb::DBGS_COM_Value* _msg = _internal_mutable_ovalue();
  // @@protoc_insertion_point(field_mutable:XrPb.Msg_DBGS_UpdateValue.oValue)
  return _msg;
}
inline void Msg_DBGS_UpdateValue::set_allocated_ovalue(::XrPb::DBGS_COM_Value* ovalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete ovalue_;
  }
  if (ovalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::XrPb::DBGS_COM_Value>::GetOwningArena(ovalue);
    if (message_arena != submessage_arena) {
      ovalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ovalue, submessage_arena);
    }
    
  } else {
    
  }
  ovalue_ = ovalue;
  // @@protoc_insertion_point(field_set_allocated:XrPb.Msg_DBGS_UpdateValue.oValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace XrPb

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::XrPb::MsgSvrMod_DBCommon_MsgId> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::XrPb::MsgSvrMod_DBCommon_MsgId>() {
  return ::XrPb::MsgSvrMod_DBCommon_MsgId_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_server_2fMsgDBCommon_2eproto
