// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/MsgModule.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_client_2fMsgModule_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_client_2fMsgModule_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_client_2fMsgModule_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_client_2fMsgModule_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_client_2fMsgModule_2eproto;
namespace XrPb {
class MsgMod;
struct MsgModDefaultTypeInternal;
extern MsgModDefaultTypeInternal _MsgMod_default_instance_;
}  // namespace XrPb
PROTOBUF_NAMESPACE_OPEN
template<> ::XrPb::MsgMod* Arena::CreateMaybeMessage<::XrPb::MsgMod>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace XrPb {

enum MsgMod_ModID : int {
  MsgMod_ModID_NetBegin = 0,
  MsgMod_ModID_Login = 2,
  MsgMod_ModID_Scene = 3,
  MsgMod_ModID_NetEnd = 5,
  MsgMod_ModID_FunctionModuleBegin = 6,
  MsgMod_ModID_Friend = 7,
  MsgMod_ModID_Mail = 8,
  MsgMod_ModID_Item = 9,
  MsgMod_ModID_FunctionModuleEnd = 99,
  MsgMod_ModID_MsgMod_ModID_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MsgMod_ModID_MsgMod_ModID_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MsgMod_ModID_IsValid(int value);
constexpr MsgMod_ModID MsgMod_ModID_ModID_MIN = MsgMod_ModID_NetBegin;
constexpr MsgMod_ModID MsgMod_ModID_ModID_MAX = MsgMod_ModID_FunctionModuleEnd;
constexpr int MsgMod_ModID_ModID_ARRAYSIZE = MsgMod_ModID_ModID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgMod_ModID_descriptor();
template<typename T>
inline const std::string& MsgMod_ModID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MsgMod_ModID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MsgMod_ModID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MsgMod_ModID_descriptor(), enum_t_value);
}
inline bool MsgMod_ModID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MsgMod_ModID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MsgMod_ModID>(
    MsgMod_ModID_descriptor(), name, value);
}
// ===================================================================

class MsgMod final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:XrPb.MsgMod) */ {
 public:
  inline MsgMod() : MsgMod(nullptr) {}
  explicit constexpr MsgMod(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgMod(const MsgMod& from);
  MsgMod(MsgMod&& from) noexcept
    : MsgMod() {
    *this = ::std::move(from);
  }

  inline MsgMod& operator=(const MsgMod& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMod& operator=(MsgMod&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgMod& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgMod* internal_default_instance() {
    return reinterpret_cast<const MsgMod*>(
               &_MsgMod_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgMod& a, MsgMod& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgMod* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMod* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgMod* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgMod>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgMod& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgMod& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "XrPb.MsgMod";
  }
  protected:
  explicit MsgMod(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MsgMod_ModID ModID;
  static constexpr ModID NetBegin =
    MsgMod_ModID_NetBegin;
  static constexpr ModID Login =
    MsgMod_ModID_Login;
  static constexpr ModID Scene =
    MsgMod_ModID_Scene;
  static constexpr ModID NetEnd =
    MsgMod_ModID_NetEnd;
  static constexpr ModID FunctionModuleBegin =
    MsgMod_ModID_FunctionModuleBegin;
  static constexpr ModID Friend =
    MsgMod_ModID_Friend;
  static constexpr ModID Mail =
    MsgMod_ModID_Mail;
  static constexpr ModID Item =
    MsgMod_ModID_Item;
  static constexpr ModID FunctionModuleEnd =
    MsgMod_ModID_FunctionModuleEnd;
  static inline bool ModID_IsValid(int value) {
    return MsgMod_ModID_IsValid(value);
  }
  static constexpr ModID ModID_MIN =
    MsgMod_ModID_ModID_MIN;
  static constexpr ModID ModID_MAX =
    MsgMod_ModID_ModID_MAX;
  static constexpr int ModID_ARRAYSIZE =
    MsgMod_ModID_ModID_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ModID_descriptor() {
    return MsgMod_ModID_descriptor();
  }
  template<typename T>
  static inline const std::string& ModID_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ModID>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ModID_Name.");
    return MsgMod_ModID_Name(enum_t_value);
  }
  static inline bool ModID_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ModID* value) {
    return MsgMod_ModID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:XrPb.MsgMod)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_client_2fMsgModule_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgMod

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace XrPb

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::XrPb::MsgMod_ModID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::XrPb::MsgMod_ModID>() {
  return ::XrPb::MsgMod_ModID_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_client_2fMsgModule_2eproto
