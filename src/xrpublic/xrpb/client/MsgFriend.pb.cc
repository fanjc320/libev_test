// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/MsgFriend.proto

#include "client/MsgFriend.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace XrPb {
constexpr MsgMod_Friend::MsgMod_Friend(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgMod_FriendDefaultTypeInternal {
  constexpr MsgMod_FriendDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgMod_FriendDefaultTypeInternal() {}
  union {
    MsgMod_Friend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgMod_FriendDefaultTypeInternal _MsgMod_Friend_default_instance_;
constexpr Msg_ChatMsg_CS::Msg_ChatMsg_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , recv_id_(int64_t{0})
  , type_(0)

  , msg_type_(0)

  , chat_upid_(int64_t{0})
  , seq_id_(0){}
struct Msg_ChatMsg_CSDefaultTypeInternal {
  constexpr Msg_ChatMsg_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_ChatMsg_CSDefaultTypeInternal() {}
  union {
    Msg_ChatMsg_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_ChatMsg_CSDefaultTypeInternal _Msg_ChatMsg_CS_default_instance_;
constexpr Msg_ChatMsg_SC::Msg_ChatMsg_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : recv_id_(int64_t{0})
  , chat_id_(int64_t{0})
  , sendtime_(int64_t{0})
  , seq_id_(0){}
struct Msg_ChatMsg_SCDefaultTypeInternal {
  constexpr Msg_ChatMsg_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_ChatMsg_SCDefaultTypeInternal() {}
  union {
    Msg_ChatMsg_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_ChatMsg_SCDefaultTypeInternal _Msg_ChatMsg_SC_default_instance_;
constexpr Msg_ChatMsg_PUSH::Msg_ChatMsg_PUSH(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : chatmsg_(nullptr){}
struct Msg_ChatMsg_PUSHDefaultTypeInternal {
  constexpr Msg_ChatMsg_PUSHDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_ChatMsg_PUSHDefaultTypeInternal() {}
  union {
    Msg_ChatMsg_PUSH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_ChatMsg_PUSHDefaultTypeInternal _Msg_ChatMsg_PUSH_default_instance_;
constexpr Msg_GetFriendList_CS::Msg_GetFriendList_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GetFriendList_CSDefaultTypeInternal {
  constexpr Msg_GetFriendList_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetFriendList_CSDefaultTypeInternal() {}
  union {
    Msg_GetFriendList_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetFriendList_CSDefaultTypeInternal _Msg_GetFriendList_CS_default_instance_;
constexpr FriendInfo::FriendInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : role_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , form_(nullptr)
  , acc_id_(int64_t{0})
  , player_status_(0)

  , level_(0u)
  , end_time_(int64_t{0})
  , leave_time_(int64_t{0})
  , msg_count_(0u)
  , gender_(0u)
  , lastchattime_(int64_t{0})
  , game_id_(0u){}
struct FriendInfoDefaultTypeInternal {
  constexpr FriendInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FriendInfoDefaultTypeInternal() {}
  union {
    FriendInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FriendInfoDefaultTypeInternal _FriendInfo_default_instance_;
constexpr Msg_GetFriendList_SC::Msg_GetFriendList_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friends_(){}
struct Msg_GetFriendList_SCDefaultTypeInternal {
  constexpr Msg_GetFriendList_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetFriendList_SCDefaultTypeInternal() {}
  union {
    Msg_GetFriendList_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetFriendList_SCDefaultTypeInternal _Msg_GetFriendList_SC_default_instance_;
constexpr Msg_AddFriendApply_CS::Msg_AddFriendApply_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friend_acc_id_(int64_t{0}){}
struct Msg_AddFriendApply_CSDefaultTypeInternal {
  constexpr Msg_AddFriendApply_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddFriendApply_CSDefaultTypeInternal() {}
  union {
    Msg_AddFriendApply_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddFriendApply_CSDefaultTypeInternal _Msg_AddFriendApply_CS_default_instance_;
constexpr Msg_AddFriendApply_SC::Msg_AddFriendApply_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applied_(nullptr){}
struct Msg_AddFriendApply_SCDefaultTypeInternal {
  constexpr Msg_AddFriendApply_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddFriendApply_SCDefaultTypeInternal() {}
  union {
    Msg_AddFriendApply_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddFriendApply_SCDefaultTypeInternal _Msg_AddFriendApply_SC_default_instance_;
constexpr Msg_AddFriendApply_PUSH::Msg_AddFriendApply_PUSH(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : apply_(nullptr){}
struct Msg_AddFriendApply_PUSHDefaultTypeInternal {
  constexpr Msg_AddFriendApply_PUSHDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddFriendApply_PUSHDefaultTypeInternal() {}
  union {
    Msg_AddFriendApply_PUSH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddFriendApply_PUSHDefaultTypeInternal _Msg_AddFriendApply_PUSH_default_instance_;
constexpr Msg_AddFriendReply_CS::Msg_AddFriendReply_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friend_acc_id_(int64_t{0})
  , result_(0)
{}
struct Msg_AddFriendReply_CSDefaultTypeInternal {
  constexpr Msg_AddFriendReply_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddFriendReply_CSDefaultTypeInternal() {}
  union {
    Msg_AddFriendReply_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddFriendReply_CSDefaultTypeInternal _Msg_AddFriendReply_CS_default_instance_;
constexpr Msg_AddFriendReply_SC::Msg_AddFriendReply_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friend__(nullptr)
  , result_(0)
{}
struct Msg_AddFriendReply_SCDefaultTypeInternal {
  constexpr Msg_AddFriendReply_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddFriendReply_SCDefaultTypeInternal() {}
  union {
    Msg_AddFriendReply_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddFriendReply_SCDefaultTypeInternal _Msg_AddFriendReply_SC_default_instance_;
constexpr Msg_AddFriendReply_PUSH::Msg_AddFriendReply_PUSH(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friend__(nullptr)
  , result_(0)
{}
struct Msg_AddFriendReply_PUSHDefaultTypeInternal {
  constexpr Msg_AddFriendReply_PUSHDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddFriendReply_PUSHDefaultTypeInternal() {}
  union {
    Msg_AddFriendReply_PUSH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddFriendReply_PUSHDefaultTypeInternal _Msg_AddFriendReply_PUSH_default_instance_;
constexpr Msg_GetFriApplyList_CS::Msg_GetFriApplyList_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GetFriApplyList_CSDefaultTypeInternal {
  constexpr Msg_GetFriApplyList_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetFriApplyList_CSDefaultTypeInternal() {}
  union {
    Msg_GetFriApplyList_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetFriApplyList_CSDefaultTypeInternal _Msg_GetFriApplyList_CS_default_instance_;
constexpr Msg_GetFriApplyList_SC::Msg_GetFriApplyList_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : apply_list_(){}
struct Msg_GetFriApplyList_SCDefaultTypeInternal {
  constexpr Msg_GetFriApplyList_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetFriApplyList_SCDefaultTypeInternal() {}
  union {
    Msg_GetFriApplyList_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetFriApplyList_SCDefaultTypeInternal _Msg_GetFriApplyList_SC_default_instance_;
constexpr Msg_DelFriend_CS::Msg_DelFriend_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friend_acc_id_(int64_t{0}){}
struct Msg_DelFriend_CSDefaultTypeInternal {
  constexpr Msg_DelFriend_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DelFriend_CSDefaultTypeInternal() {}
  union {
    Msg_DelFriend_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DelFriend_CSDefaultTypeInternal _Msg_DelFriend_CS_default_instance_;
constexpr Msg_DelFriend_SC::Msg_DelFriend_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_DelFriend_SCDefaultTypeInternal {
  constexpr Msg_DelFriend_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DelFriend_SCDefaultTypeInternal() {}
  union {
    Msg_DelFriend_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DelFriend_SCDefaultTypeInternal _Msg_DelFriend_SC_default_instance_;
constexpr Msg_NotifyDelFriend_PUSH::Msg_NotifyDelFriend_PUSH(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friend_acc_id_(int64_t{0}){}
struct Msg_NotifyDelFriend_PUSHDefaultTypeInternal {
  constexpr Msg_NotifyDelFriend_PUSHDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_NotifyDelFriend_PUSHDefaultTypeInternal() {}
  union {
    Msg_NotifyDelFriend_PUSH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_NotifyDelFriend_PUSHDefaultTypeInternal _Msg_NotifyDelFriend_PUSH_default_instance_;
constexpr Msg_AddAllFriend_CS::Msg_AddAllFriend_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_AddAllFriend_CSDefaultTypeInternal {
  constexpr Msg_AddAllFriend_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddAllFriend_CSDefaultTypeInternal() {}
  union {
    Msg_AddAllFriend_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddAllFriend_CSDefaultTypeInternal _Msg_AddAllFriend_CS_default_instance_;
constexpr Msg_AddAllFriend_SC::Msg_AddAllFriend_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friends_(){}
struct Msg_AddAllFriend_SCDefaultTypeInternal {
  constexpr Msg_AddAllFriend_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddAllFriend_SCDefaultTypeInternal() {}
  union {
    Msg_AddAllFriend_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddAllFriend_SCDefaultTypeInternal _Msg_AddAllFriend_SC_default_instance_;
constexpr Msg_GetFriendMsgs_CS::Msg_GetFriendMsgs_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GetFriendMsgs_CSDefaultTypeInternal {
  constexpr Msg_GetFriendMsgs_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetFriendMsgs_CSDefaultTypeInternal() {}
  union {
    Msg_GetFriendMsgs_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetFriendMsgs_CSDefaultTypeInternal _Msg_GetFriendMsgs_CS_default_instance_;
constexpr FriendOfflineMsg::FriendOfflineMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : msg_()
  , friend_id_(int64_t{0}){}
struct FriendOfflineMsgDefaultTypeInternal {
  constexpr FriendOfflineMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FriendOfflineMsgDefaultTypeInternal() {}
  union {
    FriendOfflineMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FriendOfflineMsgDefaultTypeInternal _FriendOfflineMsg_default_instance_;
constexpr Msg_GetFriendMsgs_SC::Msg_GetFriendMsgs_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friend__()
  , finish_(false){}
struct Msg_GetFriendMsgs_SCDefaultTypeInternal {
  constexpr Msg_GetFriendMsgs_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetFriendMsgs_SCDefaultTypeInternal() {}
  union {
    Msg_GetFriendMsgs_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetFriendMsgs_SCDefaultTypeInternal _Msg_GetFriendMsgs_SC_default_instance_;
constexpr Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(int64_t{0})
  , type_(0)
{}
struct Msg_FriendInfoUpdate_PUSH_AttrInt64PairDefaultTypeInternal {
  constexpr Msg_FriendInfoUpdate_PUSH_AttrInt64PairDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_FriendInfoUpdate_PUSH_AttrInt64PairDefaultTypeInternal() {}
  union {
    Msg_FriendInfoUpdate_PUSH_AttrInt64Pair _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_FriendInfoUpdate_PUSH_AttrInt64PairDefaultTypeInternal _Msg_FriendInfoUpdate_PUSH_AttrInt64Pair_default_instance_;
constexpr Msg_FriendInfoUpdate_PUSH_AttrStringPair::Msg_FriendInfoUpdate_PUSH_AttrStringPair(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(0)
{}
struct Msg_FriendInfoUpdate_PUSH_AttrStringPairDefaultTypeInternal {
  constexpr Msg_FriendInfoUpdate_PUSH_AttrStringPairDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_FriendInfoUpdate_PUSH_AttrStringPairDefaultTypeInternal() {}
  union {
    Msg_FriendInfoUpdate_PUSH_AttrStringPair _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_FriendInfoUpdate_PUSH_AttrStringPairDefaultTypeInternal _Msg_FriendInfoUpdate_PUSH_AttrStringPair_default_instance_;
constexpr Msg_FriendInfoUpdate_PUSH::Msg_FriendInfoUpdate_PUSH(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : attrint64pairs_()
  , attrstringpairs_()
  , friend_acc_id_(int64_t{0})
  , is_friend_(false){}
struct Msg_FriendInfoUpdate_PUSHDefaultTypeInternal {
  constexpr Msg_FriendInfoUpdate_PUSHDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_FriendInfoUpdate_PUSHDefaultTypeInternal() {}
  union {
    Msg_FriendInfoUpdate_PUSH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_FriendInfoUpdate_PUSHDefaultTypeInternal _Msg_FriendInfoUpdate_PUSH_default_instance_;
constexpr Msg_SearchFriend_CS::Msg_SearchFriend_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : search_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Msg_SearchFriend_CSDefaultTypeInternal {
  constexpr Msg_SearchFriend_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_SearchFriend_CSDefaultTypeInternal() {}
  union {
    Msg_SearchFriend_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_SearchFriend_CSDefaultTypeInternal _Msg_SearchFriend_CS_default_instance_;
constexpr Msg_SearchFriend_SC::Msg_SearchFriend_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : friends_(){}
struct Msg_SearchFriend_SCDefaultTypeInternal {
  constexpr Msg_SearchFriend_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_SearchFriend_SCDefaultTypeInternal() {}
  union {
    Msg_SearchFriend_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_SearchFriend_SCDefaultTypeInternal _Msg_SearchFriend_SC_default_instance_;
constexpr Msg_GetSelfApplyList_CS::Msg_GetSelfApplyList_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GetSelfApplyList_CSDefaultTypeInternal {
  constexpr Msg_GetSelfApplyList_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetSelfApplyList_CSDefaultTypeInternal() {}
  union {
    Msg_GetSelfApplyList_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetSelfApplyList_CSDefaultTypeInternal _Msg_GetSelfApplyList_CS_default_instance_;
constexpr BeAppliedInfo::BeAppliedInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : acc_id_(int64_t{0})
  , end_time_(int64_t{0}){}
struct BeAppliedInfoDefaultTypeInternal {
  constexpr BeAppliedInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BeAppliedInfoDefaultTypeInternal() {}
  union {
    BeAppliedInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BeAppliedInfoDefaultTypeInternal _BeAppliedInfo_default_instance_;
constexpr Msg_GetSelfApplyList_SC::Msg_GetSelfApplyList_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : applied_(){}
struct Msg_GetSelfApplyList_SCDefaultTypeInternal {
  constexpr Msg_GetSelfApplyList_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetSelfApplyList_SCDefaultTypeInternal() {}
  union {
    Msg_GetSelfApplyList_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetSelfApplyList_SCDefaultTypeInternal _Msg_GetSelfApplyList_SC_default_instance_;
constexpr Msg_AddBlackList_CS::Msg_AddBlackList_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : acc_id_(int64_t{0}){}
struct Msg_AddBlackList_CSDefaultTypeInternal {
  constexpr Msg_AddBlackList_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddBlackList_CSDefaultTypeInternal() {}
  union {
    Msg_AddBlackList_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddBlackList_CSDefaultTypeInternal _Msg_AddBlackList_CS_default_instance_;
constexpr Msg_AddBlackList_SC::Msg_AddBlackList_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : player_(nullptr){}
struct Msg_AddBlackList_SCDefaultTypeInternal {
  constexpr Msg_AddBlackList_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_AddBlackList_SCDefaultTypeInternal() {}
  union {
    Msg_AddBlackList_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_AddBlackList_SCDefaultTypeInternal _Msg_AddBlackList_SC_default_instance_;
constexpr Msg_DelBlackList_CS::Msg_DelBlackList_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : acc_id_(int64_t{0}){}
struct Msg_DelBlackList_CSDefaultTypeInternal {
  constexpr Msg_DelBlackList_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DelBlackList_CSDefaultTypeInternal() {}
  union {
    Msg_DelBlackList_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DelBlackList_CSDefaultTypeInternal _Msg_DelBlackList_CS_default_instance_;
constexpr Msg_DelBlackList_SC::Msg_DelBlackList_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : acc_id_(int64_t{0}){}
struct Msg_DelBlackList_SCDefaultTypeInternal {
  constexpr Msg_DelBlackList_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DelBlackList_SCDefaultTypeInternal() {}
  union {
    Msg_DelBlackList_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DelBlackList_SCDefaultTypeInternal _Msg_DelBlackList_SC_default_instance_;
constexpr Msg_GetBlackList_CS::Msg_GetBlackList_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GetBlackList_CSDefaultTypeInternal {
  constexpr Msg_GetBlackList_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetBlackList_CSDefaultTypeInternal() {}
  union {
    Msg_GetBlackList_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetBlackList_CSDefaultTypeInternal _Msg_GetBlackList_CS_default_instance_;
constexpr Msg_GetBlackList_SC::Msg_GetBlackList_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : black_list_(){}
struct Msg_GetBlackList_SCDefaultTypeInternal {
  constexpr Msg_GetBlackList_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetBlackList_SCDefaultTypeInternal() {}
  union {
    Msg_GetBlackList_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetBlackList_SCDefaultTypeInternal _Msg_GetBlackList_SC_default_instance_;
constexpr Msg_RefuseAllFriend_CS::Msg_RefuseAllFriend_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_RefuseAllFriend_CSDefaultTypeInternal {
  constexpr Msg_RefuseAllFriend_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_RefuseAllFriend_CSDefaultTypeInternal() {}
  union {
    Msg_RefuseAllFriend_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_RefuseAllFriend_CSDefaultTypeInternal _Msg_RefuseAllFriend_CS_default_instance_;
constexpr Msg_RefuseAllFriend_SC::Msg_RefuseAllFriend_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_RefuseAllFriend_SCDefaultTypeInternal {
  constexpr Msg_RefuseAllFriend_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_RefuseAllFriend_SCDefaultTypeInternal() {}
  union {
    Msg_RefuseAllFriend_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_RefuseAllFriend_SCDefaultTypeInternal _Msg_RefuseAllFriend_SC_default_instance_;
constexpr Msg_DeleteLastChatFriend_CS::Msg_DeleteLastChatFriend_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uiaccid_(int64_t{0}){}
struct Msg_DeleteLastChatFriend_CSDefaultTypeInternal {
  constexpr Msg_DeleteLastChatFriend_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DeleteLastChatFriend_CSDefaultTypeInternal() {}
  union {
    Msg_DeleteLastChatFriend_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DeleteLastChatFriend_CSDefaultTypeInternal _Msg_DeleteLastChatFriend_CS_default_instance_;
constexpr Msg_DeleteLastChatFriend_SC::Msg_DeleteLastChatFriend_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uiaccid_(int64_t{0}){}
struct Msg_DeleteLastChatFriend_SCDefaultTypeInternal {
  constexpr Msg_DeleteLastChatFriend_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_DeleteLastChatFriend_SCDefaultTypeInternal() {}
  union {
    Msg_DeleteLastChatFriend_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_DeleteLastChatFriend_SCDefaultTypeInternal _Msg_DeleteLastChatFriend_SC_default_instance_;
constexpr Msg_GetFriendInviteAward_CS::Msg_GetFriendInviteAward_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GetFriendInviteAward_CSDefaultTypeInternal {
  constexpr Msg_GetFriendInviteAward_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetFriendInviteAward_CSDefaultTypeInternal() {}
  union {
    Msg_GetFriendInviteAward_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetFriendInviteAward_CSDefaultTypeInternal _Msg_GetFriendInviteAward_CS_default_instance_;
constexpr FriendInviteAwardInfo::FriendInviteAwardInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : condition_(0u)
  , value_(0u)
  , num_(0u)
  , gained_num_(0u){}
struct FriendInviteAwardInfoDefaultTypeInternal {
  constexpr FriendInviteAwardInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FriendInviteAwardInfoDefaultTypeInternal() {}
  union {
    FriendInviteAwardInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FriendInviteAwardInfoDefaultTypeInternal _FriendInviteAwardInfo_default_instance_;
constexpr Msg_GetFriendInviteAward_SC::Msg_GetFriendInviteAward_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : new_award_()
  , old_award_()
  , other_invite_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , self_invite_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , used_count_(0u){}
struct Msg_GetFriendInviteAward_SCDefaultTypeInternal {
  constexpr Msg_GetFriendInviteAward_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GetFriendInviteAward_SCDefaultTypeInternal() {}
  union {
    Msg_GetFriendInviteAward_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GetFriendInviteAward_SCDefaultTypeInternal _Msg_GetFriendInviteAward_SC_default_instance_;
constexpr Msg_GainInviteCodeAward_CS::Msg_GainInviteCodeAward_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(0)

  , condition_(0u)
  , value_(0u){}
struct Msg_GainInviteCodeAward_CSDefaultTypeInternal {
  constexpr Msg_GainInviteCodeAward_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GainInviteCodeAward_CSDefaultTypeInternal() {}
  union {
    Msg_GainInviteCodeAward_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GainInviteCodeAward_CSDefaultTypeInternal _Msg_GainInviteCodeAward_CS_default_instance_;
constexpr Msg_GainInviteCodeAward_SC::Msg_GainInviteCodeAward_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_GainInviteCodeAward_SCDefaultTypeInternal {
  constexpr Msg_GainInviteCodeAward_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_GainInviteCodeAward_SCDefaultTypeInternal() {}
  union {
    Msg_GainInviteCodeAward_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_GainInviteCodeAward_SCDefaultTypeInternal _Msg_GainInviteCodeAward_SC_default_instance_;
constexpr Msg_UseInviteCodeReq::Msg_UseInviteCodeReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : invite_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Msg_UseInviteCodeReqDefaultTypeInternal {
  constexpr Msg_UseInviteCodeReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_UseInviteCodeReqDefaultTypeInternal() {}
  union {
    Msg_UseInviteCodeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_UseInviteCodeReqDefaultTypeInternal _Msg_UseInviteCodeReq_default_instance_;
constexpr Msg_UseInviteCodeAck::Msg_UseInviteCodeAck(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_UseInviteCodeAckDefaultTypeInternal {
  constexpr Msg_UseInviteCodeAckDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_UseInviteCodeAckDefaultTypeInternal() {}
  union {
    Msg_UseInviteCodeAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_UseInviteCodeAckDefaultTypeInternal _Msg_UseInviteCodeAck_default_instance_;
constexpr Msg_FriendInviteAward_PUSH::Msg_FriendInviteAward_PUSH(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_FriendInviteAward_PUSHDefaultTypeInternal {
  constexpr Msg_FriendInviteAward_PUSHDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_FriendInviteAward_PUSHDefaultTypeInternal() {}
  union {
    Msg_FriendInviteAward_PUSH _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_FriendInviteAward_PUSHDefaultTypeInternal _Msg_FriendInviteAward_PUSH_default_instance_;
}  // namespace XrPb
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_client_2fMsgFriend_2eproto[49];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_client_2fMsgFriend_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_client_2fMsgFriend_2eproto = nullptr;

const uint32_t TableStruct_client_2fMsgFriend_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::MsgMod_Friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_CS, recv_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_CS, type_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_CS, msg_type_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_CS, msg_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_CS, seq_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_CS, chat_upid_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_SC, recv_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_SC, seq_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_SC, chat_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_SC, sendtime_),
  0,
  3,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_PUSH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_ChatMsg_PUSH, chatmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendList_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, acc_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, player_status_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, role_name_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, level_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, msg_count_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, end_time_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, leave_time_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, form_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, gender_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, lastchattime_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInfo, game_id_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  0,
  ~0u,
  ~0u,
  ~0u,
  2,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendList_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendList_SC, friends_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendApply_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendApply_CS, friend_acc_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendApply_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendApply_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendApply_SC, applied_),
  0,
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendApply_PUSH, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendApply_PUSH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendApply_PUSH, apply_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_CS, result_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_CS, friend_acc_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_SC, result_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_SC, friend__),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_PUSH, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_PUSH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_PUSH, result_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddFriendReply_PUSH, friend__),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriApplyList_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriApplyList_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriApplyList_SC, apply_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DelFriend_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DelFriend_CS, friend_acc_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DelFriend_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_NotifyDelFriend_PUSH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_NotifyDelFriend_PUSH, friend_acc_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddAllFriend_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddAllFriend_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddAllFriend_SC, friends_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendMsgs_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendOfflineMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendOfflineMsg, friend_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendOfflineMsg, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendMsgs_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendMsgs_SC, friend__),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendMsgs_SC, finish_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair, type_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH_AttrStringPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH_AttrStringPair, type_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH_AttrStringPair, value_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH, friend_acc_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH, attrint64pairs_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH, attrstringpairs_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInfoUpdate_PUSH, is_friend_),
  ~0u,
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_SearchFriend_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_SearchFriend_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_SearchFriend_CS, search_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_SearchFriend_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_SearchFriend_SC, friends_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetSelfApplyList_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::BeAppliedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::BeAppliedInfo, acc_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::BeAppliedInfo, end_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetSelfApplyList_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetSelfApplyList_SC, applied_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddBlackList_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddBlackList_CS, acc_id_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddBlackList_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddBlackList_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_AddBlackList_SC, player_),
  0,
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DelBlackList_CS, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DelBlackList_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DelBlackList_CS, acc_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DelBlackList_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DelBlackList_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DelBlackList_SC, acc_id_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetBlackList_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetBlackList_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetBlackList_SC, black_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_RefuseAllFriend_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_RefuseAllFriend_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DeleteLastChatFriend_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DeleteLastChatFriend_CS, uiaccid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DeleteLastChatFriend_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_DeleteLastChatFriend_SC, uiaccid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendInviteAward_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInviteAwardInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInviteAwardInfo, condition_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInviteAwardInfo, value_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInviteAwardInfo, num_),
  PROTOBUF_FIELD_OFFSET(::XrPb::FriendInviteAwardInfo, gained_num_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendInviteAward_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendInviteAward_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendInviteAward_SC, used_count_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendInviteAward_SC, new_award_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendInviteAward_SC, old_award_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendInviteAward_SC, other_invite_code_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GetFriendInviteAward_SC, self_invite_code_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GainInviteCodeAward_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GainInviteCodeAward_CS, type_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GainInviteCodeAward_CS, condition_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GainInviteCodeAward_CS, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_GainInviteCodeAward_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_UseInviteCodeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_UseInviteCodeReq, invite_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_UseInviteCodeAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_FriendInviteAward_PUSH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::XrPb::MsgMod_Friend)},
  { 6, 18, -1, sizeof(::XrPb::Msg_ChatMsg_CS)},
  { 24, 34, -1, sizeof(::XrPb::Msg_ChatMsg_SC)},
  { 38, -1, -1, sizeof(::XrPb::Msg_ChatMsg_PUSH)},
  { 45, -1, -1, sizeof(::XrPb::Msg_GetFriendList_CS)},
  { 51, 68, -1, sizeof(::XrPb::FriendInfo)},
  { 79, -1, -1, sizeof(::XrPb::Msg_GetFriendList_SC)},
  { 86, -1, -1, sizeof(::XrPb::Msg_AddFriendApply_CS)},
  { 93, 100, -1, sizeof(::XrPb::Msg_AddFriendApply_SC)},
  { 101, 108, -1, sizeof(::XrPb::Msg_AddFriendApply_PUSH)},
  { 109, -1, -1, sizeof(::XrPb::Msg_AddFriendReply_CS)},
  { 117, 125, -1, sizeof(::XrPb::Msg_AddFriendReply_SC)},
  { 127, 135, -1, sizeof(::XrPb::Msg_AddFriendReply_PUSH)},
  { 137, -1, -1, sizeof(::XrPb::Msg_GetFriApplyList_CS)},
  { 143, -1, -1, sizeof(::XrPb::Msg_GetFriApplyList_SC)},
  { 150, -1, -1, sizeof(::XrPb::Msg_DelFriend_CS)},
  { 157, -1, -1, sizeof(::XrPb::Msg_DelFriend_SC)},
  { 163, -1, -1, sizeof(::XrPb::Msg_NotifyDelFriend_PUSH)},
  { 170, -1, -1, sizeof(::XrPb::Msg_AddAllFriend_CS)},
  { 176, -1, -1, sizeof(::XrPb::Msg_AddAllFriend_SC)},
  { 183, -1, -1, sizeof(::XrPb::Msg_GetFriendMsgs_CS)},
  { 189, -1, -1, sizeof(::XrPb::FriendOfflineMsg)},
  { 197, -1, -1, sizeof(::XrPb::Msg_GetFriendMsgs_SC)},
  { 205, -1, -1, sizeof(::XrPb::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair)},
  { 213, -1, -1, sizeof(::XrPb::Msg_FriendInfoUpdate_PUSH_AttrStringPair)},
  { 221, 231, -1, sizeof(::XrPb::Msg_FriendInfoUpdate_PUSH)},
  { 235, 242, -1, sizeof(::XrPb::Msg_SearchFriend_CS)},
  { 243, -1, -1, sizeof(::XrPb::Msg_SearchFriend_SC)},
  { 250, -1, -1, sizeof(::XrPb::Msg_GetSelfApplyList_CS)},
  { 256, -1, -1, sizeof(::XrPb::BeAppliedInfo)},
  { 264, -1, -1, sizeof(::XrPb::Msg_GetSelfApplyList_SC)},
  { 271, -1, -1, sizeof(::XrPb::Msg_AddBlackList_CS)},
  { 278, 285, -1, sizeof(::XrPb::Msg_AddBlackList_SC)},
  { 286, 293, -1, sizeof(::XrPb::Msg_DelBlackList_CS)},
  { 294, 301, -1, sizeof(::XrPb::Msg_DelBlackList_SC)},
  { 302, -1, -1, sizeof(::XrPb::Msg_GetBlackList_CS)},
  { 308, -1, -1, sizeof(::XrPb::Msg_GetBlackList_SC)},
  { 315, -1, -1, sizeof(::XrPb::Msg_RefuseAllFriend_CS)},
  { 321, -1, -1, sizeof(::XrPb::Msg_RefuseAllFriend_SC)},
  { 327, -1, -1, sizeof(::XrPb::Msg_DeleteLastChatFriend_CS)},
  { 334, -1, -1, sizeof(::XrPb::Msg_DeleteLastChatFriend_SC)},
  { 341, -1, -1, sizeof(::XrPb::Msg_GetFriendInviteAward_CS)},
  { 347, -1, -1, sizeof(::XrPb::FriendInviteAwardInfo)},
  { 357, 368, -1, sizeof(::XrPb::Msg_GetFriendInviteAward_SC)},
  { 373, -1, -1, sizeof(::XrPb::Msg_GainInviteCodeAward_CS)},
  { 382, -1, -1, sizeof(::XrPb::Msg_GainInviteCodeAward_SC)},
  { 388, -1, -1, sizeof(::XrPb::Msg_UseInviteCodeReq)},
  { 395, -1, -1, sizeof(::XrPb::Msg_UseInviteCodeAck)},
  { 401, -1, -1, sizeof(::XrPb::Msg_FriendInviteAward_PUSH)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_MsgMod_Friend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_ChatMsg_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_ChatMsg_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_ChatMsg_PUSH_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetFriendList_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_FriendInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetFriendList_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddFriendApply_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddFriendApply_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddFriendApply_PUSH_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddFriendReply_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddFriendReply_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddFriendReply_PUSH_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetFriApplyList_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetFriApplyList_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DelFriend_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DelFriend_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_NotifyDelFriend_PUSH_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddAllFriend_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddAllFriend_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetFriendMsgs_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_FriendOfflineMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetFriendMsgs_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_FriendInfoUpdate_PUSH_AttrInt64Pair_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_FriendInfoUpdate_PUSH_AttrStringPair_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_FriendInfoUpdate_PUSH_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_SearchFriend_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_SearchFriend_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetSelfApplyList_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_BeAppliedInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetSelfApplyList_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddBlackList_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_AddBlackList_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DelBlackList_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DelBlackList_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetBlackList_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetBlackList_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_RefuseAllFriend_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_RefuseAllFriend_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DeleteLastChatFriend_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_DeleteLastChatFriend_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetFriendInviteAward_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_FriendInviteAwardInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GetFriendInviteAward_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GainInviteCodeAward_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_GainInviteCodeAward_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_UseInviteCodeReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_UseInviteCodeAck_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_FriendInviteAward_PUSH_default_instance_),
};

const char descriptor_table_protodef_client_2fMsgFriend_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026client/MsgFriend.proto\022\004XrPb\032\023client/C"
  "ommon.proto\"\230\t\n\rMsgMod_Friend\"\206\t\n\005MsgId\022"
  "\014\n\010Msg_None\020\000\022\022\n\016Msg_ChatMsg_CS\020\001\022\022\n\016Msg"
  "_ChatMsg_SC\020\002\022\024\n\020Msg_ChatMsg_PUSH\020\003\022\030\n\024M"
  "sg_GetFriendList_CS\020\004\022\030\n\024Msg_GetFriendLi"
  "st_SC\020\005\022\031\n\025Msg_AddFriendApply_CS\020\006\022\031\n\025Ms"
  "g_AddFriendApply_SC\020\007\022\033\n\027Msg_AddFriendAp"
  "ply_PUSH\020\010\022\031\n\025Msg_AddFriendReply_CS\020\t\022\031\n"
  "\025Msg_AddFriendReply_SC\020\n\022\033\n\027Msg_AddFrien"
  "dReply_PUSH\020\013\022\032\n\026Msg_GetFriApplyList_CS\020"
  "\014\022\032\n\026Msg_GetFriApplyList_SC\020\r\022\024\n\020Msg_Del"
  "Friend_CS\020\016\022\024\n\020Msg_DelFriend_SC\020\017\022\034\n\030Msg"
  "_NotifyDelFriend_PUSH\020\020\022\027\n\023Msg_AddAllFri"
  "end_CS\020\021\022\027\n\023Msg_AddAllFriend_SC\020\022\022\035\n\031Msg"
  "_FriendInfoUpdate_PUSH\020\023\022\030\n\024Msg_GetFrien"
  "dMsgs_CS\020\024\022\030\n\024Msg_GetFriendMsgs_SC\020\025\022\027\n\023"
  "Msg_SearchFriend_CS\020\026\022\027\n\023Msg_SearchFrien"
  "d_SC\020\027\022\033\n\027Msg_GetSelfApplyList_CS\020\030\022\033\n\027M"
  "sg_GetSelfApplyList_SC\020\031\022\027\n\023Msg_AddBlack"
  "List_CS\020\032\022\027\n\023Msg_AddBlackList_SC\020\033\022\027\n\023Ms"
  "g_DelBlackList_CS\020\034\022\027\n\023Msg_DelBlackList_"
  "SC\020\035\022\027\n\023Msg_GetBlackList_CS\020\036\022\027\n\023Msg_Get"
  "BlackList_SC\020\037\022\032\n\026Msg_RefuseAllFriend_CS"
  "\020 \022\032\n\026Msg_RefuseAllFriend_SC\020!\022\037\n\033Msg_De"
  "leteLastChatFriend_CS\020\"\022\037\n\033Msg_DeleteLas"
  "tChatFriend_SC\020#\022\037\n\033Msg_GetFriendInviteA"
  "ward_CS\0202\022\037\n\033Msg_GetFriendInviteAward_SC"
  "\0203\022\036\n\032Msg_GainInviteCodeAward_CS\0204\022\036\n\032Ms"
  "g_GainInviteCodeAward_SC\0205\022\030\n\024Msg_UseInv"
  "iteCodeReq\0206\022\030\n\024Msg_UseInviteCodeAck\0207\022\036"
  "\n\032Msg_FriendInviteAward_PUSH\0208\"\251\001\n\016Msg_C"
  "hatMsg_CS\022\017\n\007recv_id\030\001 \001(\003\022\035\n\004type\030\002 \001(\016"
  "2\017.XrPb.EChatType\022$\n\010msg_type\030\003 \001(\0162\022.Xr"
  "Pb.EChatMsgType\022\013\n\003msg\030\004 \001(\t\022\016\n\006seq_id\030\005"
  " \001(\005\022\026\n\tchat_upid\030\006 \001(\003H\000\210\001\001B\014\n\n_chat_up"
  "id\"\230\001\n\016Msg_ChatMsg_SC\022\024\n\007recv_id\030\001 \001(\003H\000"
  "\210\001\001\022\023\n\006seq_id\030\002 \001(\005H\001\210\001\001\022\024\n\007chat_id\030\003 \001("
  "\003H\002\210\001\001\022\025\n\010sendtime\030\004 \001(\003H\003\210\001\001B\n\n\010_recv_i"
  "dB\t\n\007_seq_idB\n\n\010_chat_idB\013\n\t_sendtime\"6\n"
  "\020Msg_ChatMsg_PUSH\022\"\n\007chatMsg\030\001 \001(\0132\021.XrP"
  "b.ChatMsgData\"\026\n\024Msg_GetFriendList_CS\"\303\002"
  "\n\nFriendInfo\022\016\n\006acc_id\030\001 \001(\003\022)\n\rplayer_s"
  "tatus\030\002 \001(\0162\022.XrPb.PlayerStatus\022\021\n\trole_"
  "name\030\003 \001(\t\022\r\n\005level\030\004 \001(\r\022\026\n\tmsg_count\030\005"
  " \001(\rH\000\210\001\001\022\025\n\010end_time\030\006 \001(\003H\001\210\001\001\022\022\n\nleav"
  "e_time\030\007 \001(\003\022\034\n\004form\030\010 \001(\0132\016.XrPb.FormDa"
  "ta\022\016\n\006gender\030\t \001(\r\022\031\n\014lastChatTime\030\n \001(\003"
  "H\002\210\001\001\022\024\n\007game_id\030\013 \001(\rH\003\210\001\001B\014\n\n_msg_coun"
  "tB\013\n\t_end_timeB\017\n\r_lastChatTimeB\n\n\010_game"
  "_id\"9\n\024Msg_GetFriendList_SC\022!\n\007friends\030\001"
  " \003(\0132\020.XrPb.FriendInfo\".\n\025Msg_AddFriendA"
  "pply_CS\022\025\n\rfriend_acc_id\030\001 \001(\003\"N\n\025Msg_Ad"
  "dFriendApply_SC\022)\n\007applied\030\001 \001(\0132\023.XrPb."
  "BeAppliedInfoH\000\210\001\001B\n\n\010_applied\"I\n\027Msg_Ad"
  "dFriendApply_PUSH\022$\n\005apply\030\001 \001(\0132\020.XrPb."
  "FriendInfoH\000\210\001\001B\010\n\006_apply\"V\n\025Msg_AddFrie"
  "ndReply_CS\022&\n\006result\030\001 \001(\0162\026.XrPb.EFrien"
  "dReplyType\022\025\n\rfriend_acc_id\030\002 \001(\003\"q\n\025Msg"
  "_AddFriendReply_SC\022&\n\006result\030\001 \001(\0162\026.XrP"
  "b.EFriendReplyType\022%\n\006friend\030\002 \001(\0132\020.XrP"
  "b.FriendInfoH\000\210\001\001B\t\n\007_friend\"s\n\027Msg_AddF"
  "riendReply_PUSH\022&\n\006result\030\001 \001(\0162\026.XrPb.E"
  "FriendReplyType\022%\n\006friend\030\002 \001(\0132\020.XrPb.F"
  "riendInfoH\000\210\001\001B\t\n\007_friend\"\030\n\026Msg_GetFriA"
  "pplyList_CS\">\n\026Msg_GetFriApplyList_SC\022$\n"
  "\napply_list\030\001 \003(\0132\020.XrPb.FriendInfo\")\n\020M"
  "sg_DelFriend_CS\022\025\n\rfriend_acc_id\030\001 \001(\003\"\022"
  "\n\020Msg_DelFriend_SC\"1\n\030Msg_NotifyDelFrien"
  "d_PUSH\022\025\n\rfriend_acc_id\030\001 \001(\003\"\025\n\023Msg_Add"
  "AllFriend_CS\"8\n\023Msg_AddAllFriend_SC\022!\n\007f"
  "riends\030\001 \003(\0132\020.XrPb.FriendInfo\"\026\n\024Msg_Ge"
  "tFriendMsgs_CS\"E\n\020FriendOfflineMsg\022\021\n\tfr"
  "iend_id\030\001 \001(\003\022\036\n\003msg\030\002 \003(\0132\021.XrPb.ChatMs"
  "gData\"N\n\024Msg_GetFriendMsgs_SC\022&\n\006friend\030"
  "\001 \003(\0132\026.XrPb.FriendOfflineMsg\022\016\n\006finish\030"
  "\002 \001(\010\"\223\004\n\031Msg_FriendInfoUpdate_PUSH\022\025\n\rf"
  "riend_acc_id\030\001 \001(\003\022E\n\016attrInt64Pairs\030\002 \003"
  "(\0132-.XrPb.Msg_FriendInfoUpdate_PUSH.Attr"
  "Int64Pair\022G\n\017attrStringPairs\030\003 \003(\0132..XrP"
  "b.Msg_FriendInfoUpdate_PUSH.AttrStringPa"
  "ir\022\026\n\tis_friend\030\004 \001(\010H\000\210\001\001\032V\n\rAttrInt64P"
  "air\0226\n\004type\030\001 \001(\0162(.XrPb.Msg_FriendInfoU"
  "pdate_PUSH.AttrType\022\r\n\005value\030\002 \001(\003\032W\n\016At"
  "trStringPair\0226\n\004type\030\001 \001(\0162(.XrPb.Msg_Fr"
  "iendInfoUpdate_PUSH.AttrType\022\r\n\005value\030\002 "
  "\001(\t\"x\n\010AttrType\022\r\n\tAttr_None\020\000\022\016\n\nAttr_L"
  "evel\020\001\022\021\n\rAttr_RoleName\020\002\022\021\n\rAttr_LeftTi"
  "me\020\004\022\024\n\020Attr_PlayerStaus\020\007\022\021\n\rAttr_ChatT"
  "ime\020\013B\014\n\n_is_friend\"5\n\023Msg_SearchFriend_"
  "CS\022\023\n\006search\030\001 \001(\tH\000\210\001\001B\t\n\007_search\"8\n\023Ms"
  "g_SearchFriend_SC\022!\n\007friends\030\001 \003(\0132\020.XrP"
  "b.FriendInfo\"\031\n\027Msg_GetSelfApplyList_CS\""
  "1\n\rBeAppliedInfo\022\016\n\006acc_id\030\001 \001(\003\022\020\n\010end_"
  "time\030\002 \001(\003\"\?\n\027Msg_GetSelfApplyList_SC\022$\n"
  "\007applied\030\001 \003(\0132\023.XrPb.BeAppliedInfo\"%\n\023M"
  "sg_AddBlackList_CS\022\016\n\006acc_id\030\001 \001(\003\"G\n\023Ms"
  "g_AddBlackList_SC\022%\n\006player\030\001 \001(\0132\020.XrPb"
  ".FriendInfoH\000\210\001\001B\t\n\007_player\"5\n\023Msg_DelBl"
  "ackList_CS\022\023\n\006acc_id\030\001 \001(\003H\000\210\001\001B\t\n\007_acc_"
  "id\"5\n\023Msg_DelBlackList_SC\022\023\n\006acc_id\030\001 \001("
  "\003H\000\210\001\001B\t\n\007_acc_id\"\025\n\023Msg_GetBlackList_CS"
  "\";\n\023Msg_GetBlackList_SC\022$\n\nblack_list\030\001 "
  "\003(\0132\020.XrPb.FriendInfo\"\030\n\026Msg_RefuseAllFr"
  "iend_CS\"\030\n\026Msg_RefuseAllFriend_SC\".\n\033Msg"
  "_DeleteLastChatFriend_CS\022\017\n\007uiAccId\030\001 \001("
  "\003\".\n\033Msg_DeleteLastChatFriend_SC\022\017\n\007uiAc"
  "cId\030\001 \001(\003\"\035\n\033Msg_GetFriendInviteAward_CS"
  "\"Z\n\025FriendInviteAwardInfo\022\021\n\tcondition\030\001"
  " \001(\r\022\r\n\005value\030\002 \001(\r\022\013\n\003num\030\003 \001(\r\022\022\n\ngain"
  "ed_num\030\004 \001(\r\"\373\001\n\033Msg_GetFriendInviteAwar"
  "d_SC\022\022\n\nused_count\030\001 \001(\r\022.\n\tnew_award\030\002 "
  "\003(\0132\033.XrPb.FriendInviteAwardInfo\022.\n\told_"
  "award\030\003 \003(\0132\033.XrPb.FriendInviteAwardInfo"
  "\022\036\n\021other_invite_code\030\004 \001(\tH\000\210\001\001\022\035\n\020self"
  "_invite_code\030\005 \001(\tH\001\210\001\001B\024\n\022_other_invite"
  "_codeB\023\n\021_self_invite_code\"h\n\032Msg_GainIn"
  "viteCodeAward_CS\022(\n\004type\030\001 \001(\0162\032.XrPb.EI"
  "nviteCodeAwardType\022\021\n\tcondition\030\002 \001(\r\022\r\n"
  "\005value\030\003 \001(\r\"\034\n\032Msg_GainInviteCodeAward_"
  "SC\"+\n\024Msg_UseInviteCodeReq\022\023\n\013invite_cod"
  "e\030\001 \001(\t\"\026\n\024Msg_UseInviteCodeAck\"\034\n\032Msg_F"
  "riendInviteAward_PUSH*6\n\020EFriendReplyTyp"
  "e\022\020\n\014eReplyAccept\020\000\022\020\n\014eReplyRefuse\020\001*J\n"
  "\024EInviteCodeAwardType\022\030\n\024eInviteCodeAwar"
  "d_New\020\000\022\030\n\024eInviteCodeAward_Old\020\001b\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_client_2fMsgFriend_2eproto_deps[1] = {
  &::descriptor_table_client_2fCommon_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_client_2fMsgFriend_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_client_2fMsgFriend_2eproto = {
  false, false, 5001, descriptor_table_protodef_client_2fMsgFriend_2eproto, "client/MsgFriend.proto", 
  &descriptor_table_client_2fMsgFriend_2eproto_once, descriptor_table_client_2fMsgFriend_2eproto_deps, 1, 49,
  schemas, file_default_instances, TableStruct_client_2fMsgFriend_2eproto::offsets,
  file_level_metadata_client_2fMsgFriend_2eproto, file_level_enum_descriptors_client_2fMsgFriend_2eproto, file_level_service_descriptors_client_2fMsgFriend_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_client_2fMsgFriend_2eproto_getter() {
  return &descriptor_table_client_2fMsgFriend_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_client_2fMsgFriend_2eproto(&descriptor_table_client_2fMsgFriend_2eproto);
namespace XrPb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgMod_Friend_MsgId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_client_2fMsgFriend_2eproto);
  return file_level_enum_descriptors_client_2fMsgFriend_2eproto[0];
}
bool MsgMod_Friend_MsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_None;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_ChatMsg_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_ChatMsg_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_ChatMsg_PUSH;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetFriendList_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetFriendList_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddFriendApply_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddFriendApply_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddFriendApply_PUSH;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddFriendReply_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddFriendReply_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddFriendReply_PUSH;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetFriApplyList_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetFriApplyList_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_DelFriend_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_DelFriend_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_NotifyDelFriend_PUSH;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddAllFriend_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddAllFriend_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_FriendInfoUpdate_PUSH;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetFriendMsgs_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetFriendMsgs_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_SearchFriend_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_SearchFriend_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetSelfApplyList_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetSelfApplyList_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddBlackList_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_AddBlackList_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_DelBlackList_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_DelBlackList_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetBlackList_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetBlackList_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_RefuseAllFriend_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_RefuseAllFriend_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_DeleteLastChatFriend_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_DeleteLastChatFriend_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetFriendInviteAward_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GetFriendInviteAward_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GainInviteCodeAward_CS;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_GainInviteCodeAward_SC;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_UseInviteCodeReq;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_UseInviteCodeAck;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::Msg_FriendInviteAward_PUSH;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::MsgId_MIN;
constexpr MsgMod_Friend_MsgId MsgMod_Friend::MsgId_MAX;
constexpr int MsgMod_Friend::MsgId_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Msg_FriendInfoUpdate_PUSH_AttrType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_client_2fMsgFriend_2eproto);
  return file_level_enum_descriptors_client_2fMsgFriend_2eproto[1];
}
bool Msg_FriendInfoUpdate_PUSH_AttrType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 7:
    case 11:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Msg_FriendInfoUpdate_PUSH_AttrType Msg_FriendInfoUpdate_PUSH::Attr_None;
constexpr Msg_FriendInfoUpdate_PUSH_AttrType Msg_FriendInfoUpdate_PUSH::Attr_Level;
constexpr Msg_FriendInfoUpdate_PUSH_AttrType Msg_FriendInfoUpdate_PUSH::Attr_RoleName;
constexpr Msg_FriendInfoUpdate_PUSH_AttrType Msg_FriendInfoUpdate_PUSH::Attr_LeftTime;
constexpr Msg_FriendInfoUpdate_PUSH_AttrType Msg_FriendInfoUpdate_PUSH::Attr_PlayerStaus;
constexpr Msg_FriendInfoUpdate_PUSH_AttrType Msg_FriendInfoUpdate_PUSH::Attr_ChatTime;
constexpr Msg_FriendInfoUpdate_PUSH_AttrType Msg_FriendInfoUpdate_PUSH::AttrType_MIN;
constexpr Msg_FriendInfoUpdate_PUSH_AttrType Msg_FriendInfoUpdate_PUSH::AttrType_MAX;
constexpr int Msg_FriendInfoUpdate_PUSH::AttrType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFriendReplyType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_client_2fMsgFriend_2eproto);
  return file_level_enum_descriptors_client_2fMsgFriend_2eproto[2];
}
bool EFriendReplyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EInviteCodeAwardType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_client_2fMsgFriend_2eproto);
  return file_level_enum_descriptors_client_2fMsgFriend_2eproto[3];
}
bool EInviteCodeAwardType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class MsgMod_Friend::_Internal {
 public:
};

MsgMod_Friend::MsgMod_Friend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.MsgMod_Friend)
}
MsgMod_Friend::MsgMod_Friend(const MsgMod_Friend& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.MsgMod_Friend)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgMod_Friend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgMod_Friend::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgMod_Friend::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[0]);
}

// ===================================================================

class Msg_ChatMsg_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_ChatMsg_CS>()._has_bits_);
  static void set_has_chat_upid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Msg_ChatMsg_CS::Msg_ChatMsg_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_ChatMsg_CS)
}
Msg_ChatMsg_CS::Msg_ChatMsg_CS(const Msg_ChatMsg_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArenaForAllocation());
  }
  ::memcpy(&recv_id_, &from.recv_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&seq_id_) -
    reinterpret_cast<char*>(&recv_id_)) + sizeof(seq_id_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_ChatMsg_CS)
}

inline void Msg_ChatMsg_CS::SharedCtor() {
msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&recv_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&seq_id_) -
    reinterpret_cast<char*>(&recv_id_)) + sizeof(seq_id_));
}

Msg_ChatMsg_CS::~Msg_ChatMsg_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_ChatMsg_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_ChatMsg_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_ChatMsg_CS::ArenaDtor(void* object) {
  Msg_ChatMsg_CS* _this = reinterpret_cast< Msg_ChatMsg_CS* >(object);
  (void)_this;
}
void Msg_ChatMsg_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_ChatMsg_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ChatMsg_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_ChatMsg_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty();
  ::memset(&recv_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&recv_id_)) + sizeof(msg_type_));
  chat_upid_ = int64_t{0};
  seq_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ChatMsg_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 recv_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          recv_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .XrPb.EChatType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::XrPb::EChatType>(val));
        } else
          goto handle_unusual;
        continue;
      // .XrPb.EChatMsgType msg_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_msg_type(static_cast<::XrPb::EChatMsgType>(val));
        } else
          goto handle_unusual;
        continue;
      // string msg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_ChatMsg_CS.msg"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 seq_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          seq_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 chat_upid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_chat_upid(&has_bits);
          chat_upid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ChatMsg_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_ChatMsg_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 recv_id = 1;
  if (this->_internal_recv_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_recv_id(), target);
  }

  // .XrPb.EChatType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // .XrPb.EChatMsgType msg_type = 3;
  if (this->_internal_msg_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_msg_type(), target);
  }

  // string msg = 4;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_ChatMsg_CS.msg");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_msg(), target);
  }

  // int32 seq_id = 5;
  if (this->_internal_seq_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_seq_id(), target);
  }

  // optional int64 chat_upid = 6;
  if (_internal_has_chat_upid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_chat_upid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_ChatMsg_CS)
  return target;
}

size_t Msg_ChatMsg_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_ChatMsg_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 4;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int64 recv_id = 1;
  if (this->_internal_recv_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_recv_id());
  }

  // .XrPb.EChatType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .XrPb.EChatMsgType msg_type = 3;
  if (this->_internal_msg_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_msg_type());
  }

  // optional int64 chat_upid = 6;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_chat_upid());
  }

  // int32 seq_id = 5;
  if (this->_internal_seq_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_seq_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ChatMsg_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ChatMsg_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ChatMsg_CS::GetClassData() const { return &_class_data_; }

void Msg_ChatMsg_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ChatMsg_CS *>(to)->MergeFrom(
      static_cast<const Msg_ChatMsg_CS &>(from));
}


void Msg_ChatMsg_CS::MergeFrom(const Msg_ChatMsg_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_ChatMsg_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _internal_set_msg(from._internal_msg());
  }
  if (from._internal_recv_id() != 0) {
    _internal_set_recv_id(from._internal_recv_id());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_msg_type() != 0) {
    _internal_set_msg_type(from._internal_msg_type());
  }
  if (from._internal_has_chat_upid()) {
    _internal_set_chat_upid(from._internal_chat_upid());
  }
  if (from._internal_seq_id() != 0) {
    _internal_set_seq_id(from._internal_seq_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ChatMsg_CS::CopyFrom(const Msg_ChatMsg_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_ChatMsg_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ChatMsg_CS::IsInitialized() const {
  return true;
}

void Msg_ChatMsg_CS::InternalSwap(Msg_ChatMsg_CS* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_, lhs_arena,
      &other->msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ChatMsg_CS, seq_id_)
      + sizeof(Msg_ChatMsg_CS::seq_id_)
      - PROTOBUF_FIELD_OFFSET(Msg_ChatMsg_CS, recv_id_)>(
          reinterpret_cast<char*>(&recv_id_),
          reinterpret_cast<char*>(&other->recv_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ChatMsg_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[1]);
}

// ===================================================================

class Msg_ChatMsg_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_ChatMsg_SC>()._has_bits_);
  static void set_has_recv_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_seq_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_chat_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sendtime(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Msg_ChatMsg_SC::Msg_ChatMsg_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_ChatMsg_SC)
}
Msg_ChatMsg_SC::Msg_ChatMsg_SC(const Msg_ChatMsg_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&recv_id_, &from.recv_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&seq_id_) -
    reinterpret_cast<char*>(&recv_id_)) + sizeof(seq_id_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_ChatMsg_SC)
}

inline void Msg_ChatMsg_SC::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&recv_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&seq_id_) -
    reinterpret_cast<char*>(&recv_id_)) + sizeof(seq_id_));
}

Msg_ChatMsg_SC::~Msg_ChatMsg_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_ChatMsg_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_ChatMsg_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_ChatMsg_SC::ArenaDtor(void* object) {
  Msg_ChatMsg_SC* _this = reinterpret_cast< Msg_ChatMsg_SC* >(object);
  (void)_this;
}
void Msg_ChatMsg_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_ChatMsg_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ChatMsg_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_ChatMsg_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&recv_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seq_id_) -
        reinterpret_cast<char*>(&recv_id_)) + sizeof(seq_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ChatMsg_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 recv_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_recv_id(&has_bits);
          recv_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 seq_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_seq_id(&has_bits);
          seq_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 chat_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_chat_id(&has_bits);
          chat_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 sendtime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_sendtime(&has_bits);
          sendtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ChatMsg_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_ChatMsg_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int64 recv_id = 1;
  if (_internal_has_recv_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_recv_id(), target);
  }

  // optional int32 seq_id = 2;
  if (_internal_has_seq_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_seq_id(), target);
  }

  // optional int64 chat_id = 3;
  if (_internal_has_chat_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_chat_id(), target);
  }

  // optional int64 sendtime = 4;
  if (_internal_has_sendtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_sendtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_ChatMsg_SC)
  return target;
}

size_t Msg_ChatMsg_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_ChatMsg_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int64 recv_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_recv_id());
    }

    // optional int64 chat_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_chat_id());
    }

    // optional int64 sendtime = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_sendtime());
    }

    // optional int32 seq_id = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_seq_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ChatMsg_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ChatMsg_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ChatMsg_SC::GetClassData() const { return &_class_data_; }

void Msg_ChatMsg_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ChatMsg_SC *>(to)->MergeFrom(
      static_cast<const Msg_ChatMsg_SC &>(from));
}


void Msg_ChatMsg_SC::MergeFrom(const Msg_ChatMsg_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_ChatMsg_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      recv_id_ = from.recv_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      chat_id_ = from.chat_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      sendtime_ = from.sendtime_;
    }
    if (cached_has_bits & 0x00000008u) {
      seq_id_ = from.seq_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ChatMsg_SC::CopyFrom(const Msg_ChatMsg_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_ChatMsg_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ChatMsg_SC::IsInitialized() const {
  return true;
}

void Msg_ChatMsg_SC::InternalSwap(Msg_ChatMsg_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_ChatMsg_SC, seq_id_)
      + sizeof(Msg_ChatMsg_SC::seq_id_)
      - PROTOBUF_FIELD_OFFSET(Msg_ChatMsg_SC, recv_id_)>(
          reinterpret_cast<char*>(&recv_id_),
          reinterpret_cast<char*>(&other->recv_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ChatMsg_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[2]);
}

// ===================================================================

class Msg_ChatMsg_PUSH::_Internal {
 public:
  static const ::XrPb::ChatMsgData& chatmsg(const Msg_ChatMsg_PUSH* msg);
};

const ::XrPb::ChatMsgData&
Msg_ChatMsg_PUSH::_Internal::chatmsg(const Msg_ChatMsg_PUSH* msg) {
  return *msg->chatmsg_;
}
void Msg_ChatMsg_PUSH::clear_chatmsg() {
  if (GetArenaForAllocation() == nullptr && chatmsg_ != nullptr) {
    delete chatmsg_;
  }
  chatmsg_ = nullptr;
}
Msg_ChatMsg_PUSH::Msg_ChatMsg_PUSH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_ChatMsg_PUSH)
}
Msg_ChatMsg_PUSH::Msg_ChatMsg_PUSH(const Msg_ChatMsg_PUSH& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chatmsg()) {
    chatmsg_ = new ::XrPb::ChatMsgData(*from.chatmsg_);
  } else {
    chatmsg_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_ChatMsg_PUSH)
}

inline void Msg_ChatMsg_PUSH::SharedCtor() {
chatmsg_ = nullptr;
}

Msg_ChatMsg_PUSH::~Msg_ChatMsg_PUSH() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_ChatMsg_PUSH)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_ChatMsg_PUSH::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete chatmsg_;
}

void Msg_ChatMsg_PUSH::ArenaDtor(void* object) {
  Msg_ChatMsg_PUSH* _this = reinterpret_cast< Msg_ChatMsg_PUSH* >(object);
  (void)_this;
}
void Msg_ChatMsg_PUSH::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_ChatMsg_PUSH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_ChatMsg_PUSH::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_ChatMsg_PUSH)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && chatmsg_ != nullptr) {
    delete chatmsg_;
  }
  chatmsg_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_ChatMsg_PUSH::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .XrPb.ChatMsgData chatMsg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chatmsg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_ChatMsg_PUSH::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_ChatMsg_PUSH)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .XrPb.ChatMsgData chatMsg = 1;
  if (this->_internal_has_chatmsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chatmsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_ChatMsg_PUSH)
  return target;
}

size_t Msg_ChatMsg_PUSH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_ChatMsg_PUSH)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .XrPb.ChatMsgData chatMsg = 1;
  if (this->_internal_has_chatmsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chatmsg_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_ChatMsg_PUSH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_ChatMsg_PUSH::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_ChatMsg_PUSH::GetClassData() const { return &_class_data_; }

void Msg_ChatMsg_PUSH::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_ChatMsg_PUSH *>(to)->MergeFrom(
      static_cast<const Msg_ChatMsg_PUSH &>(from));
}


void Msg_ChatMsg_PUSH::MergeFrom(const Msg_ChatMsg_PUSH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_ChatMsg_PUSH)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_chatmsg()) {
    _internal_mutable_chatmsg()->::XrPb::ChatMsgData::MergeFrom(from._internal_chatmsg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_ChatMsg_PUSH::CopyFrom(const Msg_ChatMsg_PUSH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_ChatMsg_PUSH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_ChatMsg_PUSH::IsInitialized() const {
  return true;
}

void Msg_ChatMsg_PUSH::InternalSwap(Msg_ChatMsg_PUSH* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(chatmsg_, other->chatmsg_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_ChatMsg_PUSH::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[3]);
}

// ===================================================================

class Msg_GetFriendList_CS::_Internal {
 public:
};

Msg_GetFriendList_CS::Msg_GetFriendList_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetFriendList_CS)
}
Msg_GetFriendList_CS::Msg_GetFriendList_CS(const Msg_GetFriendList_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetFriendList_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetFriendList_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetFriendList_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetFriendList_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[4]);
}

// ===================================================================

class FriendInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<FriendInfo>()._has_bits_);
  static void set_has_msg_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_end_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::XrPb::FormData& form(const FriendInfo* msg);
  static void set_has_lastchattime(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_game_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::XrPb::FormData&
FriendInfo::_Internal::form(const FriendInfo* msg) {
  return *msg->form_;
}
void FriendInfo::clear_form() {
  if (GetArenaForAllocation() == nullptr && form_ != nullptr) {
    delete form_;
  }
  form_ = nullptr;
}
FriendInfo::FriendInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.FriendInfo)
}
FriendInfo::FriendInfo(const FriendInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  role_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    role_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_role_name().empty()) {
    role_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_role_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_form()) {
    form_ = new ::XrPb::FormData(*from.form_);
  } else {
    form_ = nullptr;
  }
  ::memcpy(&acc_id_, &from.acc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_id_) -
    reinterpret_cast<char*>(&acc_id_)) + sizeof(game_id_));
  // @@protoc_insertion_point(copy_constructor:XrPb.FriendInfo)
}

inline void FriendInfo::SharedCtor() {
role_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  role_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&form_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&game_id_) -
    reinterpret_cast<char*>(&form_)) + sizeof(game_id_));
}

FriendInfo::~FriendInfo() {
  // @@protoc_insertion_point(destructor:XrPb.FriendInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FriendInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  role_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete form_;
}

void FriendInfo::ArenaDtor(void* object) {
  FriendInfo* _this = reinterpret_cast< FriendInfo* >(object);
  (void)_this;
}
void FriendInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FriendInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FriendInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.FriendInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && form_ != nullptr) {
    delete form_;
  }
  form_ = nullptr;
  ::memset(&acc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&acc_id_)) + sizeof(level_));
  end_time_ = int64_t{0};
  leave_time_ = int64_t{0};
  msg_count_ = 0u;
  gender_ = 0u;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&lastchattime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_id_) -
        reinterpret_cast<char*>(&lastchattime_)) + sizeof(game_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 acc_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .XrPb.PlayerStatus player_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_player_status(static_cast<::XrPb::PlayerStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // string role_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_role_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.FriendInfo.role_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 msg_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_msg_count(&has_bits);
          msg_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 end_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_end_time(&has_bits);
          end_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 leave_time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          leave_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .XrPb.FormData form = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_form(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 gender = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          gender_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 lastChatTime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_lastchattime(&has_bits);
          lastchattime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 game_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_game_id(&has_bits);
          game_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.FriendInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 acc_id = 1;
  if (this->_internal_acc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_acc_id(), target);
  }

  // .XrPb.PlayerStatus player_status = 2;
  if (this->_internal_player_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_player_status(), target);
  }

  // string role_name = 3;
  if (!this->_internal_role_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_role_name().data(), static_cast<int>(this->_internal_role_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.FriendInfo.role_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_role_name(), target);
  }

  // uint32 level = 4;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_level(), target);
  }

  // optional uint32 msg_count = 5;
  if (_internal_has_msg_count()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_msg_count(), target);
  }

  // optional int64 end_time = 6;
  if (_internal_has_end_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_end_time(), target);
  }

  // int64 leave_time = 7;
  if (this->_internal_leave_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_leave_time(), target);
  }

  // .XrPb.FormData form = 8;
  if (this->_internal_has_form()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::form(this), target, stream);
  }

  // uint32 gender = 9;
  if (this->_internal_gender() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_gender(), target);
  }

  // optional int64 lastChatTime = 10;
  if (_internal_has_lastchattime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_lastchattime(), target);
  }

  // optional uint32 game_id = 11;
  if (_internal_has_game_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_game_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.FriendInfo)
  return target;
}

size_t FriendInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.FriendInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string role_name = 3;
  if (!this->_internal_role_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_role_name());
  }

  // .XrPb.FormData form = 8;
  if (this->_internal_has_form()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *form_);
  }

  // int64 acc_id = 1;
  if (this->_internal_acc_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_acc_id());
  }

  // .XrPb.PlayerStatus player_status = 2;
  if (this->_internal_player_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_player_status());
  }

  // uint32 level = 4;
  if (this->_internal_level() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_level());
  }

  // optional int64 end_time = 6;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_end_time());
  }

  // int64 leave_time = 7;
  if (this->_internal_leave_time() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_leave_time());
  }

  // optional uint32 msg_count = 5;
  if (cached_has_bits & 0x00000002u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_msg_count());
  }

  // uint32 gender = 9;
  if (this->_internal_gender() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_gender());
  }

  if (cached_has_bits & 0x0000000cu) {
    // optional int64 lastChatTime = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_lastchattime());
    }

    // optional uint32 game_id = 11;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_game_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FriendInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendInfo::GetClassData() const { return &_class_data_; }

void FriendInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FriendInfo *>(to)->MergeFrom(
      static_cast<const FriendInfo &>(from));
}


void FriendInfo::MergeFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.FriendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_role_name().empty()) {
    _internal_set_role_name(from._internal_role_name());
  }
  if (from._internal_has_form()) {
    _internal_mutable_form()->::XrPb::FormData::MergeFrom(from._internal_form());
  }
  if (from._internal_acc_id() != 0) {
    _internal_set_acc_id(from._internal_acc_id());
  }
  if (from._internal_player_status() != 0) {
    _internal_set_player_status(from._internal_player_status());
  }
  if (from._internal_level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from._internal_has_end_time()) {
    _internal_set_end_time(from._internal_end_time());
  }
  if (from._internal_leave_time() != 0) {
    _internal_set_leave_time(from._internal_leave_time());
  }
  if (from._internal_has_msg_count()) {
    _internal_set_msg_count(from._internal_msg_count());
  }
  if (from._internal_gender() != 0) {
    _internal_set_gender(from._internal_gender());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000cu) {
    if (cached_has_bits & 0x00000004u) {
      lastchattime_ = from.lastchattime_;
    }
    if (cached_has_bits & 0x00000008u) {
      game_id_ = from.game_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendInfo::CopyFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.FriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendInfo::IsInitialized() const {
  return true;
}

void FriendInfo::InternalSwap(FriendInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &role_name_, lhs_arena,
      &other->role_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FriendInfo, game_id_)
      + sizeof(FriendInfo::game_id_)
      - PROTOBUF_FIELD_OFFSET(FriendInfo, form_)>(
          reinterpret_cast<char*>(&form_),
          reinterpret_cast<char*>(&other->form_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[5]);
}

// ===================================================================

class Msg_GetFriendList_SC::_Internal {
 public:
};

Msg_GetFriendList_SC::Msg_GetFriendList_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  friends_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetFriendList_SC)
}
Msg_GetFriendList_SC::Msg_GetFriendList_SC(const Msg_GetFriendList_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetFriendList_SC)
}

inline void Msg_GetFriendList_SC::SharedCtor() {
}

Msg_GetFriendList_SC::~Msg_GetFriendList_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GetFriendList_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GetFriendList_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_GetFriendList_SC::ArenaDtor(void* object) {
  Msg_GetFriendList_SC* _this = reinterpret_cast< Msg_GetFriendList_SC* >(object);
  (void)_this;
}
void Msg_GetFriendList_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GetFriendList_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GetFriendList_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GetFriendList_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GetFriendList_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .XrPb.FriendInfo friends = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_friends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GetFriendList_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GetFriendList_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo friends = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_friends_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_friends(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GetFriendList_SC)
  return target;
}

size_t Msg_GetFriendList_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GetFriendList_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo friends = 1;
  total_size += 1UL * this->_internal_friends_size();
  for (const auto& msg : this->friends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetFriendList_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GetFriendList_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetFriendList_SC::GetClassData() const { return &_class_data_; }

void Msg_GetFriendList_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GetFriendList_SC *>(to)->MergeFrom(
      static_cast<const Msg_GetFriendList_SC &>(from));
}


void Msg_GetFriendList_SC::MergeFrom(const Msg_GetFriendList_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GetFriendList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GetFriendList_SC::CopyFrom(const Msg_GetFriendList_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GetFriendList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GetFriendList_SC::IsInitialized() const {
  return true;
}

void Msg_GetFriendList_SC::InternalSwap(Msg_GetFriendList_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  friends_.InternalSwap(&other->friends_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetFriendList_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[6]);
}

// ===================================================================

class Msg_AddFriendApply_CS::_Internal {
 public:
};

Msg_AddFriendApply_CS::Msg_AddFriendApply_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddFriendApply_CS)
}
Msg_AddFriendApply_CS::Msg_AddFriendApply_CS(const Msg_AddFriendApply_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  friend_acc_id_ = from.friend_acc_id_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddFriendApply_CS)
}

inline void Msg_AddFriendApply_CS::SharedCtor() {
friend_acc_id_ = int64_t{0};
}

Msg_AddFriendApply_CS::~Msg_AddFriendApply_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_AddFriendApply_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_AddFriendApply_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_AddFriendApply_CS::ArenaDtor(void* object) {
  Msg_AddFriendApply_CS* _this = reinterpret_cast< Msg_AddFriendApply_CS* >(object);
  (void)_this;
}
void Msg_AddFriendApply_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_AddFriendApply_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_AddFriendApply_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_AddFriendApply_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_acc_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_AddFriendApply_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 friend_acc_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          friend_acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_AddFriendApply_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_AddFriendApply_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 friend_acc_id = 1;
  if (this->_internal_friend_acc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_friend_acc_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_AddFriendApply_CS)
  return target;
}

size_t Msg_AddFriendApply_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_AddFriendApply_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 friend_acc_id = 1;
  if (this->_internal_friend_acc_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_friend_acc_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddFriendApply_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_AddFriendApply_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddFriendApply_CS::GetClassData() const { return &_class_data_; }

void Msg_AddFriendApply_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_AddFriendApply_CS *>(to)->MergeFrom(
      static_cast<const Msg_AddFriendApply_CS &>(from));
}


void Msg_AddFriendApply_CS::MergeFrom(const Msg_AddFriendApply_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_AddFriendApply_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_friend_acc_id() != 0) {
    _internal_set_friend_acc_id(from._internal_friend_acc_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_AddFriendApply_CS::CopyFrom(const Msg_AddFriendApply_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_AddFriendApply_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddFriendApply_CS::IsInitialized() const {
  return true;
}

void Msg_AddFriendApply_CS::InternalSwap(Msg_AddFriendApply_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(friend_acc_id_, other->friend_acc_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddFriendApply_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[7]);
}

// ===================================================================

class Msg_AddFriendApply_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_AddFriendApply_SC>()._has_bits_);
  static const ::XrPb::BeAppliedInfo& applied(const Msg_AddFriendApply_SC* msg);
  static void set_has_applied(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::XrPb::BeAppliedInfo&
Msg_AddFriendApply_SC::_Internal::applied(const Msg_AddFriendApply_SC* msg) {
  return *msg->applied_;
}
Msg_AddFriendApply_SC::Msg_AddFriendApply_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddFriendApply_SC)
}
Msg_AddFriendApply_SC::Msg_AddFriendApply_SC(const Msg_AddFriendApply_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_applied()) {
    applied_ = new ::XrPb::BeAppliedInfo(*from.applied_);
  } else {
    applied_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddFriendApply_SC)
}

inline void Msg_AddFriendApply_SC::SharedCtor() {
applied_ = nullptr;
}

Msg_AddFriendApply_SC::~Msg_AddFriendApply_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_AddFriendApply_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_AddFriendApply_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete applied_;
}

void Msg_AddFriendApply_SC::ArenaDtor(void* object) {
  Msg_AddFriendApply_SC* _this = reinterpret_cast< Msg_AddFriendApply_SC* >(object);
  (void)_this;
}
void Msg_AddFriendApply_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_AddFriendApply_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_AddFriendApply_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_AddFriendApply_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(applied_ != nullptr);
    applied_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_AddFriendApply_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .XrPb.BeAppliedInfo applied = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_applied(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_AddFriendApply_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_AddFriendApply_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .XrPb.BeAppliedInfo applied = 1;
  if (_internal_has_applied()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::applied(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_AddFriendApply_SC)
  return target;
}

size_t Msg_AddFriendApply_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_AddFriendApply_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .XrPb.BeAppliedInfo applied = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *applied_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddFriendApply_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_AddFriendApply_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddFriendApply_SC::GetClassData() const { return &_class_data_; }

void Msg_AddFriendApply_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_AddFriendApply_SC *>(to)->MergeFrom(
      static_cast<const Msg_AddFriendApply_SC &>(from));
}


void Msg_AddFriendApply_SC::MergeFrom(const Msg_AddFriendApply_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_AddFriendApply_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_applied()) {
    _internal_mutable_applied()->::XrPb::BeAppliedInfo::MergeFrom(from._internal_applied());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_AddFriendApply_SC::CopyFrom(const Msg_AddFriendApply_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_AddFriendApply_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddFriendApply_SC::IsInitialized() const {
  return true;
}

void Msg_AddFriendApply_SC::InternalSwap(Msg_AddFriendApply_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(applied_, other->applied_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddFriendApply_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[8]);
}

// ===================================================================

class Msg_AddFriendApply_PUSH::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_AddFriendApply_PUSH>()._has_bits_);
  static const ::XrPb::FriendInfo& apply(const Msg_AddFriendApply_PUSH* msg);
  static void set_has_apply(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::XrPb::FriendInfo&
Msg_AddFriendApply_PUSH::_Internal::apply(const Msg_AddFriendApply_PUSH* msg) {
  return *msg->apply_;
}
Msg_AddFriendApply_PUSH::Msg_AddFriendApply_PUSH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddFriendApply_PUSH)
}
Msg_AddFriendApply_PUSH::Msg_AddFriendApply_PUSH(const Msg_AddFriendApply_PUSH& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_apply()) {
    apply_ = new ::XrPb::FriendInfo(*from.apply_);
  } else {
    apply_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddFriendApply_PUSH)
}

inline void Msg_AddFriendApply_PUSH::SharedCtor() {
apply_ = nullptr;
}

Msg_AddFriendApply_PUSH::~Msg_AddFriendApply_PUSH() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_AddFriendApply_PUSH)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_AddFriendApply_PUSH::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete apply_;
}

void Msg_AddFriendApply_PUSH::ArenaDtor(void* object) {
  Msg_AddFriendApply_PUSH* _this = reinterpret_cast< Msg_AddFriendApply_PUSH* >(object);
  (void)_this;
}
void Msg_AddFriendApply_PUSH::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_AddFriendApply_PUSH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_AddFriendApply_PUSH::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_AddFriendApply_PUSH)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(apply_ != nullptr);
    apply_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_AddFriendApply_PUSH::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .XrPb.FriendInfo apply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_apply(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_AddFriendApply_PUSH::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_AddFriendApply_PUSH)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .XrPb.FriendInfo apply = 1;
  if (_internal_has_apply()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::apply(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_AddFriendApply_PUSH)
  return target;
}

size_t Msg_AddFriendApply_PUSH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_AddFriendApply_PUSH)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .XrPb.FriendInfo apply = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *apply_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddFriendApply_PUSH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_AddFriendApply_PUSH::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddFriendApply_PUSH::GetClassData() const { return &_class_data_; }

void Msg_AddFriendApply_PUSH::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_AddFriendApply_PUSH *>(to)->MergeFrom(
      static_cast<const Msg_AddFriendApply_PUSH &>(from));
}


void Msg_AddFriendApply_PUSH::MergeFrom(const Msg_AddFriendApply_PUSH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_AddFriendApply_PUSH)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_apply()) {
    _internal_mutable_apply()->::XrPb::FriendInfo::MergeFrom(from._internal_apply());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_AddFriendApply_PUSH::CopyFrom(const Msg_AddFriendApply_PUSH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_AddFriendApply_PUSH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddFriendApply_PUSH::IsInitialized() const {
  return true;
}

void Msg_AddFriendApply_PUSH::InternalSwap(Msg_AddFriendApply_PUSH* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(apply_, other->apply_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddFriendApply_PUSH::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[9]);
}

// ===================================================================

class Msg_AddFriendReply_CS::_Internal {
 public:
};

Msg_AddFriendReply_CS::Msg_AddFriendReply_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddFriendReply_CS)
}
Msg_AddFriendReply_CS::Msg_AddFriendReply_CS(const Msg_AddFriendReply_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&friend_acc_id_, &from.friend_acc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&friend_acc_id_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddFriendReply_CS)
}

inline void Msg_AddFriendReply_CS::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&friend_acc_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&friend_acc_id_)) + sizeof(result_));
}

Msg_AddFriendReply_CS::~Msg_AddFriendReply_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_AddFriendReply_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_AddFriendReply_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_AddFriendReply_CS::ArenaDtor(void* object) {
  Msg_AddFriendReply_CS* _this = reinterpret_cast< Msg_AddFriendReply_CS* >(object);
  (void)_this;
}
void Msg_AddFriendReply_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_AddFriendReply_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_AddFriendReply_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_AddFriendReply_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&friend_acc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&friend_acc_id_)) + sizeof(result_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_AddFriendReply_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .XrPb.EFriendReplyType result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::XrPb::EFriendReplyType>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 friend_acc_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          friend_acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_AddFriendReply_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_AddFriendReply_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .XrPb.EFriendReplyType result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // int64 friend_acc_id = 2;
  if (this->_internal_friend_acc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_friend_acc_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_AddFriendReply_CS)
  return target;
}

size_t Msg_AddFriendReply_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_AddFriendReply_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 friend_acc_id = 2;
  if (this->_internal_friend_acc_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_friend_acc_id());
  }

  // .XrPb.EFriendReplyType result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddFriendReply_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_AddFriendReply_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddFriendReply_CS::GetClassData() const { return &_class_data_; }

void Msg_AddFriendReply_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_AddFriendReply_CS *>(to)->MergeFrom(
      static_cast<const Msg_AddFriendReply_CS &>(from));
}


void Msg_AddFriendReply_CS::MergeFrom(const Msg_AddFriendReply_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_AddFriendReply_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_friend_acc_id() != 0) {
    _internal_set_friend_acc_id(from._internal_friend_acc_id());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_AddFriendReply_CS::CopyFrom(const Msg_AddFriendReply_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_AddFriendReply_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddFriendReply_CS::IsInitialized() const {
  return true;
}

void Msg_AddFriendReply_CS::InternalSwap(Msg_AddFriendReply_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_AddFriendReply_CS, result_)
      + sizeof(Msg_AddFriendReply_CS::result_)
      - PROTOBUF_FIELD_OFFSET(Msg_AddFriendReply_CS, friend_acc_id_)>(
          reinterpret_cast<char*>(&friend_acc_id_),
          reinterpret_cast<char*>(&other->friend_acc_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddFriendReply_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[10]);
}

// ===================================================================

class Msg_AddFriendReply_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_AddFriendReply_SC>()._has_bits_);
  static const ::XrPb::FriendInfo& friend_(const Msg_AddFriendReply_SC* msg);
  static void set_has_friend_(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::XrPb::FriendInfo&
Msg_AddFriendReply_SC::_Internal::friend_(const Msg_AddFriendReply_SC* msg) {
  return *msg->friend__;
}
Msg_AddFriendReply_SC::Msg_AddFriendReply_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddFriendReply_SC)
}
Msg_AddFriendReply_SC::Msg_AddFriendReply_SC(const Msg_AddFriendReply_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_friend_()) {
    friend__ = new ::XrPb::FriendInfo(*from.friend__);
  } else {
    friend__ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddFriendReply_SC)
}

inline void Msg_AddFriendReply_SC::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&friend__) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&friend__)) + sizeof(result_));
}

Msg_AddFriendReply_SC::~Msg_AddFriendReply_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_AddFriendReply_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_AddFriendReply_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete friend__;
}

void Msg_AddFriendReply_SC::ArenaDtor(void* object) {
  Msg_AddFriendReply_SC* _this = reinterpret_cast< Msg_AddFriendReply_SC* >(object);
  (void)_this;
}
void Msg_AddFriendReply_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_AddFriendReply_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_AddFriendReply_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_AddFriendReply_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(friend__ != nullptr);
    friend__->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_AddFriendReply_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .XrPb.EFriendReplyType result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::XrPb::EFriendReplyType>(val));
        } else
          goto handle_unusual;
        continue;
      // optional .XrPb.FriendInfo friend = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_friend_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_AddFriendReply_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_AddFriendReply_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .XrPb.EFriendReplyType result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .XrPb.FriendInfo friend = 2;
  if (_internal_has_friend_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::friend_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_AddFriendReply_SC)
  return target;
}

size_t Msg_AddFriendReply_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_AddFriendReply_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .XrPb.FriendInfo friend = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *friend__);
  }

  // .XrPb.EFriendReplyType result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddFriendReply_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_AddFriendReply_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddFriendReply_SC::GetClassData() const { return &_class_data_; }

void Msg_AddFriendReply_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_AddFriendReply_SC *>(to)->MergeFrom(
      static_cast<const Msg_AddFriendReply_SC &>(from));
}


void Msg_AddFriendReply_SC::MergeFrom(const Msg_AddFriendReply_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_AddFriendReply_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_friend_()) {
    _internal_mutable_friend_()->::XrPb::FriendInfo::MergeFrom(from._internal_friend_());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_AddFriendReply_SC::CopyFrom(const Msg_AddFriendReply_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_AddFriendReply_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddFriendReply_SC::IsInitialized() const {
  return true;
}

void Msg_AddFriendReply_SC::InternalSwap(Msg_AddFriendReply_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_AddFriendReply_SC, result_)
      + sizeof(Msg_AddFriendReply_SC::result_)
      - PROTOBUF_FIELD_OFFSET(Msg_AddFriendReply_SC, friend__)>(
          reinterpret_cast<char*>(&friend__),
          reinterpret_cast<char*>(&other->friend__));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddFriendReply_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[11]);
}

// ===================================================================

class Msg_AddFriendReply_PUSH::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_AddFriendReply_PUSH>()._has_bits_);
  static const ::XrPb::FriendInfo& friend_(const Msg_AddFriendReply_PUSH* msg);
  static void set_has_friend_(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::XrPb::FriendInfo&
Msg_AddFriendReply_PUSH::_Internal::friend_(const Msg_AddFriendReply_PUSH* msg) {
  return *msg->friend__;
}
Msg_AddFriendReply_PUSH::Msg_AddFriendReply_PUSH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddFriendReply_PUSH)
}
Msg_AddFriendReply_PUSH::Msg_AddFriendReply_PUSH(const Msg_AddFriendReply_PUSH& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_friend_()) {
    friend__ = new ::XrPb::FriendInfo(*from.friend__);
  } else {
    friend__ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddFriendReply_PUSH)
}

inline void Msg_AddFriendReply_PUSH::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&friend__) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&friend__)) + sizeof(result_));
}

Msg_AddFriendReply_PUSH::~Msg_AddFriendReply_PUSH() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_AddFriendReply_PUSH)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_AddFriendReply_PUSH::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete friend__;
}

void Msg_AddFriendReply_PUSH::ArenaDtor(void* object) {
  Msg_AddFriendReply_PUSH* _this = reinterpret_cast< Msg_AddFriendReply_PUSH* >(object);
  (void)_this;
}
void Msg_AddFriendReply_PUSH::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_AddFriendReply_PUSH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_AddFriendReply_PUSH::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_AddFriendReply_PUSH)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(friend__ != nullptr);
    friend__->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_AddFriendReply_PUSH::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .XrPb.EFriendReplyType result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::XrPb::EFriendReplyType>(val));
        } else
          goto handle_unusual;
        continue;
      // optional .XrPb.FriendInfo friend = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_friend_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_AddFriendReply_PUSH::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_AddFriendReply_PUSH)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .XrPb.EFriendReplyType result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .XrPb.FriendInfo friend = 2;
  if (_internal_has_friend_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::friend_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_AddFriendReply_PUSH)
  return target;
}

size_t Msg_AddFriendReply_PUSH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_AddFriendReply_PUSH)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .XrPb.FriendInfo friend = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *friend__);
  }

  // .XrPb.EFriendReplyType result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddFriendReply_PUSH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_AddFriendReply_PUSH::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddFriendReply_PUSH::GetClassData() const { return &_class_data_; }

void Msg_AddFriendReply_PUSH::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_AddFriendReply_PUSH *>(to)->MergeFrom(
      static_cast<const Msg_AddFriendReply_PUSH &>(from));
}


void Msg_AddFriendReply_PUSH::MergeFrom(const Msg_AddFriendReply_PUSH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_AddFriendReply_PUSH)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_friend_()) {
    _internal_mutable_friend_()->::XrPb::FriendInfo::MergeFrom(from._internal_friend_());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_AddFriendReply_PUSH::CopyFrom(const Msg_AddFriendReply_PUSH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_AddFriendReply_PUSH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddFriendReply_PUSH::IsInitialized() const {
  return true;
}

void Msg_AddFriendReply_PUSH::InternalSwap(Msg_AddFriendReply_PUSH* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_AddFriendReply_PUSH, result_)
      + sizeof(Msg_AddFriendReply_PUSH::result_)
      - PROTOBUF_FIELD_OFFSET(Msg_AddFriendReply_PUSH, friend__)>(
          reinterpret_cast<char*>(&friend__),
          reinterpret_cast<char*>(&other->friend__));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddFriendReply_PUSH::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[12]);
}

// ===================================================================

class Msg_GetFriApplyList_CS::_Internal {
 public:
};

Msg_GetFriApplyList_CS::Msg_GetFriApplyList_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetFriApplyList_CS)
}
Msg_GetFriApplyList_CS::Msg_GetFriApplyList_CS(const Msg_GetFriApplyList_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetFriApplyList_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetFriApplyList_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetFriApplyList_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetFriApplyList_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[13]);
}

// ===================================================================

class Msg_GetFriApplyList_SC::_Internal {
 public:
};

Msg_GetFriApplyList_SC::Msg_GetFriApplyList_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  apply_list_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetFriApplyList_SC)
}
Msg_GetFriApplyList_SC::Msg_GetFriApplyList_SC(const Msg_GetFriApplyList_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      apply_list_(from.apply_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetFriApplyList_SC)
}

inline void Msg_GetFriApplyList_SC::SharedCtor() {
}

Msg_GetFriApplyList_SC::~Msg_GetFriApplyList_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GetFriApplyList_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GetFriApplyList_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_GetFriApplyList_SC::ArenaDtor(void* object) {
  Msg_GetFriApplyList_SC* _this = reinterpret_cast< Msg_GetFriApplyList_SC* >(object);
  (void)_this;
}
void Msg_GetFriApplyList_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GetFriApplyList_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GetFriApplyList_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GetFriApplyList_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apply_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GetFriApplyList_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .XrPb.FriendInfo apply_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_apply_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GetFriApplyList_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GetFriApplyList_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo apply_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_apply_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_apply_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GetFriApplyList_SC)
  return target;
}

size_t Msg_GetFriApplyList_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GetFriApplyList_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo apply_list = 1;
  total_size += 1UL * this->_internal_apply_list_size();
  for (const auto& msg : this->apply_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetFriApplyList_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GetFriApplyList_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetFriApplyList_SC::GetClassData() const { return &_class_data_; }

void Msg_GetFriApplyList_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GetFriApplyList_SC *>(to)->MergeFrom(
      static_cast<const Msg_GetFriApplyList_SC &>(from));
}


void Msg_GetFriApplyList_SC::MergeFrom(const Msg_GetFriApplyList_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GetFriApplyList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  apply_list_.MergeFrom(from.apply_list_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GetFriApplyList_SC::CopyFrom(const Msg_GetFriApplyList_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GetFriApplyList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GetFriApplyList_SC::IsInitialized() const {
  return true;
}

void Msg_GetFriApplyList_SC::InternalSwap(Msg_GetFriApplyList_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  apply_list_.InternalSwap(&other->apply_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetFriApplyList_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[14]);
}

// ===================================================================

class Msg_DelFriend_CS::_Internal {
 public:
};

Msg_DelFriend_CS::Msg_DelFriend_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DelFriend_CS)
}
Msg_DelFriend_CS::Msg_DelFriend_CS(const Msg_DelFriend_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  friend_acc_id_ = from.friend_acc_id_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DelFriend_CS)
}

inline void Msg_DelFriend_CS::SharedCtor() {
friend_acc_id_ = int64_t{0};
}

Msg_DelFriend_CS::~Msg_DelFriend_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_DelFriend_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_DelFriend_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_DelFriend_CS::ArenaDtor(void* object) {
  Msg_DelFriend_CS* _this = reinterpret_cast< Msg_DelFriend_CS* >(object);
  (void)_this;
}
void Msg_DelFriend_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_DelFriend_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_DelFriend_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_DelFriend_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_acc_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_DelFriend_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 friend_acc_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          friend_acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_DelFriend_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_DelFriend_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 friend_acc_id = 1;
  if (this->_internal_friend_acc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_friend_acc_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_DelFriend_CS)
  return target;
}

size_t Msg_DelFriend_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_DelFriend_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 friend_acc_id = 1;
  if (this->_internal_friend_acc_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_friend_acc_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DelFriend_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_DelFriend_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DelFriend_CS::GetClassData() const { return &_class_data_; }

void Msg_DelFriend_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_DelFriend_CS *>(to)->MergeFrom(
      static_cast<const Msg_DelFriend_CS &>(from));
}


void Msg_DelFriend_CS::MergeFrom(const Msg_DelFriend_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_DelFriend_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_friend_acc_id() != 0) {
    _internal_set_friend_acc_id(from._internal_friend_acc_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_DelFriend_CS::CopyFrom(const Msg_DelFriend_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_DelFriend_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DelFriend_CS::IsInitialized() const {
  return true;
}

void Msg_DelFriend_CS::InternalSwap(Msg_DelFriend_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(friend_acc_id_, other->friend_acc_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_DelFriend_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[15]);
}

// ===================================================================

class Msg_DelFriend_SC::_Internal {
 public:
};

Msg_DelFriend_SC::Msg_DelFriend_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DelFriend_SC)
}
Msg_DelFriend_SC::Msg_DelFriend_SC(const Msg_DelFriend_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DelFriend_SC)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DelFriend_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DelFriend_SC::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_DelFriend_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[16]);
}

// ===================================================================

class Msg_NotifyDelFriend_PUSH::_Internal {
 public:
};

Msg_NotifyDelFriend_PUSH::Msg_NotifyDelFriend_PUSH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_NotifyDelFriend_PUSH)
}
Msg_NotifyDelFriend_PUSH::Msg_NotifyDelFriend_PUSH(const Msg_NotifyDelFriend_PUSH& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  friend_acc_id_ = from.friend_acc_id_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_NotifyDelFriend_PUSH)
}

inline void Msg_NotifyDelFriend_PUSH::SharedCtor() {
friend_acc_id_ = int64_t{0};
}

Msg_NotifyDelFriend_PUSH::~Msg_NotifyDelFriend_PUSH() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_NotifyDelFriend_PUSH)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_NotifyDelFriend_PUSH::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_NotifyDelFriend_PUSH::ArenaDtor(void* object) {
  Msg_NotifyDelFriend_PUSH* _this = reinterpret_cast< Msg_NotifyDelFriend_PUSH* >(object);
  (void)_this;
}
void Msg_NotifyDelFriend_PUSH::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_NotifyDelFriend_PUSH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_NotifyDelFriend_PUSH::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_NotifyDelFriend_PUSH)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_acc_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_NotifyDelFriend_PUSH::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 friend_acc_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          friend_acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_NotifyDelFriend_PUSH::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_NotifyDelFriend_PUSH)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 friend_acc_id = 1;
  if (this->_internal_friend_acc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_friend_acc_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_NotifyDelFriend_PUSH)
  return target;
}

size_t Msg_NotifyDelFriend_PUSH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_NotifyDelFriend_PUSH)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 friend_acc_id = 1;
  if (this->_internal_friend_acc_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_friend_acc_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_NotifyDelFriend_PUSH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_NotifyDelFriend_PUSH::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_NotifyDelFriend_PUSH::GetClassData() const { return &_class_data_; }

void Msg_NotifyDelFriend_PUSH::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_NotifyDelFriend_PUSH *>(to)->MergeFrom(
      static_cast<const Msg_NotifyDelFriend_PUSH &>(from));
}


void Msg_NotifyDelFriend_PUSH::MergeFrom(const Msg_NotifyDelFriend_PUSH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_NotifyDelFriend_PUSH)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_friend_acc_id() != 0) {
    _internal_set_friend_acc_id(from._internal_friend_acc_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_NotifyDelFriend_PUSH::CopyFrom(const Msg_NotifyDelFriend_PUSH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_NotifyDelFriend_PUSH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_NotifyDelFriend_PUSH::IsInitialized() const {
  return true;
}

void Msg_NotifyDelFriend_PUSH::InternalSwap(Msg_NotifyDelFriend_PUSH* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(friend_acc_id_, other->friend_acc_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_NotifyDelFriend_PUSH::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[17]);
}

// ===================================================================

class Msg_AddAllFriend_CS::_Internal {
 public:
};

Msg_AddAllFriend_CS::Msg_AddAllFriend_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddAllFriend_CS)
}
Msg_AddAllFriend_CS::Msg_AddAllFriend_CS(const Msg_AddAllFriend_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddAllFriend_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddAllFriend_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddAllFriend_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddAllFriend_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[18]);
}

// ===================================================================

class Msg_AddAllFriend_SC::_Internal {
 public:
};

Msg_AddAllFriend_SC::Msg_AddAllFriend_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  friends_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddAllFriend_SC)
}
Msg_AddAllFriend_SC::Msg_AddAllFriend_SC(const Msg_AddAllFriend_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddAllFriend_SC)
}

inline void Msg_AddAllFriend_SC::SharedCtor() {
}

Msg_AddAllFriend_SC::~Msg_AddAllFriend_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_AddAllFriend_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_AddAllFriend_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_AddAllFriend_SC::ArenaDtor(void* object) {
  Msg_AddAllFriend_SC* _this = reinterpret_cast< Msg_AddAllFriend_SC* >(object);
  (void)_this;
}
void Msg_AddAllFriend_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_AddAllFriend_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_AddAllFriend_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_AddAllFriend_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_AddAllFriend_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .XrPb.FriendInfo friends = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_friends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_AddAllFriend_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_AddAllFriend_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo friends = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_friends_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_friends(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_AddAllFriend_SC)
  return target;
}

size_t Msg_AddAllFriend_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_AddAllFriend_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo friends = 1;
  total_size += 1UL * this->_internal_friends_size();
  for (const auto& msg : this->friends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddAllFriend_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_AddAllFriend_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddAllFriend_SC::GetClassData() const { return &_class_data_; }

void Msg_AddAllFriend_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_AddAllFriend_SC *>(to)->MergeFrom(
      static_cast<const Msg_AddAllFriend_SC &>(from));
}


void Msg_AddAllFriend_SC::MergeFrom(const Msg_AddAllFriend_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_AddAllFriend_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_AddAllFriend_SC::CopyFrom(const Msg_AddAllFriend_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_AddAllFriend_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddAllFriend_SC::IsInitialized() const {
  return true;
}

void Msg_AddAllFriend_SC::InternalSwap(Msg_AddAllFriend_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  friends_.InternalSwap(&other->friends_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddAllFriend_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[19]);
}

// ===================================================================

class Msg_GetFriendMsgs_CS::_Internal {
 public:
};

Msg_GetFriendMsgs_CS::Msg_GetFriendMsgs_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetFriendMsgs_CS)
}
Msg_GetFriendMsgs_CS::Msg_GetFriendMsgs_CS(const Msg_GetFriendMsgs_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetFriendMsgs_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetFriendMsgs_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetFriendMsgs_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetFriendMsgs_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[20]);
}

// ===================================================================

class FriendOfflineMsg::_Internal {
 public:
};

void FriendOfflineMsg::clear_msg() {
  msg_.Clear();
}
FriendOfflineMsg::FriendOfflineMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  msg_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.FriendOfflineMsg)
}
FriendOfflineMsg::FriendOfflineMsg(const FriendOfflineMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      msg_(from.msg_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  friend_id_ = from.friend_id_;
  // @@protoc_insertion_point(copy_constructor:XrPb.FriendOfflineMsg)
}

inline void FriendOfflineMsg::SharedCtor() {
friend_id_ = int64_t{0};
}

FriendOfflineMsg::~FriendOfflineMsg() {
  // @@protoc_insertion_point(destructor:XrPb.FriendOfflineMsg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FriendOfflineMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FriendOfflineMsg::ArenaDtor(void* object) {
  FriendOfflineMsg* _this = reinterpret_cast< FriendOfflineMsg* >(object);
  (void)_this;
}
void FriendOfflineMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FriendOfflineMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FriendOfflineMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.FriendOfflineMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.Clear();
  friend_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendOfflineMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 friend_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          friend_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .XrPb.ChatMsgData msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_msg(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendOfflineMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.FriendOfflineMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 friend_id = 1;
  if (this->_internal_friend_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_friend_id(), target);
  }

  // repeated .XrPb.ChatMsgData msg = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_msg_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_msg(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.FriendOfflineMsg)
  return target;
}

size_t FriendOfflineMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.FriendOfflineMsg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.ChatMsgData msg = 2;
  total_size += 1UL * this->_internal_msg_size();
  for (const auto& msg : this->msg_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 friend_id = 1;
  if (this->_internal_friend_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_friend_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendOfflineMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FriendOfflineMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendOfflineMsg::GetClassData() const { return &_class_data_; }

void FriendOfflineMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FriendOfflineMsg *>(to)->MergeFrom(
      static_cast<const FriendOfflineMsg &>(from));
}


void FriendOfflineMsg::MergeFrom(const FriendOfflineMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.FriendOfflineMsg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  msg_.MergeFrom(from.msg_);
  if (from._internal_friend_id() != 0) {
    _internal_set_friend_id(from._internal_friend_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendOfflineMsg::CopyFrom(const FriendOfflineMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.FriendOfflineMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendOfflineMsg::IsInitialized() const {
  return true;
}

void FriendOfflineMsg::InternalSwap(FriendOfflineMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  msg_.InternalSwap(&other->msg_);
  swap(friend_id_, other->friend_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendOfflineMsg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[21]);
}

// ===================================================================

class Msg_GetFriendMsgs_SC::_Internal {
 public:
};

Msg_GetFriendMsgs_SC::Msg_GetFriendMsgs_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  friend__(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetFriendMsgs_SC)
}
Msg_GetFriendMsgs_SC::Msg_GetFriendMsgs_SC(const Msg_GetFriendMsgs_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      friend__(from.friend__) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  finish_ = from.finish_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetFriendMsgs_SC)
}

inline void Msg_GetFriendMsgs_SC::SharedCtor() {
finish_ = false;
}

Msg_GetFriendMsgs_SC::~Msg_GetFriendMsgs_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GetFriendMsgs_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GetFriendMsgs_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_GetFriendMsgs_SC::ArenaDtor(void* object) {
  Msg_GetFriendMsgs_SC* _this = reinterpret_cast< Msg_GetFriendMsgs_SC* >(object);
  (void)_this;
}
void Msg_GetFriendMsgs_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GetFriendMsgs_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GetFriendMsgs_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GetFriendMsgs_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend__.Clear();
  finish_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GetFriendMsgs_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .XrPb.FriendOfflineMsg friend = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_friend_(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool finish = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          finish_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GetFriendMsgs_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GetFriendMsgs_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XrPb.FriendOfflineMsg friend = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_friend__size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_friend_(i), target, stream);
  }

  // bool finish = 2;
  if (this->_internal_finish() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_finish(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GetFriendMsgs_SC)
  return target;
}

size_t Msg_GetFriendMsgs_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GetFriendMsgs_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.FriendOfflineMsg friend = 1;
  total_size += 1UL * this->_internal_friend__size();
  for (const auto& msg : this->friend__) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool finish = 2;
  if (this->_internal_finish() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetFriendMsgs_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GetFriendMsgs_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetFriendMsgs_SC::GetClassData() const { return &_class_data_; }

void Msg_GetFriendMsgs_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GetFriendMsgs_SC *>(to)->MergeFrom(
      static_cast<const Msg_GetFriendMsgs_SC &>(from));
}


void Msg_GetFriendMsgs_SC::MergeFrom(const Msg_GetFriendMsgs_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GetFriendMsgs_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  friend__.MergeFrom(from.friend__);
  if (from._internal_finish() != 0) {
    _internal_set_finish(from._internal_finish());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GetFriendMsgs_SC::CopyFrom(const Msg_GetFriendMsgs_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GetFriendMsgs_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GetFriendMsgs_SC::IsInitialized() const {
  return true;
}

void Msg_GetFriendMsgs_SC::InternalSwap(Msg_GetFriendMsgs_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  friend__.InternalSwap(&other->friend__);
  swap(finish_, other->finish_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetFriendMsgs_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[22]);
}

// ===================================================================

class Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::_Internal {
 public:
};

Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair)
}
Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair(const Msg_FriendInfoUpdate_PUSH_AttrInt64Pair& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&value_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair)
}

inline void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&value_)) + sizeof(type_));
}

Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::~Msg_FriendInfoUpdate_PUSH_AttrInt64Pair() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::ArenaDtor(void* object) {
  Msg_FriendInfoUpdate_PUSH_AttrInt64Pair* _this = reinterpret_cast< Msg_FriendInfoUpdate_PUSH_AttrInt64Pair* >(object);
  (void)_this;
}
void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&value_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .XrPb.Msg_FriendInfoUpdate_PUSH.AttrType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::XrPb::Msg_FriendInfoUpdate_PUSH_AttrType>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .XrPb.Msg_FriendInfoUpdate_PUSH.AttrType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // int64 value = 2;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair)
  return target;
}

size_t Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 value = 2;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_value());
  }

  // .XrPb.Msg_FriendInfoUpdate_PUSH.AttrType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::GetClassData() const { return &_class_data_; }

void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_FriendInfoUpdate_PUSH_AttrInt64Pair *>(to)->MergeFrom(
      static_cast<const Msg_FriendInfoUpdate_PUSH_AttrInt64Pair &>(from));
}


void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::MergeFrom(const Msg_FriendInfoUpdate_PUSH_AttrInt64Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::CopyFrom(const Msg_FriendInfoUpdate_PUSH_AttrInt64Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::IsInitialized() const {
  return true;
}

void Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::InternalSwap(Msg_FriendInfoUpdate_PUSH_AttrInt64Pair* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_FriendInfoUpdate_PUSH_AttrInt64Pair, type_)
      + sizeof(Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::type_)
      - PROTOBUF_FIELD_OFFSET(Msg_FriendInfoUpdate_PUSH_AttrInt64Pair, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_FriendInfoUpdate_PUSH_AttrInt64Pair::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[23]);
}

// ===================================================================

class Msg_FriendInfoUpdate_PUSH_AttrStringPair::_Internal {
 public:
};

Msg_FriendInfoUpdate_PUSH_AttrStringPair::Msg_FriendInfoUpdate_PUSH_AttrStringPair(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair)
}
Msg_FriendInfoUpdate_PUSH_AttrStringPair::Msg_FriendInfoUpdate_PUSH_AttrStringPair(const Msg_FriendInfoUpdate_PUSH_AttrStringPair& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArenaForAllocation());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair)
}

inline void Msg_FriendInfoUpdate_PUSH_AttrStringPair::SharedCtor() {
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = 0;
}

Msg_FriendInfoUpdate_PUSH_AttrStringPair::~Msg_FriendInfoUpdate_PUSH_AttrStringPair() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_FriendInfoUpdate_PUSH_AttrStringPair::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_FriendInfoUpdate_PUSH_AttrStringPair::ArenaDtor(void* object) {
  Msg_FriendInfoUpdate_PUSH_AttrStringPair* _this = reinterpret_cast< Msg_FriendInfoUpdate_PUSH_AttrStringPair* >(object);
  (void)_this;
}
void Msg_FriendInfoUpdate_PUSH_AttrStringPair::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_FriendInfoUpdate_PUSH_AttrStringPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_FriendInfoUpdate_PUSH_AttrStringPair::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty();
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_FriendInfoUpdate_PUSH_AttrStringPair::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .XrPb.Msg_FriendInfoUpdate_PUSH.AttrType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::XrPb::Msg_FriendInfoUpdate_PUSH_AttrType>(val));
        } else
          goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair.value"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_FriendInfoUpdate_PUSH_AttrStringPair::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .XrPb.Msg_FriendInfoUpdate_PUSH.AttrType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair)
  return target;
}

size_t Msg_FriendInfoUpdate_PUSH_AttrStringPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // .XrPb.Msg_FriendInfoUpdate_PUSH.AttrType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_FriendInfoUpdate_PUSH_AttrStringPair::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_FriendInfoUpdate_PUSH_AttrStringPair::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_FriendInfoUpdate_PUSH_AttrStringPair::GetClassData() const { return &_class_data_; }

void Msg_FriendInfoUpdate_PUSH_AttrStringPair::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_FriendInfoUpdate_PUSH_AttrStringPair *>(to)->MergeFrom(
      static_cast<const Msg_FriendInfoUpdate_PUSH_AttrStringPair &>(from));
}


void Msg_FriendInfoUpdate_PUSH_AttrStringPair::MergeFrom(const Msg_FriendInfoUpdate_PUSH_AttrStringPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_FriendInfoUpdate_PUSH_AttrStringPair::CopyFrom(const Msg_FriendInfoUpdate_PUSH_AttrStringPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_FriendInfoUpdate_PUSH_AttrStringPair::IsInitialized() const {
  return true;
}

void Msg_FriendInfoUpdate_PUSH_AttrStringPair::InternalSwap(Msg_FriendInfoUpdate_PUSH_AttrStringPair* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_FriendInfoUpdate_PUSH_AttrStringPair::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[24]);
}

// ===================================================================

class Msg_FriendInfoUpdate_PUSH::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_FriendInfoUpdate_PUSH>()._has_bits_);
  static void set_has_is_friend(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Msg_FriendInfoUpdate_PUSH::Msg_FriendInfoUpdate_PUSH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  attrint64pairs_(arena),
  attrstringpairs_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_FriendInfoUpdate_PUSH)
}
Msg_FriendInfoUpdate_PUSH::Msg_FriendInfoUpdate_PUSH(const Msg_FriendInfoUpdate_PUSH& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      attrint64pairs_(from.attrint64pairs_),
      attrstringpairs_(from.attrstringpairs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&friend_acc_id_, &from.friend_acc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_friend_) -
    reinterpret_cast<char*>(&friend_acc_id_)) + sizeof(is_friend_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_FriendInfoUpdate_PUSH)
}

inline void Msg_FriendInfoUpdate_PUSH::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&friend_acc_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_friend_) -
    reinterpret_cast<char*>(&friend_acc_id_)) + sizeof(is_friend_));
}

Msg_FriendInfoUpdate_PUSH::~Msg_FriendInfoUpdate_PUSH() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_FriendInfoUpdate_PUSH)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_FriendInfoUpdate_PUSH::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_FriendInfoUpdate_PUSH::ArenaDtor(void* object) {
  Msg_FriendInfoUpdate_PUSH* _this = reinterpret_cast< Msg_FriendInfoUpdate_PUSH* >(object);
  (void)_this;
}
void Msg_FriendInfoUpdate_PUSH::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_FriendInfoUpdate_PUSH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_FriendInfoUpdate_PUSH::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_FriendInfoUpdate_PUSH)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attrint64pairs_.Clear();
  attrstringpairs_.Clear();
  friend_acc_id_ = int64_t{0};
  is_friend_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_FriendInfoUpdate_PUSH::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 friend_acc_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          friend_acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair attrInt64Pairs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attrint64pairs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair attrStringPairs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attrstringpairs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool is_friend = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_is_friend(&has_bits);
          is_friend_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_FriendInfoUpdate_PUSH::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_FriendInfoUpdate_PUSH)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 friend_acc_id = 1;
  if (this->_internal_friend_acc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_friend_acc_id(), target);
  }

  // repeated .XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair attrInt64Pairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attrint64pairs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_attrint64pairs(i), target, stream);
  }

  // repeated .XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair attrStringPairs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_attrstringpairs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_attrstringpairs(i), target, stream);
  }

  // optional bool is_friend = 4;
  if (_internal_has_is_friend()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_friend(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_FriendInfoUpdate_PUSH)
  return target;
}

size_t Msg_FriendInfoUpdate_PUSH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_FriendInfoUpdate_PUSH)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.Msg_FriendInfoUpdate_PUSH.AttrInt64Pair attrInt64Pairs = 2;
  total_size += 1UL * this->_internal_attrint64pairs_size();
  for (const auto& msg : this->attrint64pairs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .XrPb.Msg_FriendInfoUpdate_PUSH.AttrStringPair attrStringPairs = 3;
  total_size += 1UL * this->_internal_attrstringpairs_size();
  for (const auto& msg : this->attrstringpairs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 friend_acc_id = 1;
  if (this->_internal_friend_acc_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_friend_acc_id());
  }

  // optional bool is_friend = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_FriendInfoUpdate_PUSH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_FriendInfoUpdate_PUSH::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_FriendInfoUpdate_PUSH::GetClassData() const { return &_class_data_; }

void Msg_FriendInfoUpdate_PUSH::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_FriendInfoUpdate_PUSH *>(to)->MergeFrom(
      static_cast<const Msg_FriendInfoUpdate_PUSH &>(from));
}


void Msg_FriendInfoUpdate_PUSH::MergeFrom(const Msg_FriendInfoUpdate_PUSH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_FriendInfoUpdate_PUSH)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  attrint64pairs_.MergeFrom(from.attrint64pairs_);
  attrstringpairs_.MergeFrom(from.attrstringpairs_);
  if (from._internal_friend_acc_id() != 0) {
    _internal_set_friend_acc_id(from._internal_friend_acc_id());
  }
  if (from._internal_has_is_friend()) {
    _internal_set_is_friend(from._internal_is_friend());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_FriendInfoUpdate_PUSH::CopyFrom(const Msg_FriendInfoUpdate_PUSH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_FriendInfoUpdate_PUSH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_FriendInfoUpdate_PUSH::IsInitialized() const {
  return true;
}

void Msg_FriendInfoUpdate_PUSH::InternalSwap(Msg_FriendInfoUpdate_PUSH* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attrint64pairs_.InternalSwap(&other->attrint64pairs_);
  attrstringpairs_.InternalSwap(&other->attrstringpairs_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_FriendInfoUpdate_PUSH, is_friend_)
      + sizeof(Msg_FriendInfoUpdate_PUSH::is_friend_)
      - PROTOBUF_FIELD_OFFSET(Msg_FriendInfoUpdate_PUSH, friend_acc_id_)>(
          reinterpret_cast<char*>(&friend_acc_id_),
          reinterpret_cast<char*>(&other->friend_acc_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_FriendInfoUpdate_PUSH::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[25]);
}

// ===================================================================

class Msg_SearchFriend_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_SearchFriend_CS>()._has_bits_);
  static void set_has_search(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Msg_SearchFriend_CS::Msg_SearchFriend_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_SearchFriend_CS)
}
Msg_SearchFriend_CS::Msg_SearchFriend_CS(const Msg_SearchFriend_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  search_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    search_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_search()) {
    search_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_search(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_SearchFriend_CS)
}

inline void Msg_SearchFriend_CS::SharedCtor() {
search_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  search_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Msg_SearchFriend_CS::~Msg_SearchFriend_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_SearchFriend_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_SearchFriend_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  search_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_SearchFriend_CS::ArenaDtor(void* object) {
  Msg_SearchFriend_CS* _this = reinterpret_cast< Msg_SearchFriend_CS* >(object);
  (void)_this;
}
void Msg_SearchFriend_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_SearchFriend_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_SearchFriend_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_SearchFriend_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    search_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_SearchFriend_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string search = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_search();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_SearchFriend_CS.search"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_SearchFriend_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_SearchFriend_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string search = 1;
  if (_internal_has_search()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_search().data(), static_cast<int>(this->_internal_search().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_SearchFriend_CS.search");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_search(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_SearchFriend_CS)
  return target;
}

size_t Msg_SearchFriend_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_SearchFriend_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string search = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_search());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_SearchFriend_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_SearchFriend_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_SearchFriend_CS::GetClassData() const { return &_class_data_; }

void Msg_SearchFriend_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_SearchFriend_CS *>(to)->MergeFrom(
      static_cast<const Msg_SearchFriend_CS &>(from));
}


void Msg_SearchFriend_CS::MergeFrom(const Msg_SearchFriend_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_SearchFriend_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_search()) {
    _internal_set_search(from._internal_search());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_SearchFriend_CS::CopyFrom(const Msg_SearchFriend_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_SearchFriend_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_SearchFriend_CS::IsInitialized() const {
  return true;
}

void Msg_SearchFriend_CS::InternalSwap(Msg_SearchFriend_CS* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &search_, lhs_arena,
      &other->search_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_SearchFriend_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[26]);
}

// ===================================================================

class Msg_SearchFriend_SC::_Internal {
 public:
};

Msg_SearchFriend_SC::Msg_SearchFriend_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  friends_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_SearchFriend_SC)
}
Msg_SearchFriend_SC::Msg_SearchFriend_SC(const Msg_SearchFriend_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_SearchFriend_SC)
}

inline void Msg_SearchFriend_SC::SharedCtor() {
}

Msg_SearchFriend_SC::~Msg_SearchFriend_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_SearchFriend_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_SearchFriend_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_SearchFriend_SC::ArenaDtor(void* object) {
  Msg_SearchFriend_SC* _this = reinterpret_cast< Msg_SearchFriend_SC* >(object);
  (void)_this;
}
void Msg_SearchFriend_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_SearchFriend_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_SearchFriend_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_SearchFriend_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_SearchFriend_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .XrPb.FriendInfo friends = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_friends(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_SearchFriend_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_SearchFriend_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo friends = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_friends_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_friends(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_SearchFriend_SC)
  return target;
}

size_t Msg_SearchFriend_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_SearchFriend_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo friends = 1;
  total_size += 1UL * this->_internal_friends_size();
  for (const auto& msg : this->friends_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_SearchFriend_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_SearchFriend_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_SearchFriend_SC::GetClassData() const { return &_class_data_; }

void Msg_SearchFriend_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_SearchFriend_SC *>(to)->MergeFrom(
      static_cast<const Msg_SearchFriend_SC &>(from));
}


void Msg_SearchFriend_SC::MergeFrom(const Msg_SearchFriend_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_SearchFriend_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_SearchFriend_SC::CopyFrom(const Msg_SearchFriend_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_SearchFriend_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_SearchFriend_SC::IsInitialized() const {
  return true;
}

void Msg_SearchFriend_SC::InternalSwap(Msg_SearchFriend_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  friends_.InternalSwap(&other->friends_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_SearchFriend_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[27]);
}

// ===================================================================

class Msg_GetSelfApplyList_CS::_Internal {
 public:
};

Msg_GetSelfApplyList_CS::Msg_GetSelfApplyList_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetSelfApplyList_CS)
}
Msg_GetSelfApplyList_CS::Msg_GetSelfApplyList_CS(const Msg_GetSelfApplyList_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetSelfApplyList_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetSelfApplyList_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetSelfApplyList_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetSelfApplyList_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[28]);
}

// ===================================================================

class BeAppliedInfo::_Internal {
 public:
};

BeAppliedInfo::BeAppliedInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.BeAppliedInfo)
}
BeAppliedInfo::BeAppliedInfo(const BeAppliedInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&acc_id_, &from.acc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&acc_id_)) + sizeof(end_time_));
  // @@protoc_insertion_point(copy_constructor:XrPb.BeAppliedInfo)
}

inline void BeAppliedInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&acc_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&acc_id_)) + sizeof(end_time_));
}

BeAppliedInfo::~BeAppliedInfo() {
  // @@protoc_insertion_point(destructor:XrPb.BeAppliedInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BeAppliedInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BeAppliedInfo::ArenaDtor(void* object) {
  BeAppliedInfo* _this = reinterpret_cast< BeAppliedInfo* >(object);
  (void)_this;
}
void BeAppliedInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BeAppliedInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BeAppliedInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.BeAppliedInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&acc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&acc_id_)) + sizeof(end_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BeAppliedInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 acc_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 end_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          end_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BeAppliedInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.BeAppliedInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 acc_id = 1;
  if (this->_internal_acc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_acc_id(), target);
  }

  // int64 end_time = 2;
  if (this->_internal_end_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_end_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.BeAppliedInfo)
  return target;
}

size_t BeAppliedInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.BeAppliedInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 acc_id = 1;
  if (this->_internal_acc_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_acc_id());
  }

  // int64 end_time = 2;
  if (this->_internal_end_time() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_end_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BeAppliedInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BeAppliedInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BeAppliedInfo::GetClassData() const { return &_class_data_; }

void BeAppliedInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BeAppliedInfo *>(to)->MergeFrom(
      static_cast<const BeAppliedInfo &>(from));
}


void BeAppliedInfo::MergeFrom(const BeAppliedInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.BeAppliedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_acc_id() != 0) {
    _internal_set_acc_id(from._internal_acc_id());
  }
  if (from._internal_end_time() != 0) {
    _internal_set_end_time(from._internal_end_time());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BeAppliedInfo::CopyFrom(const BeAppliedInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.BeAppliedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeAppliedInfo::IsInitialized() const {
  return true;
}

void BeAppliedInfo::InternalSwap(BeAppliedInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BeAppliedInfo, end_time_)
      + sizeof(BeAppliedInfo::end_time_)
      - PROTOBUF_FIELD_OFFSET(BeAppliedInfo, acc_id_)>(
          reinterpret_cast<char*>(&acc_id_),
          reinterpret_cast<char*>(&other->acc_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BeAppliedInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[29]);
}

// ===================================================================

class Msg_GetSelfApplyList_SC::_Internal {
 public:
};

Msg_GetSelfApplyList_SC::Msg_GetSelfApplyList_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  applied_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetSelfApplyList_SC)
}
Msg_GetSelfApplyList_SC::Msg_GetSelfApplyList_SC(const Msg_GetSelfApplyList_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      applied_(from.applied_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetSelfApplyList_SC)
}

inline void Msg_GetSelfApplyList_SC::SharedCtor() {
}

Msg_GetSelfApplyList_SC::~Msg_GetSelfApplyList_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GetSelfApplyList_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GetSelfApplyList_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_GetSelfApplyList_SC::ArenaDtor(void* object) {
  Msg_GetSelfApplyList_SC* _this = reinterpret_cast< Msg_GetSelfApplyList_SC* >(object);
  (void)_this;
}
void Msg_GetSelfApplyList_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GetSelfApplyList_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GetSelfApplyList_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GetSelfApplyList_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applied_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GetSelfApplyList_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .XrPb.BeAppliedInfo applied = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_applied(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GetSelfApplyList_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GetSelfApplyList_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XrPb.BeAppliedInfo applied = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_applied_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_applied(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GetSelfApplyList_SC)
  return target;
}

size_t Msg_GetSelfApplyList_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GetSelfApplyList_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.BeAppliedInfo applied = 1;
  total_size += 1UL * this->_internal_applied_size();
  for (const auto& msg : this->applied_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetSelfApplyList_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GetSelfApplyList_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetSelfApplyList_SC::GetClassData() const { return &_class_data_; }

void Msg_GetSelfApplyList_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GetSelfApplyList_SC *>(to)->MergeFrom(
      static_cast<const Msg_GetSelfApplyList_SC &>(from));
}


void Msg_GetSelfApplyList_SC::MergeFrom(const Msg_GetSelfApplyList_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GetSelfApplyList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  applied_.MergeFrom(from.applied_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GetSelfApplyList_SC::CopyFrom(const Msg_GetSelfApplyList_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GetSelfApplyList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GetSelfApplyList_SC::IsInitialized() const {
  return true;
}

void Msg_GetSelfApplyList_SC::InternalSwap(Msg_GetSelfApplyList_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  applied_.InternalSwap(&other->applied_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetSelfApplyList_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[30]);
}

// ===================================================================

class Msg_AddBlackList_CS::_Internal {
 public:
};

Msg_AddBlackList_CS::Msg_AddBlackList_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddBlackList_CS)
}
Msg_AddBlackList_CS::Msg_AddBlackList_CS(const Msg_AddBlackList_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  acc_id_ = from.acc_id_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddBlackList_CS)
}

inline void Msg_AddBlackList_CS::SharedCtor() {
acc_id_ = int64_t{0};
}

Msg_AddBlackList_CS::~Msg_AddBlackList_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_AddBlackList_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_AddBlackList_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_AddBlackList_CS::ArenaDtor(void* object) {
  Msg_AddBlackList_CS* _this = reinterpret_cast< Msg_AddBlackList_CS* >(object);
  (void)_this;
}
void Msg_AddBlackList_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_AddBlackList_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_AddBlackList_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_AddBlackList_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acc_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_AddBlackList_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 acc_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_AddBlackList_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_AddBlackList_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 acc_id = 1;
  if (this->_internal_acc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_acc_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_AddBlackList_CS)
  return target;
}

size_t Msg_AddBlackList_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_AddBlackList_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 acc_id = 1;
  if (this->_internal_acc_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_acc_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddBlackList_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_AddBlackList_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddBlackList_CS::GetClassData() const { return &_class_data_; }

void Msg_AddBlackList_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_AddBlackList_CS *>(to)->MergeFrom(
      static_cast<const Msg_AddBlackList_CS &>(from));
}


void Msg_AddBlackList_CS::MergeFrom(const Msg_AddBlackList_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_AddBlackList_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_acc_id() != 0) {
    _internal_set_acc_id(from._internal_acc_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_AddBlackList_CS::CopyFrom(const Msg_AddBlackList_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_AddBlackList_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddBlackList_CS::IsInitialized() const {
  return true;
}

void Msg_AddBlackList_CS::InternalSwap(Msg_AddBlackList_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(acc_id_, other->acc_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddBlackList_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[31]);
}

// ===================================================================

class Msg_AddBlackList_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_AddBlackList_SC>()._has_bits_);
  static const ::XrPb::FriendInfo& player(const Msg_AddBlackList_SC* msg);
  static void set_has_player(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::XrPb::FriendInfo&
Msg_AddBlackList_SC::_Internal::player(const Msg_AddBlackList_SC* msg) {
  return *msg->player_;
}
Msg_AddBlackList_SC::Msg_AddBlackList_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_AddBlackList_SC)
}
Msg_AddBlackList_SC::Msg_AddBlackList_SC(const Msg_AddBlackList_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    player_ = new ::XrPb::FriendInfo(*from.player_);
  } else {
    player_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_AddBlackList_SC)
}

inline void Msg_AddBlackList_SC::SharedCtor() {
player_ = nullptr;
}

Msg_AddBlackList_SC::~Msg_AddBlackList_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_AddBlackList_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_AddBlackList_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete player_;
}

void Msg_AddBlackList_SC::ArenaDtor(void* object) {
  Msg_AddBlackList_SC* _this = reinterpret_cast< Msg_AddBlackList_SC* >(object);
  (void)_this;
}
void Msg_AddBlackList_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_AddBlackList_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_AddBlackList_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_AddBlackList_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(player_ != nullptr);
    player_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_AddBlackList_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .XrPb.FriendInfo player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_AddBlackList_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_AddBlackList_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .XrPb.FriendInfo player = 1;
  if (_internal_has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::player(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_AddBlackList_SC)
  return target;
}

size_t Msg_AddBlackList_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_AddBlackList_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .XrPb.FriendInfo player = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *player_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_AddBlackList_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_AddBlackList_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_AddBlackList_SC::GetClassData() const { return &_class_data_; }

void Msg_AddBlackList_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_AddBlackList_SC *>(to)->MergeFrom(
      static_cast<const Msg_AddBlackList_SC &>(from));
}


void Msg_AddBlackList_SC::MergeFrom(const Msg_AddBlackList_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_AddBlackList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player()) {
    _internal_mutable_player()->::XrPb::FriendInfo::MergeFrom(from._internal_player());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_AddBlackList_SC::CopyFrom(const Msg_AddBlackList_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_AddBlackList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_AddBlackList_SC::IsInitialized() const {
  return true;
}

void Msg_AddBlackList_SC::InternalSwap(Msg_AddBlackList_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(player_, other->player_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_AddBlackList_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[32]);
}

// ===================================================================

class Msg_DelBlackList_CS::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_DelBlackList_CS>()._has_bits_);
  static void set_has_acc_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Msg_DelBlackList_CS::Msg_DelBlackList_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DelBlackList_CS)
}
Msg_DelBlackList_CS::Msg_DelBlackList_CS(const Msg_DelBlackList_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  acc_id_ = from.acc_id_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DelBlackList_CS)
}

inline void Msg_DelBlackList_CS::SharedCtor() {
acc_id_ = int64_t{0};
}

Msg_DelBlackList_CS::~Msg_DelBlackList_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_DelBlackList_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_DelBlackList_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_DelBlackList_CS::ArenaDtor(void* object) {
  Msg_DelBlackList_CS* _this = reinterpret_cast< Msg_DelBlackList_CS* >(object);
  (void)_this;
}
void Msg_DelBlackList_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_DelBlackList_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_DelBlackList_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_DelBlackList_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acc_id_ = int64_t{0};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_DelBlackList_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 acc_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_acc_id(&has_bits);
          acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_DelBlackList_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_DelBlackList_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int64 acc_id = 1;
  if (_internal_has_acc_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_acc_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_DelBlackList_CS)
  return target;
}

size_t Msg_DelBlackList_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_DelBlackList_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 acc_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_acc_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DelBlackList_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_DelBlackList_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DelBlackList_CS::GetClassData() const { return &_class_data_; }

void Msg_DelBlackList_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_DelBlackList_CS *>(to)->MergeFrom(
      static_cast<const Msg_DelBlackList_CS &>(from));
}


void Msg_DelBlackList_CS::MergeFrom(const Msg_DelBlackList_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_DelBlackList_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_acc_id()) {
    _internal_set_acc_id(from._internal_acc_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_DelBlackList_CS::CopyFrom(const Msg_DelBlackList_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_DelBlackList_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DelBlackList_CS::IsInitialized() const {
  return true;
}

void Msg_DelBlackList_CS::InternalSwap(Msg_DelBlackList_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(acc_id_, other->acc_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_DelBlackList_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[33]);
}

// ===================================================================

class Msg_DelBlackList_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_DelBlackList_SC>()._has_bits_);
  static void set_has_acc_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Msg_DelBlackList_SC::Msg_DelBlackList_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DelBlackList_SC)
}
Msg_DelBlackList_SC::Msg_DelBlackList_SC(const Msg_DelBlackList_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  acc_id_ = from.acc_id_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DelBlackList_SC)
}

inline void Msg_DelBlackList_SC::SharedCtor() {
acc_id_ = int64_t{0};
}

Msg_DelBlackList_SC::~Msg_DelBlackList_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_DelBlackList_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_DelBlackList_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_DelBlackList_SC::ArenaDtor(void* object) {
  Msg_DelBlackList_SC* _this = reinterpret_cast< Msg_DelBlackList_SC* >(object);
  (void)_this;
}
void Msg_DelBlackList_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_DelBlackList_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_DelBlackList_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_DelBlackList_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acc_id_ = int64_t{0};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_DelBlackList_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 acc_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_acc_id(&has_bits);
          acc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_DelBlackList_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_DelBlackList_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int64 acc_id = 1;
  if (_internal_has_acc_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_acc_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_DelBlackList_SC)
  return target;
}

size_t Msg_DelBlackList_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_DelBlackList_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 acc_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_acc_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DelBlackList_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_DelBlackList_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DelBlackList_SC::GetClassData() const { return &_class_data_; }

void Msg_DelBlackList_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_DelBlackList_SC *>(to)->MergeFrom(
      static_cast<const Msg_DelBlackList_SC &>(from));
}


void Msg_DelBlackList_SC::MergeFrom(const Msg_DelBlackList_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_DelBlackList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_acc_id()) {
    _internal_set_acc_id(from._internal_acc_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_DelBlackList_SC::CopyFrom(const Msg_DelBlackList_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_DelBlackList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DelBlackList_SC::IsInitialized() const {
  return true;
}

void Msg_DelBlackList_SC::InternalSwap(Msg_DelBlackList_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(acc_id_, other->acc_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_DelBlackList_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[34]);
}

// ===================================================================

class Msg_GetBlackList_CS::_Internal {
 public:
};

Msg_GetBlackList_CS::Msg_GetBlackList_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetBlackList_CS)
}
Msg_GetBlackList_CS::Msg_GetBlackList_CS(const Msg_GetBlackList_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetBlackList_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetBlackList_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetBlackList_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetBlackList_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[35]);
}

// ===================================================================

class Msg_GetBlackList_SC::_Internal {
 public:
};

Msg_GetBlackList_SC::Msg_GetBlackList_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  black_list_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetBlackList_SC)
}
Msg_GetBlackList_SC::Msg_GetBlackList_SC(const Msg_GetBlackList_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      black_list_(from.black_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetBlackList_SC)
}

inline void Msg_GetBlackList_SC::SharedCtor() {
}

Msg_GetBlackList_SC::~Msg_GetBlackList_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GetBlackList_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GetBlackList_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_GetBlackList_SC::ArenaDtor(void* object) {
  Msg_GetBlackList_SC* _this = reinterpret_cast< Msg_GetBlackList_SC* >(object);
  (void)_this;
}
void Msg_GetBlackList_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GetBlackList_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GetBlackList_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GetBlackList_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  black_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GetBlackList_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .XrPb.FriendInfo black_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_black_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GetBlackList_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GetBlackList_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo black_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_black_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_black_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GetBlackList_SC)
  return target;
}

size_t Msg_GetBlackList_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GetBlackList_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.FriendInfo black_list = 1;
  total_size += 1UL * this->_internal_black_list_size();
  for (const auto& msg : this->black_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetBlackList_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GetBlackList_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetBlackList_SC::GetClassData() const { return &_class_data_; }

void Msg_GetBlackList_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GetBlackList_SC *>(to)->MergeFrom(
      static_cast<const Msg_GetBlackList_SC &>(from));
}


void Msg_GetBlackList_SC::MergeFrom(const Msg_GetBlackList_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GetBlackList_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  black_list_.MergeFrom(from.black_list_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GetBlackList_SC::CopyFrom(const Msg_GetBlackList_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GetBlackList_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GetBlackList_SC::IsInitialized() const {
  return true;
}

void Msg_GetBlackList_SC::InternalSwap(Msg_GetBlackList_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  black_list_.InternalSwap(&other->black_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetBlackList_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[36]);
}

// ===================================================================

class Msg_RefuseAllFriend_CS::_Internal {
 public:
};

Msg_RefuseAllFriend_CS::Msg_RefuseAllFriend_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_RefuseAllFriend_CS)
}
Msg_RefuseAllFriend_CS::Msg_RefuseAllFriend_CS(const Msg_RefuseAllFriend_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_RefuseAllFriend_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_RefuseAllFriend_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_RefuseAllFriend_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_RefuseAllFriend_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[37]);
}

// ===================================================================

class Msg_RefuseAllFriend_SC::_Internal {
 public:
};

Msg_RefuseAllFriend_SC::Msg_RefuseAllFriend_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_RefuseAllFriend_SC)
}
Msg_RefuseAllFriend_SC::Msg_RefuseAllFriend_SC(const Msg_RefuseAllFriend_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_RefuseAllFriend_SC)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_RefuseAllFriend_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_RefuseAllFriend_SC::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_RefuseAllFriend_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[38]);
}

// ===================================================================

class Msg_DeleteLastChatFriend_CS::_Internal {
 public:
};

Msg_DeleteLastChatFriend_CS::Msg_DeleteLastChatFriend_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DeleteLastChatFriend_CS)
}
Msg_DeleteLastChatFriend_CS::Msg_DeleteLastChatFriend_CS(const Msg_DeleteLastChatFriend_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uiaccid_ = from.uiaccid_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DeleteLastChatFriend_CS)
}

inline void Msg_DeleteLastChatFriend_CS::SharedCtor() {
uiaccid_ = int64_t{0};
}

Msg_DeleteLastChatFriend_CS::~Msg_DeleteLastChatFriend_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_DeleteLastChatFriend_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_DeleteLastChatFriend_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_DeleteLastChatFriend_CS::ArenaDtor(void* object) {
  Msg_DeleteLastChatFriend_CS* _this = reinterpret_cast< Msg_DeleteLastChatFriend_CS* >(object);
  (void)_this;
}
void Msg_DeleteLastChatFriend_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_DeleteLastChatFriend_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_DeleteLastChatFriend_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_DeleteLastChatFriend_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uiaccid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_DeleteLastChatFriend_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 uiAccId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uiaccid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_DeleteLastChatFriend_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_DeleteLastChatFriend_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uiAccId = 1;
  if (this->_internal_uiaccid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_uiaccid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_DeleteLastChatFriend_CS)
  return target;
}

size_t Msg_DeleteLastChatFriend_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_DeleteLastChatFriend_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 uiAccId = 1;
  if (this->_internal_uiaccid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_uiaccid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DeleteLastChatFriend_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_DeleteLastChatFriend_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DeleteLastChatFriend_CS::GetClassData() const { return &_class_data_; }

void Msg_DeleteLastChatFriend_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_DeleteLastChatFriend_CS *>(to)->MergeFrom(
      static_cast<const Msg_DeleteLastChatFriend_CS &>(from));
}


void Msg_DeleteLastChatFriend_CS::MergeFrom(const Msg_DeleteLastChatFriend_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_DeleteLastChatFriend_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uiaccid() != 0) {
    _internal_set_uiaccid(from._internal_uiaccid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_DeleteLastChatFriend_CS::CopyFrom(const Msg_DeleteLastChatFriend_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_DeleteLastChatFriend_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DeleteLastChatFriend_CS::IsInitialized() const {
  return true;
}

void Msg_DeleteLastChatFriend_CS::InternalSwap(Msg_DeleteLastChatFriend_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(uiaccid_, other->uiaccid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_DeleteLastChatFriend_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[39]);
}

// ===================================================================

class Msg_DeleteLastChatFriend_SC::_Internal {
 public:
};

Msg_DeleteLastChatFriend_SC::Msg_DeleteLastChatFriend_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_DeleteLastChatFriend_SC)
}
Msg_DeleteLastChatFriend_SC::Msg_DeleteLastChatFriend_SC(const Msg_DeleteLastChatFriend_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uiaccid_ = from.uiaccid_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_DeleteLastChatFriend_SC)
}

inline void Msg_DeleteLastChatFriend_SC::SharedCtor() {
uiaccid_ = int64_t{0};
}

Msg_DeleteLastChatFriend_SC::~Msg_DeleteLastChatFriend_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_DeleteLastChatFriend_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_DeleteLastChatFriend_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_DeleteLastChatFriend_SC::ArenaDtor(void* object) {
  Msg_DeleteLastChatFriend_SC* _this = reinterpret_cast< Msg_DeleteLastChatFriend_SC* >(object);
  (void)_this;
}
void Msg_DeleteLastChatFriend_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_DeleteLastChatFriend_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_DeleteLastChatFriend_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_DeleteLastChatFriend_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uiaccid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_DeleteLastChatFriend_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 uiAccId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uiaccid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_DeleteLastChatFriend_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_DeleteLastChatFriend_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uiAccId = 1;
  if (this->_internal_uiaccid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_uiaccid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_DeleteLastChatFriend_SC)
  return target;
}

size_t Msg_DeleteLastChatFriend_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_DeleteLastChatFriend_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 uiAccId = 1;
  if (this->_internal_uiaccid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_uiaccid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_DeleteLastChatFriend_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_DeleteLastChatFriend_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_DeleteLastChatFriend_SC::GetClassData() const { return &_class_data_; }

void Msg_DeleteLastChatFriend_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_DeleteLastChatFriend_SC *>(to)->MergeFrom(
      static_cast<const Msg_DeleteLastChatFriend_SC &>(from));
}


void Msg_DeleteLastChatFriend_SC::MergeFrom(const Msg_DeleteLastChatFriend_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_DeleteLastChatFriend_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_uiaccid() != 0) {
    _internal_set_uiaccid(from._internal_uiaccid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_DeleteLastChatFriend_SC::CopyFrom(const Msg_DeleteLastChatFriend_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_DeleteLastChatFriend_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_DeleteLastChatFriend_SC::IsInitialized() const {
  return true;
}

void Msg_DeleteLastChatFriend_SC::InternalSwap(Msg_DeleteLastChatFriend_SC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(uiaccid_, other->uiaccid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_DeleteLastChatFriend_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[40]);
}

// ===================================================================

class Msg_GetFriendInviteAward_CS::_Internal {
 public:
};

Msg_GetFriendInviteAward_CS::Msg_GetFriendInviteAward_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetFriendInviteAward_CS)
}
Msg_GetFriendInviteAward_CS::Msg_GetFriendInviteAward_CS(const Msg_GetFriendInviteAward_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetFriendInviteAward_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetFriendInviteAward_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetFriendInviteAward_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetFriendInviteAward_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[41]);
}

// ===================================================================

class FriendInviteAwardInfo::_Internal {
 public:
};

FriendInviteAwardInfo::FriendInviteAwardInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.FriendInviteAwardInfo)
}
FriendInviteAwardInfo::FriendInviteAwardInfo(const FriendInviteAwardInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&condition_, &from.condition_,
    static_cast<size_t>(reinterpret_cast<char*>(&gained_num_) -
    reinterpret_cast<char*>(&condition_)) + sizeof(gained_num_));
  // @@protoc_insertion_point(copy_constructor:XrPb.FriendInviteAwardInfo)
}

inline void FriendInviteAwardInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&condition_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&gained_num_) -
    reinterpret_cast<char*>(&condition_)) + sizeof(gained_num_));
}

FriendInviteAwardInfo::~FriendInviteAwardInfo() {
  // @@protoc_insertion_point(destructor:XrPb.FriendInviteAwardInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FriendInviteAwardInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FriendInviteAwardInfo::ArenaDtor(void* object) {
  FriendInviteAwardInfo* _this = reinterpret_cast< FriendInviteAwardInfo* >(object);
  (void)_this;
}
void FriendInviteAwardInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FriendInviteAwardInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FriendInviteAwardInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.FriendInviteAwardInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&condition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gained_num_) -
      reinterpret_cast<char*>(&condition_)) + sizeof(gained_num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FriendInviteAwardInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 condition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          condition_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 gained_num = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          gained_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FriendInviteAwardInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.FriendInviteAwardInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 condition = 1;
  if (this->_internal_condition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_condition(), target);
  }

  // uint32 value = 2;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_value(), target);
  }

  // uint32 num = 3;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_num(), target);
  }

  // uint32 gained_num = 4;
  if (this->_internal_gained_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_gained_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.FriendInviteAwardInfo)
  return target;
}

size_t FriendInviteAwardInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.FriendInviteAwardInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 condition = 1;
  if (this->_internal_condition() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_condition());
  }

  // uint32 value = 2;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_value());
  }

  // uint32 num = 3;
  if (this->_internal_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_num());
  }

  // uint32 gained_num = 4;
  if (this->_internal_gained_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_gained_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FriendInviteAwardInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FriendInviteAwardInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FriendInviteAwardInfo::GetClassData() const { return &_class_data_; }

void FriendInviteAwardInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FriendInviteAwardInfo *>(to)->MergeFrom(
      static_cast<const FriendInviteAwardInfo &>(from));
}


void FriendInviteAwardInfo::MergeFrom(const FriendInviteAwardInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.FriendInviteAwardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_condition() != 0) {
    _internal_set_condition(from._internal_condition());
  }
  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_num() != 0) {
    _internal_set_num(from._internal_num());
  }
  if (from._internal_gained_num() != 0) {
    _internal_set_gained_num(from._internal_gained_num());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FriendInviteAwardInfo::CopyFrom(const FriendInviteAwardInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.FriendInviteAwardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendInviteAwardInfo::IsInitialized() const {
  return true;
}

void FriendInviteAwardInfo::InternalSwap(FriendInviteAwardInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FriendInviteAwardInfo, gained_num_)
      + sizeof(FriendInviteAwardInfo::gained_num_)
      - PROTOBUF_FIELD_OFFSET(FriendInviteAwardInfo, condition_)>(
          reinterpret_cast<char*>(&condition_),
          reinterpret_cast<char*>(&other->condition_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FriendInviteAwardInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[42]);
}

// ===================================================================

class Msg_GetFriendInviteAward_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_GetFriendInviteAward_SC>()._has_bits_);
  static void set_has_other_invite_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_self_invite_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Msg_GetFriendInviteAward_SC::Msg_GetFriendInviteAward_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  new_award_(arena),
  old_award_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GetFriendInviteAward_SC)
}
Msg_GetFriendInviteAward_SC::Msg_GetFriendInviteAward_SC(const Msg_GetFriendInviteAward_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      new_award_(from.new_award_),
      old_award_(from.old_award_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  other_invite_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    other_invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_other_invite_code()) {
    other_invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_other_invite_code(), 
      GetArenaForAllocation());
  }
  self_invite_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    self_invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_self_invite_code()) {
    self_invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_self_invite_code(), 
      GetArenaForAllocation());
  }
  used_count_ = from.used_count_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GetFriendInviteAward_SC)
}

inline void Msg_GetFriendInviteAward_SC::SharedCtor() {
other_invite_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  other_invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
self_invite_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  self_invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
used_count_ = 0u;
}

Msg_GetFriendInviteAward_SC::~Msg_GetFriendInviteAward_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GetFriendInviteAward_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GetFriendInviteAward_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  other_invite_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  self_invite_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_GetFriendInviteAward_SC::ArenaDtor(void* object) {
  Msg_GetFriendInviteAward_SC* _this = reinterpret_cast< Msg_GetFriendInviteAward_SC* >(object);
  (void)_this;
}
void Msg_GetFriendInviteAward_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GetFriendInviteAward_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GetFriendInviteAward_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GetFriendInviteAward_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_award_.Clear();
  old_award_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      other_invite_code_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      self_invite_code_.ClearNonDefaultToEmpty();
    }
  }
  used_count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GetFriendInviteAward_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 used_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          used_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .XrPb.FriendInviteAwardInfo new_award = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_new_award(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .XrPb.FriendInviteAwardInfo old_award = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_old_award(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string other_invite_code = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_other_invite_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_GetFriendInviteAward_SC.other_invite_code"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string self_invite_code = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_self_invite_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_GetFriendInviteAward_SC.self_invite_code"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GetFriendInviteAward_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GetFriendInviteAward_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 used_count = 1;
  if (this->_internal_used_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_used_count(), target);
  }

  // repeated .XrPb.FriendInviteAwardInfo new_award = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_new_award_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_new_award(i), target, stream);
  }

  // repeated .XrPb.FriendInviteAwardInfo old_award = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_old_award_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_old_award(i), target, stream);
  }

  // optional string other_invite_code = 4;
  if (_internal_has_other_invite_code()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_other_invite_code().data(), static_cast<int>(this->_internal_other_invite_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_GetFriendInviteAward_SC.other_invite_code");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_other_invite_code(), target);
  }

  // optional string self_invite_code = 5;
  if (_internal_has_self_invite_code()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_invite_code().data(), static_cast<int>(this->_internal_self_invite_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_GetFriendInviteAward_SC.self_invite_code");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_self_invite_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GetFriendInviteAward_SC)
  return target;
}

size_t Msg_GetFriendInviteAward_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GetFriendInviteAward_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.FriendInviteAwardInfo new_award = 2;
  total_size += 1UL * this->_internal_new_award_size();
  for (const auto& msg : this->new_award_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .XrPb.FriendInviteAwardInfo old_award = 3;
  total_size += 1UL * this->_internal_old_award_size();
  for (const auto& msg : this->old_award_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string other_invite_code = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_other_invite_code());
    }

    // optional string self_invite_code = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_self_invite_code());
    }

  }
  // uint32 used_count = 1;
  if (this->_internal_used_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_used_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GetFriendInviteAward_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GetFriendInviteAward_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GetFriendInviteAward_SC::GetClassData() const { return &_class_data_; }

void Msg_GetFriendInviteAward_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GetFriendInviteAward_SC *>(to)->MergeFrom(
      static_cast<const Msg_GetFriendInviteAward_SC &>(from));
}


void Msg_GetFriendInviteAward_SC::MergeFrom(const Msg_GetFriendInviteAward_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GetFriendInviteAward_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  new_award_.MergeFrom(from.new_award_);
  old_award_.MergeFrom(from.old_award_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_other_invite_code(from._internal_other_invite_code());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_self_invite_code(from._internal_self_invite_code());
    }
  }
  if (from._internal_used_count() != 0) {
    _internal_set_used_count(from._internal_used_count());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GetFriendInviteAward_SC::CopyFrom(const Msg_GetFriendInviteAward_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GetFriendInviteAward_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GetFriendInviteAward_SC::IsInitialized() const {
  return true;
}

void Msg_GetFriendInviteAward_SC::InternalSwap(Msg_GetFriendInviteAward_SC* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  new_award_.InternalSwap(&other->new_award_);
  old_award_.InternalSwap(&other->old_award_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &other_invite_code_, lhs_arena,
      &other->other_invite_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &self_invite_code_, lhs_arena,
      &other->self_invite_code_, rhs_arena
  );
  swap(used_count_, other->used_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GetFriendInviteAward_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[43]);
}

// ===================================================================

class Msg_GainInviteCodeAward_CS::_Internal {
 public:
};

Msg_GainInviteCodeAward_CS::Msg_GainInviteCodeAward_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GainInviteCodeAward_CS)
}
Msg_GainInviteCodeAward_CS::Msg_GainInviteCodeAward_CS(const Msg_GainInviteCodeAward_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&type_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GainInviteCodeAward_CS)
}

inline void Msg_GainInviteCodeAward_CS::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&type_)) + sizeof(value_));
}

Msg_GainInviteCodeAward_CS::~Msg_GainInviteCodeAward_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_GainInviteCodeAward_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_GainInviteCodeAward_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_GainInviteCodeAward_CS::ArenaDtor(void* object) {
  Msg_GainInviteCodeAward_CS* _this = reinterpret_cast< Msg_GainInviteCodeAward_CS* >(object);
  (void)_this;
}
void Msg_GainInviteCodeAward_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_GainInviteCodeAward_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_GainInviteCodeAward_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_GainInviteCodeAward_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&type_)) + sizeof(value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_GainInviteCodeAward_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .XrPb.EInviteCodeAwardType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::XrPb::EInviteCodeAwardType>(val));
        } else
          goto handle_unusual;
        continue;
      // uint32 condition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          condition_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_GainInviteCodeAward_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_GainInviteCodeAward_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .XrPb.EInviteCodeAwardType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // uint32 condition = 2;
  if (this->_internal_condition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_condition(), target);
  }

  // uint32 value = 3;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_GainInviteCodeAward_CS)
  return target;
}

size_t Msg_GainInviteCodeAward_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_GainInviteCodeAward_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .XrPb.EInviteCodeAwardType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // uint32 condition = 2;
  if (this->_internal_condition() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_condition());
  }

  // uint32 value = 3;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GainInviteCodeAward_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_GainInviteCodeAward_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GainInviteCodeAward_CS::GetClassData() const { return &_class_data_; }

void Msg_GainInviteCodeAward_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_GainInviteCodeAward_CS *>(to)->MergeFrom(
      static_cast<const Msg_GainInviteCodeAward_CS &>(from));
}


void Msg_GainInviteCodeAward_CS::MergeFrom(const Msg_GainInviteCodeAward_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_GainInviteCodeAward_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_condition() != 0) {
    _internal_set_condition(from._internal_condition());
  }
  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_GainInviteCodeAward_CS::CopyFrom(const Msg_GainInviteCodeAward_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_GainInviteCodeAward_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_GainInviteCodeAward_CS::IsInitialized() const {
  return true;
}

void Msg_GainInviteCodeAward_CS::InternalSwap(Msg_GainInviteCodeAward_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_GainInviteCodeAward_CS, value_)
      + sizeof(Msg_GainInviteCodeAward_CS::value_)
      - PROTOBUF_FIELD_OFFSET(Msg_GainInviteCodeAward_CS, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_GainInviteCodeAward_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[44]);
}

// ===================================================================

class Msg_GainInviteCodeAward_SC::_Internal {
 public:
};

Msg_GainInviteCodeAward_SC::Msg_GainInviteCodeAward_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_GainInviteCodeAward_SC)
}
Msg_GainInviteCodeAward_SC::Msg_GainInviteCodeAward_SC(const Msg_GainInviteCodeAward_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_GainInviteCodeAward_SC)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_GainInviteCodeAward_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_GainInviteCodeAward_SC::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_GainInviteCodeAward_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[45]);
}

// ===================================================================

class Msg_UseInviteCodeReq::_Internal {
 public:
};

Msg_UseInviteCodeReq::Msg_UseInviteCodeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_UseInviteCodeReq)
}
Msg_UseInviteCodeReq::Msg_UseInviteCodeReq(const Msg_UseInviteCodeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invite_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_invite_code().empty()) {
    invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_invite_code(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_UseInviteCodeReq)
}

inline void Msg_UseInviteCodeReq::SharedCtor() {
invite_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  invite_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Msg_UseInviteCodeReq::~Msg_UseInviteCodeReq() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_UseInviteCodeReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_UseInviteCodeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  invite_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_UseInviteCodeReq::ArenaDtor(void* object) {
  Msg_UseInviteCodeReq* _this = reinterpret_cast< Msg_UseInviteCodeReq* >(object);
  (void)_this;
}
void Msg_UseInviteCodeReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_UseInviteCodeReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_UseInviteCodeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_UseInviteCodeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invite_code_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_UseInviteCodeReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string invite_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_invite_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_UseInviteCodeReq.invite_code"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_UseInviteCodeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_UseInviteCodeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string invite_code = 1;
  if (!this->_internal_invite_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invite_code().data(), static_cast<int>(this->_internal_invite_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_UseInviteCodeReq.invite_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invite_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_UseInviteCodeReq)
  return target;
}

size_t Msg_UseInviteCodeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_UseInviteCodeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string invite_code = 1;
  if (!this->_internal_invite_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invite_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_UseInviteCodeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_UseInviteCodeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_UseInviteCodeReq::GetClassData() const { return &_class_data_; }

void Msg_UseInviteCodeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_UseInviteCodeReq *>(to)->MergeFrom(
      static_cast<const Msg_UseInviteCodeReq &>(from));
}


void Msg_UseInviteCodeReq::MergeFrom(const Msg_UseInviteCodeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_UseInviteCodeReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invite_code().empty()) {
    _internal_set_invite_code(from._internal_invite_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_UseInviteCodeReq::CopyFrom(const Msg_UseInviteCodeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_UseInviteCodeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_UseInviteCodeReq::IsInitialized() const {
  return true;
}

void Msg_UseInviteCodeReq::InternalSwap(Msg_UseInviteCodeReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &invite_code_, lhs_arena,
      &other->invite_code_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_UseInviteCodeReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[46]);
}

// ===================================================================

class Msg_UseInviteCodeAck::_Internal {
 public:
};

Msg_UseInviteCodeAck::Msg_UseInviteCodeAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_UseInviteCodeAck)
}
Msg_UseInviteCodeAck::Msg_UseInviteCodeAck(const Msg_UseInviteCodeAck& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_UseInviteCodeAck)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_UseInviteCodeAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_UseInviteCodeAck::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_UseInviteCodeAck::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[47]);
}

// ===================================================================

class Msg_FriendInviteAward_PUSH::_Internal {
 public:
};

Msg_FriendInviteAward_PUSH::Msg_FriendInviteAward_PUSH(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_FriendInviteAward_PUSH)
}
Msg_FriendInviteAward_PUSH::Msg_FriendInviteAward_PUSH(const Msg_FriendInviteAward_PUSH& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_FriendInviteAward_PUSH)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_FriendInviteAward_PUSH::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_FriendInviteAward_PUSH::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_FriendInviteAward_PUSH::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgFriend_2eproto_getter, &descriptor_table_client_2fMsgFriend_2eproto_once,
      file_level_metadata_client_2fMsgFriend_2eproto[48]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace XrPb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::XrPb::MsgMod_Friend* Arena::CreateMaybeMessage< ::XrPb::MsgMod_Friend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::MsgMod_Friend >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_ChatMsg_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_ChatMsg_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_ChatMsg_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_ChatMsg_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_ChatMsg_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_ChatMsg_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_ChatMsg_PUSH* Arena::CreateMaybeMessage< ::XrPb::Msg_ChatMsg_PUSH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_ChatMsg_PUSH >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetFriendList_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GetFriendList_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetFriendList_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::FriendInfo* Arena::CreateMaybeMessage< ::XrPb::FriendInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::FriendInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetFriendList_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_GetFriendList_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetFriendList_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddFriendApply_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_AddFriendApply_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddFriendApply_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddFriendApply_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_AddFriendApply_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddFriendApply_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddFriendApply_PUSH* Arena::CreateMaybeMessage< ::XrPb::Msg_AddFriendApply_PUSH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddFriendApply_PUSH >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddFriendReply_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_AddFriendReply_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddFriendReply_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddFriendReply_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_AddFriendReply_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddFriendReply_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddFriendReply_PUSH* Arena::CreateMaybeMessage< ::XrPb::Msg_AddFriendReply_PUSH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddFriendReply_PUSH >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetFriApplyList_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GetFriApplyList_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetFriApplyList_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetFriApplyList_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_GetFriApplyList_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetFriApplyList_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DelFriend_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_DelFriend_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DelFriend_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DelFriend_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_DelFriend_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DelFriend_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_NotifyDelFriend_PUSH* Arena::CreateMaybeMessage< ::XrPb::Msg_NotifyDelFriend_PUSH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_NotifyDelFriend_PUSH >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddAllFriend_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_AddAllFriend_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddAllFriend_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddAllFriend_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_AddAllFriend_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddAllFriend_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetFriendMsgs_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GetFriendMsgs_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetFriendMsgs_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::FriendOfflineMsg* Arena::CreateMaybeMessage< ::XrPb::FriendOfflineMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::FriendOfflineMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetFriendMsgs_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_GetFriendMsgs_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetFriendMsgs_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair* Arena::CreateMaybeMessage< ::XrPb::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_FriendInfoUpdate_PUSH_AttrInt64Pair >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_FriendInfoUpdate_PUSH_AttrStringPair* Arena::CreateMaybeMessage< ::XrPb::Msg_FriendInfoUpdate_PUSH_AttrStringPair >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_FriendInfoUpdate_PUSH_AttrStringPair >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_FriendInfoUpdate_PUSH* Arena::CreateMaybeMessage< ::XrPb::Msg_FriendInfoUpdate_PUSH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_FriendInfoUpdate_PUSH >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_SearchFriend_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_SearchFriend_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_SearchFriend_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_SearchFriend_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_SearchFriend_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_SearchFriend_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetSelfApplyList_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GetSelfApplyList_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetSelfApplyList_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::BeAppliedInfo* Arena::CreateMaybeMessage< ::XrPb::BeAppliedInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::BeAppliedInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetSelfApplyList_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_GetSelfApplyList_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetSelfApplyList_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddBlackList_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_AddBlackList_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddBlackList_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_AddBlackList_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_AddBlackList_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_AddBlackList_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DelBlackList_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_DelBlackList_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DelBlackList_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DelBlackList_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_DelBlackList_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DelBlackList_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetBlackList_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GetBlackList_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetBlackList_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetBlackList_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_GetBlackList_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetBlackList_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_RefuseAllFriend_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_RefuseAllFriend_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_RefuseAllFriend_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_RefuseAllFriend_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_RefuseAllFriend_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_RefuseAllFriend_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DeleteLastChatFriend_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_DeleteLastChatFriend_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DeleteLastChatFriend_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_DeleteLastChatFriend_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_DeleteLastChatFriend_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_DeleteLastChatFriend_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetFriendInviteAward_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GetFriendInviteAward_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetFriendInviteAward_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::FriendInviteAwardInfo* Arena::CreateMaybeMessage< ::XrPb::FriendInviteAwardInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::FriendInviteAwardInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GetFriendInviteAward_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_GetFriendInviteAward_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GetFriendInviteAward_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GainInviteCodeAward_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_GainInviteCodeAward_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GainInviteCodeAward_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_GainInviteCodeAward_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_GainInviteCodeAward_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_GainInviteCodeAward_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_UseInviteCodeReq* Arena::CreateMaybeMessage< ::XrPb::Msg_UseInviteCodeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_UseInviteCodeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_UseInviteCodeAck* Arena::CreateMaybeMessage< ::XrPb::Msg_UseInviteCodeAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_UseInviteCodeAck >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_FriendInviteAward_PUSH* Arena::CreateMaybeMessage< ::XrPb::Msg_FriendInviteAward_PUSH >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_FriendInviteAward_PUSH >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
