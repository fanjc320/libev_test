// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/MsgScene.proto

#include "client/MsgScene.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace XrPb {
constexpr MsgMod_Scene::MsgMod_Scene(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MsgMod_SceneDefaultTypeInternal {
  constexpr MsgMod_SceneDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgMod_SceneDefaultTypeInternal() {}
  union {
    MsgMod_Scene _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgMod_SceneDefaultTypeInternal _MsgMod_Scene_default_instance_;
constexpr Msg_Battle_Error_Push::Msg_Battle_Error_Push(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : protocolid_(0u)
  , moduleid_(0u)
  , errorcode_(0)
{}
struct Msg_Battle_Error_PushDefaultTypeInternal {
  constexpr Msg_Battle_Error_PushDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_Battle_Error_PushDefaultTypeInternal() {}
  union {
    Msg_Battle_Error_Push _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_Battle_Error_PushDefaultTypeInternal _Msg_Battle_Error_Push_default_instance_;
constexpr SceneRoomData::SceneRoomData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : players_()
  , session_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mapname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(0)
{}
struct SceneRoomDataDefaultTypeInternal {
  constexpr SceneRoomDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SceneRoomDataDefaultTypeInternal() {}
  union {
    SceneRoomData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SceneRoomDataDefaultTypeInternal _SceneRoomData_default_instance_;
constexpr Msg_SceneBeat_CS::Msg_SceneBeat_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_SceneBeat_CSDefaultTypeInternal {
  constexpr Msg_SceneBeat_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_SceneBeat_CSDefaultTypeInternal() {}
  union {
    Msg_SceneBeat_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_SceneBeat_CSDefaultTypeInternal _Msg_SceneBeat_CS_default_instance_;
constexpr Msg_SceneBeat_SC::Msg_SceneBeat_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_SceneBeat_SCDefaultTypeInternal {
  constexpr Msg_SceneBeat_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_SceneBeat_SCDefaultTypeInternal() {}
  union {
    Msg_SceneBeat_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_SceneBeat_SCDefaultTypeInternal _Msg_SceneBeat_SC_default_instance_;
constexpr Msg_EnterRoom_CS::Msg_EnterRoom_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roomsessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , playersessionid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , convid_(0u){}
struct Msg_EnterRoom_CSDefaultTypeInternal {
  constexpr Msg_EnterRoom_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_EnterRoom_CSDefaultTypeInternal() {}
  union {
    Msg_EnterRoom_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_EnterRoom_CSDefaultTypeInternal _Msg_EnterRoom_CS_default_instance_;
constexpr Msg_EnterRoom_SC::Msg_EnterRoom_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mapname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(0)

  , randseed_(0u)
  , started_(false)
  , roomtime_(0u)
  , starttime_(0u){}
struct Msg_EnterRoom_SCDefaultTypeInternal {
  constexpr Msg_EnterRoom_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_EnterRoom_SCDefaultTypeInternal() {}
  union {
    Msg_EnterRoom_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_EnterRoom_SCDefaultTypeInternal _Msg_EnterRoom_SC_default_instance_;
constexpr Msg_Move_CS::Msg_Move_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pos_(){}
struct Msg_Move_CSDefaultTypeInternal {
  constexpr Msg_Move_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_Move_CSDefaultTypeInternal() {}
  union {
    Msg_Move_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_Move_CSDefaultTypeInternal _Msg_Move_CS_default_instance_;
constexpr Msg_RoomQuit_CS::Msg_RoomQuit_CS(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pos_(){}
struct Msg_RoomQuit_CSDefaultTypeInternal {
  constexpr Msg_RoomQuit_CSDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_RoomQuit_CSDefaultTypeInternal() {}
  union {
    Msg_RoomQuit_CS _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_RoomQuit_CSDefaultTypeInternal _Msg_RoomQuit_CS_default_instance_;
constexpr Msg_RoomQuit_SC::Msg_RoomQuit_SC(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Msg_RoomQuit_SCDefaultTypeInternal {
  constexpr Msg_RoomQuit_SCDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Msg_RoomQuit_SCDefaultTypeInternal() {}
  union {
    Msg_RoomQuit_SC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Msg_RoomQuit_SCDefaultTypeInternal _Msg_RoomQuit_SC_default_instance_;
}  // namespace XrPb
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_client_2fMsgScene_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_client_2fMsgScene_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_client_2fMsgScene_2eproto = nullptr;

const uint32_t TableStruct_client_2fMsgScene_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::MsgMod_Scene, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_Battle_Error_Push, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_Battle_Error_Push, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_Battle_Error_Push, protocolid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_Battle_Error_Push, moduleid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_Battle_Error_Push, errorcode_),
  0,
  1,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::SceneRoomData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::SceneRoomData, session_),
  PROTOBUF_FIELD_OFFSET(::XrPb::SceneRoomData, type_),
  PROTOBUF_FIELD_OFFSET(::XrPb::SceneRoomData, mapname_),
  PROTOBUF_FIELD_OFFSET(::XrPb::SceneRoomData, players_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_SceneBeat_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_SceneBeat_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_CS, roomsessionid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_CS, playersessionid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_CS, convid_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_SC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_SC, type_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_SC, mapname_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_SC, randseed_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_SC, started_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_SC, roomtime_),
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_EnterRoom_SC, starttime_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_Move_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_Move_CS, pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_RoomQuit_CS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_RoomQuit_CS, pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::XrPb::Msg_RoomQuit_SC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::XrPb::MsgMod_Scene)},
  { 6, 15, -1, sizeof(::XrPb::Msg_Battle_Error_Push)},
  { 18, -1, -1, sizeof(::XrPb::SceneRoomData)},
  { 28, -1, -1, sizeof(::XrPb::Msg_SceneBeat_CS)},
  { 34, -1, -1, sizeof(::XrPb::Msg_SceneBeat_SC)},
  { 40, -1, -1, sizeof(::XrPb::Msg_EnterRoom_CS)},
  { 49, 61, -1, sizeof(::XrPb::Msg_EnterRoom_SC)},
  { 67, -1, -1, sizeof(::XrPb::Msg_Move_CS)},
  { 74, -1, -1, sizeof(::XrPb::Msg_RoomQuit_CS)},
  { 81, -1, -1, sizeof(::XrPb::Msg_RoomQuit_SC)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_MsgMod_Scene_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_Battle_Error_Push_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_SceneRoomData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_SceneBeat_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_SceneBeat_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_EnterRoom_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_EnterRoom_SC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_Move_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_RoomQuit_CS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::XrPb::_Msg_RoomQuit_SC_default_instance_),
};

const char descriptor_table_protodef_client_2fMsgScene_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025client/MsgScene.proto\022\004XrPb\032\023client/Co"
  "mmon.proto\"\344\001\n\014MsgMod_Scene\"\323\001\n\005MsgId\022\014\n"
  "\010Msg_None\020\000\022\030\n\024Msg_Scene_Error_Push\020\001\022\024\n"
  "\020Msg_EnterRoom_CS\020\002\022\024\n\020Msg_EnterRoom_SC\020"
  "\003\022\017\n\013Msg_Move_CS\020\004\022\017\n\013Msg_Move_SC\020\005\022\023\n\017M"
  "sg_RoomQuit_CS\020\006\022\023\n\017Msg_RoomQuit_SC\020\007\022\024\n"
  "\020Msg_SceneBeat_CS\020\010\022\024\n\020Msg_SceneBeat_SC\020"
  "\t\"\210\001\n\025Msg_Battle_Error_Push\022\027\n\nprotocolI"
  "D\030\001 \001(\rH\000\210\001\001\022\025\n\010moduleid\030\002 \001(\rH\001\210\001\001\022#\n\tE"
  "rrorCode\030\003 \001(\0162\020.XrPb.ResultCodeB\r\n\013_pro"
  "tocolIDB\013\n\t_moduleid\"w\n\rSceneRoomData\022\017\n"
  "\007Session\030\001 \001(\t\022\034\n\004type\030\002 \001(\0162\016.XrPb.Room"
  "Type\022\017\n\007mapName\030\003 \001(\t\022&\n\007players\030\004 \003(\0132\025"
  ".XrPb.ScenePlayerData\"\022\n\020Msg_SceneBeat_C"
  "S\"\022\n\020Msg_SceneBeat_SC\"R\n\020Msg_EnterRoom_C"
  "S\022\025\n\rroomSessionId\030\001 \001(\t\022\027\n\017PlayerSessio"
  "nId\030\002 \001(\t\022\016\n\006convid\030\003 \001(\r\"\277\001\n\020Msg_EnterR"
  "oom_SC\022\034\n\004type\030\001 \001(\0162\016.XrPb.RoomType\022\017\n\007"
  "mapName\030\002 \001(\t\022\020\n\010randSeed\030\003 \001(\r\022\024\n\007start"
  "ed\030\004 \001(\010H\000\210\001\001\022\025\n\010roomTime\030\005 \001(\rH\001\210\001\001\022\026\n\t"
  "startTime\030\006 \001(\rH\002\210\001\001B\n\n\010_startedB\013\n\t_roo"
  "mTimeB\014\n\n_startTime\"(\n\013Msg_Move_CS\022\031\n\003po"
  "s\030\001 \003(\0132\014.XrPb.V3_POS\",\n\017Msg_RoomQuit_CS"
  "\022\031\n\003pos\030\001 \003(\0132\014.XrPb.V3_POS\"\021\n\017Msg_RoomQ"
  "uit_SCb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_client_2fMsgScene_2eproto_deps[1] = {
  &::descriptor_table_client_2fCommon_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_client_2fMsgScene_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_client_2fMsgScene_2eproto = {
  false, false, 974, descriptor_table_protodef_client_2fMsgScene_2eproto, "client/MsgScene.proto", 
  &descriptor_table_client_2fMsgScene_2eproto_once, descriptor_table_client_2fMsgScene_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_client_2fMsgScene_2eproto::offsets,
  file_level_metadata_client_2fMsgScene_2eproto, file_level_enum_descriptors_client_2fMsgScene_2eproto, file_level_service_descriptors_client_2fMsgScene_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_client_2fMsgScene_2eproto_getter() {
  return &descriptor_table_client_2fMsgScene_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_client_2fMsgScene_2eproto(&descriptor_table_client_2fMsgScene_2eproto);
namespace XrPb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgMod_Scene_MsgId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_client_2fMsgScene_2eproto);
  return file_level_enum_descriptors_client_2fMsgScene_2eproto[0];
}
bool MsgMod_Scene_MsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_None;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_Scene_Error_Push;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_EnterRoom_CS;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_EnterRoom_SC;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_Move_CS;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_Move_SC;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_RoomQuit_CS;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_RoomQuit_SC;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_SceneBeat_CS;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::Msg_SceneBeat_SC;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::MsgId_MIN;
constexpr MsgMod_Scene_MsgId MsgMod_Scene::MsgId_MAX;
constexpr int MsgMod_Scene::MsgId_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MsgMod_Scene::_Internal {
 public:
};

MsgMod_Scene::MsgMod_Scene(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.MsgMod_Scene)
}
MsgMod_Scene::MsgMod_Scene(const MsgMod_Scene& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.MsgMod_Scene)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgMod_Scene::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgMod_Scene::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MsgMod_Scene::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[0]);
}

// ===================================================================

class Msg_Battle_Error_Push::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_Battle_Error_Push>()._has_bits_);
  static void set_has_protocolid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_moduleid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Msg_Battle_Error_Push::Msg_Battle_Error_Push(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_Battle_Error_Push)
}
Msg_Battle_Error_Push::Msg_Battle_Error_Push(const Msg_Battle_Error_Push& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&protocolid_, &from.protocolid_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&protocolid_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_Battle_Error_Push)
}

inline void Msg_Battle_Error_Push::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&protocolid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&protocolid_)) + sizeof(errorcode_));
}

Msg_Battle_Error_Push::~Msg_Battle_Error_Push() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_Battle_Error_Push)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_Battle_Error_Push::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_Battle_Error_Push::ArenaDtor(void* object) {
  Msg_Battle_Error_Push* _this = reinterpret_cast< Msg_Battle_Error_Push* >(object);
  (void)_this;
}
void Msg_Battle_Error_Push::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_Battle_Error_Push::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_Battle_Error_Push::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_Battle_Error_Push)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&protocolid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&moduleid_) -
        reinterpret_cast<char*>(&protocolid_)) + sizeof(moduleid_));
  }
  errorcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_Battle_Error_Push::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 protocolID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_protocolid(&has_bits);
          protocolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 moduleid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_moduleid(&has_bits);
          moduleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .XrPb.ResultCode ErrorCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_errorcode(static_cast<::XrPb::ResultCode>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_Battle_Error_Push::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_Battle_Error_Push)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional uint32 protocolID = 1;
  if (_internal_has_protocolid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_protocolid(), target);
  }

  // optional uint32 moduleid = 2;
  if (_internal_has_moduleid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_moduleid(), target);
  }

  // .XrPb.ResultCode ErrorCode = 3;
  if (this->_internal_errorcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_errorcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_Battle_Error_Push)
  return target;
}

size_t Msg_Battle_Error_Push::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_Battle_Error_Push)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 protocolID = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_protocolid());
    }

    // optional uint32 moduleid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_moduleid());
    }

  }
  // .XrPb.ResultCode ErrorCode = 3;
  if (this->_internal_errorcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_errorcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Battle_Error_Push::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_Battle_Error_Push::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Battle_Error_Push::GetClassData() const { return &_class_data_; }

void Msg_Battle_Error_Push::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_Battle_Error_Push *>(to)->MergeFrom(
      static_cast<const Msg_Battle_Error_Push &>(from));
}


void Msg_Battle_Error_Push::MergeFrom(const Msg_Battle_Error_Push& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_Battle_Error_Push)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      protocolid_ = from.protocolid_;
    }
    if (cached_has_bits & 0x00000002u) {
      moduleid_ = from.moduleid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (from._internal_errorcode() != 0) {
    _internal_set_errorcode(from._internal_errorcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_Battle_Error_Push::CopyFrom(const Msg_Battle_Error_Push& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_Battle_Error_Push)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Battle_Error_Push::IsInitialized() const {
  return true;
}

void Msg_Battle_Error_Push::InternalSwap(Msg_Battle_Error_Push* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_Battle_Error_Push, errorcode_)
      + sizeof(Msg_Battle_Error_Push::errorcode_)
      - PROTOBUF_FIELD_OFFSET(Msg_Battle_Error_Push, protocolid_)>(
          reinterpret_cast<char*>(&protocolid_),
          reinterpret_cast<char*>(&other->protocolid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_Battle_Error_Push::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[1]);
}

// ===================================================================

class SceneRoomData::_Internal {
 public:
};

void SceneRoomData::clear_players() {
  players_.Clear();
}
SceneRoomData::SceneRoomData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  players_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.SceneRoomData)
}
SceneRoomData::SceneRoomData(const SceneRoomData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      players_(from.players_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  session_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    session_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session().empty()) {
    session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_session(), 
      GetArenaForAllocation());
  }
  mapname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    mapname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapname().empty()) {
    mapname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mapname(), 
      GetArenaForAllocation());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:XrPb.SceneRoomData)
}

inline void SceneRoomData::SharedCtor() {
session_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  session_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
mapname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  mapname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = 0;
}

SceneRoomData::~SceneRoomData() {
  // @@protoc_insertion_point(destructor:XrPb.SceneRoomData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SceneRoomData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  session_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mapname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SceneRoomData::ArenaDtor(void* object) {
  SceneRoomData* _this = reinterpret_cast< SceneRoomData* >(object);
  (void)_this;
}
void SceneRoomData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SceneRoomData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SceneRoomData::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.SceneRoomData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  session_.ClearToEmpty();
  mapname_.ClearToEmpty();
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SceneRoomData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_session();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.SceneRoomData.Session"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .XrPb.RoomType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::XrPb::RoomType>(val));
        } else
          goto handle_unusual;
        continue;
      // string mapName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_mapname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.SceneRoomData.mapName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .XrPb.ScenePlayerData players = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_players(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SceneRoomData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.SceneRoomData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string Session = 1;
  if (!this->_internal_session().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session().data(), static_cast<int>(this->_internal_session().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.SceneRoomData.Session");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_session(), target);
  }

  // .XrPb.RoomType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // string mapName = 3;
  if (!this->_internal_mapname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapname().data(), static_cast<int>(this->_internal_mapname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.SceneRoomData.mapName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_mapname(), target);
  }

  // repeated .XrPb.ScenePlayerData players = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_players_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_players(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.SceneRoomData)
  return target;
}

size_t SceneRoomData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.SceneRoomData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.ScenePlayerData players = 4;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->players_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Session = 1;
  if (!this->_internal_session().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session());
  }

  // string mapName = 3;
  if (!this->_internal_mapname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapname());
  }

  // .XrPb.RoomType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SceneRoomData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SceneRoomData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SceneRoomData::GetClassData() const { return &_class_data_; }

void SceneRoomData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SceneRoomData *>(to)->MergeFrom(
      static_cast<const SceneRoomData &>(from));
}


void SceneRoomData::MergeFrom(const SceneRoomData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.SceneRoomData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  if (!from._internal_session().empty()) {
    _internal_set_session(from._internal_session());
  }
  if (!from._internal_mapname().empty()) {
    _internal_set_mapname(from._internal_mapname());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SceneRoomData::CopyFrom(const SceneRoomData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.SceneRoomData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneRoomData::IsInitialized() const {
  return true;
}

void SceneRoomData::InternalSwap(SceneRoomData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  players_.InternalSwap(&other->players_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &session_, lhs_arena,
      &other->session_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &mapname_, lhs_arena,
      &other->mapname_, rhs_arena
  );
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SceneRoomData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[2]);
}

// ===================================================================

class Msg_SceneBeat_CS::_Internal {
 public:
};

Msg_SceneBeat_CS::Msg_SceneBeat_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_SceneBeat_CS)
}
Msg_SceneBeat_CS::Msg_SceneBeat_CS(const Msg_SceneBeat_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_SceneBeat_CS)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_SceneBeat_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_SceneBeat_CS::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_SceneBeat_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[3]);
}

// ===================================================================

class Msg_SceneBeat_SC::_Internal {
 public:
};

Msg_SceneBeat_SC::Msg_SceneBeat_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_SceneBeat_SC)
}
Msg_SceneBeat_SC::Msg_SceneBeat_SC(const Msg_SceneBeat_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_SceneBeat_SC)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_SceneBeat_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_SceneBeat_SC::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_SceneBeat_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[4]);
}

// ===================================================================

class Msg_EnterRoom_CS::_Internal {
 public:
};

Msg_EnterRoom_CS::Msg_EnterRoom_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_EnterRoom_CS)
}
Msg_EnterRoom_CS::Msg_EnterRoom_CS(const Msg_EnterRoom_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roomsessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    roomsessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_roomsessionid().empty()) {
    roomsessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roomsessionid(), 
      GetArenaForAllocation());
  }
  playersessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    playersessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_playersessionid().empty()) {
    playersessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_playersessionid(), 
      GetArenaForAllocation());
  }
  convid_ = from.convid_;
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_EnterRoom_CS)
}

inline void Msg_EnterRoom_CS::SharedCtor() {
roomsessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  roomsessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
playersessionid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  playersessionid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
convid_ = 0u;
}

Msg_EnterRoom_CS::~Msg_EnterRoom_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_EnterRoom_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_EnterRoom_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  roomsessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  playersessionid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_EnterRoom_CS::ArenaDtor(void* object) {
  Msg_EnterRoom_CS* _this = reinterpret_cast< Msg_EnterRoom_CS* >(object);
  (void)_this;
}
void Msg_EnterRoom_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_EnterRoom_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_EnterRoom_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_EnterRoom_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomsessionid_.ClearToEmpty();
  playersessionid_.ClearToEmpty();
  convid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_EnterRoom_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string roomSessionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_roomsessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_EnterRoom_CS.roomSessionId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string PlayerSessionId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_playersessionid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_EnterRoom_CS.PlayerSessionId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 convid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          convid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_EnterRoom_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_EnterRoom_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomSessionId = 1;
  if (!this->_internal_roomsessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roomsessionid().data(), static_cast<int>(this->_internal_roomsessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_EnterRoom_CS.roomSessionId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roomsessionid(), target);
  }

  // string PlayerSessionId = 2;
  if (!this->_internal_playersessionid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_playersessionid().data(), static_cast<int>(this->_internal_playersessionid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_EnterRoom_CS.PlayerSessionId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_playersessionid(), target);
  }

  // uint32 convid = 3;
  if (this->_internal_convid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_convid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_EnterRoom_CS)
  return target;
}

size_t Msg_EnterRoom_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_EnterRoom_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roomSessionId = 1;
  if (!this->_internal_roomsessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roomsessionid());
  }

  // string PlayerSessionId = 2;
  if (!this->_internal_playersessionid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_playersessionid());
  }

  // uint32 convid = 3;
  if (this->_internal_convid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_convid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_EnterRoom_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_EnterRoom_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_EnterRoom_CS::GetClassData() const { return &_class_data_; }

void Msg_EnterRoom_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_EnterRoom_CS *>(to)->MergeFrom(
      static_cast<const Msg_EnterRoom_CS &>(from));
}


void Msg_EnterRoom_CS::MergeFrom(const Msg_EnterRoom_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_EnterRoom_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_roomsessionid().empty()) {
    _internal_set_roomsessionid(from._internal_roomsessionid());
  }
  if (!from._internal_playersessionid().empty()) {
    _internal_set_playersessionid(from._internal_playersessionid());
  }
  if (from._internal_convid() != 0) {
    _internal_set_convid(from._internal_convid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_EnterRoom_CS::CopyFrom(const Msg_EnterRoom_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_EnterRoom_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_EnterRoom_CS::IsInitialized() const {
  return true;
}

void Msg_EnterRoom_CS::InternalSwap(Msg_EnterRoom_CS* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &roomsessionid_, lhs_arena,
      &other->roomsessionid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &playersessionid_, lhs_arena,
      &other->playersessionid_, rhs_arena
  );
  swap(convid_, other->convid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_EnterRoom_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[5]);
}

// ===================================================================

class Msg_EnterRoom_SC::_Internal {
 public:
  using HasBits = decltype(std::declval<Msg_EnterRoom_SC>()._has_bits_);
  static void set_has_started(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_roomtime(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_starttime(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Msg_EnterRoom_SC::Msg_EnterRoom_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_EnterRoom_SC)
}
Msg_EnterRoom_SC::Msg_EnterRoom_SC(const Msg_EnterRoom_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mapname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    mapname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapname().empty()) {
    mapname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mapname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&starttime_) -
    reinterpret_cast<char*>(&type_)) + sizeof(starttime_));
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_EnterRoom_SC)
}

inline void Msg_EnterRoom_SC::SharedCtor() {
mapname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  mapname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&starttime_) -
    reinterpret_cast<char*>(&type_)) + sizeof(starttime_));
}

Msg_EnterRoom_SC::~Msg_EnterRoom_SC() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_EnterRoom_SC)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_EnterRoom_SC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  mapname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Msg_EnterRoom_SC::ArenaDtor(void* object) {
  Msg_EnterRoom_SC* _this = reinterpret_cast< Msg_EnterRoom_SC* >(object);
  (void)_this;
}
void Msg_EnterRoom_SC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_EnterRoom_SC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_EnterRoom_SC::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_EnterRoom_SC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mapname_.ClearToEmpty();
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&randseed_) -
      reinterpret_cast<char*>(&type_)) + sizeof(randseed_));
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&started_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&starttime_) -
        reinterpret_cast<char*>(&started_)) + sizeof(starttime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_EnterRoom_SC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .XrPb.RoomType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::XrPb::RoomType>(val));
        } else
          goto handle_unusual;
        continue;
      // string mapName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "XrPb.Msg_EnterRoom_SC.mapName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 randSeed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          randseed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool started = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_started(&has_bits);
          started_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 roomTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_roomtime(&has_bits);
          roomtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 startTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_starttime(&has_bits);
          starttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_EnterRoom_SC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_EnterRoom_SC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .XrPb.RoomType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string mapName = 2;
  if (!this->_internal_mapname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapname().data(), static_cast<int>(this->_internal_mapname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "XrPb.Msg_EnterRoom_SC.mapName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapname(), target);
  }

  // uint32 randSeed = 3;
  if (this->_internal_randseed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_randseed(), target);
  }

  // optional bool started = 4;
  if (_internal_has_started()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_started(), target);
  }

  // optional uint32 roomTime = 5;
  if (_internal_has_roomtime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_roomtime(), target);
  }

  // optional uint32 startTime = 6;
  if (_internal_has_starttime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_starttime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_EnterRoom_SC)
  return target;
}

size_t Msg_EnterRoom_SC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_EnterRoom_SC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapName = 2;
  if (!this->_internal_mapname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapname());
  }

  // .XrPb.RoomType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // uint32 randSeed = 3;
  if (this->_internal_randseed() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_randseed());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool started = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional uint32 roomTime = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_roomtime());
    }

    // optional uint32 startTime = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_starttime());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_EnterRoom_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_EnterRoom_SC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_EnterRoom_SC::GetClassData() const { return &_class_data_; }

void Msg_EnterRoom_SC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_EnterRoom_SC *>(to)->MergeFrom(
      static_cast<const Msg_EnterRoom_SC &>(from));
}


void Msg_EnterRoom_SC::MergeFrom(const Msg_EnterRoom_SC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_EnterRoom_SC)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapname().empty()) {
    _internal_set_mapname(from._internal_mapname());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_randseed() != 0) {
    _internal_set_randseed(from._internal_randseed());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      started_ = from.started_;
    }
    if (cached_has_bits & 0x00000002u) {
      roomtime_ = from.roomtime_;
    }
    if (cached_has_bits & 0x00000004u) {
      starttime_ = from.starttime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_EnterRoom_SC::CopyFrom(const Msg_EnterRoom_SC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_EnterRoom_SC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_EnterRoom_SC::IsInitialized() const {
  return true;
}

void Msg_EnterRoom_SC::InternalSwap(Msg_EnterRoom_SC* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &mapname_, lhs_arena,
      &other->mapname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_EnterRoom_SC, starttime_)
      + sizeof(Msg_EnterRoom_SC::starttime_)
      - PROTOBUF_FIELD_OFFSET(Msg_EnterRoom_SC, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_EnterRoom_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[6]);
}

// ===================================================================

class Msg_Move_CS::_Internal {
 public:
};

void Msg_Move_CS::clear_pos() {
  pos_.Clear();
}
Msg_Move_CS::Msg_Move_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  pos_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_Move_CS)
}
Msg_Move_CS::Msg_Move_CS(const Msg_Move_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pos_(from.pos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_Move_CS)
}

inline void Msg_Move_CS::SharedCtor() {
}

Msg_Move_CS::~Msg_Move_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_Move_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_Move_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_Move_CS::ArenaDtor(void* object) {
  Msg_Move_CS* _this = reinterpret_cast< Msg_Move_CS* >(object);
  (void)_this;
}
void Msg_Move_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_Move_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_Move_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_Move_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_Move_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .XrPb.V3_POS pos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_Move_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_Move_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XrPb.V3_POS pos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_pos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_Move_CS)
  return target;
}

size_t Msg_Move_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_Move_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.V3_POS pos = 1;
  total_size += 1UL * this->_internal_pos_size();
  for (const auto& msg : this->pos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_Move_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_Move_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_Move_CS::GetClassData() const { return &_class_data_; }

void Msg_Move_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_Move_CS *>(to)->MergeFrom(
      static_cast<const Msg_Move_CS &>(from));
}


void Msg_Move_CS::MergeFrom(const Msg_Move_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_Move_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  pos_.MergeFrom(from.pos_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_Move_CS::CopyFrom(const Msg_Move_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_Move_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_Move_CS::IsInitialized() const {
  return true;
}

void Msg_Move_CS::InternalSwap(Msg_Move_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  pos_.InternalSwap(&other->pos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_Move_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[7]);
}

// ===================================================================

class Msg_RoomQuit_CS::_Internal {
 public:
};

void Msg_RoomQuit_CS::clear_pos() {
  pos_.Clear();
}
Msg_RoomQuit_CS::Msg_RoomQuit_CS(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  pos_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_RoomQuit_CS)
}
Msg_RoomQuit_CS::Msg_RoomQuit_CS(const Msg_RoomQuit_CS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pos_(from.pos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_RoomQuit_CS)
}

inline void Msg_RoomQuit_CS::SharedCtor() {
}

Msg_RoomQuit_CS::~Msg_RoomQuit_CS() {
  // @@protoc_insertion_point(destructor:XrPb.Msg_RoomQuit_CS)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Msg_RoomQuit_CS::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_RoomQuit_CS::ArenaDtor(void* object) {
  Msg_RoomQuit_CS* _this = reinterpret_cast< Msg_RoomQuit_CS* >(object);
  (void)_this;
}
void Msg_RoomQuit_CS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg_RoomQuit_CS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Msg_RoomQuit_CS::Clear() {
// @@protoc_insertion_point(message_clear_start:XrPb.Msg_RoomQuit_CS)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RoomQuit_CS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .XrPb.V3_POS pos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_RoomQuit_CS::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:XrPb.Msg_RoomQuit_CS)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .XrPb.V3_POS pos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_pos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XrPb.Msg_RoomQuit_CS)
  return target;
}

size_t Msg_RoomQuit_CS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XrPb.Msg_RoomQuit_CS)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .XrPb.V3_POS pos = 1;
  total_size += 1UL * this->_internal_pos_size();
  for (const auto& msg : this->pos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_RoomQuit_CS::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Msg_RoomQuit_CS::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_RoomQuit_CS::GetClassData() const { return &_class_data_; }

void Msg_RoomQuit_CS::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Msg_RoomQuit_CS *>(to)->MergeFrom(
      static_cast<const Msg_RoomQuit_CS &>(from));
}


void Msg_RoomQuit_CS::MergeFrom(const Msg_RoomQuit_CS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XrPb.Msg_RoomQuit_CS)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  pos_.MergeFrom(from.pos_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_RoomQuit_CS::CopyFrom(const Msg_RoomQuit_CS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XrPb.Msg_RoomQuit_CS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RoomQuit_CS::IsInitialized() const {
  return true;
}

void Msg_RoomQuit_CS::InternalSwap(Msg_RoomQuit_CS* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  pos_.InternalSwap(&other->pos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RoomQuit_CS::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[8]);
}

// ===================================================================

class Msg_RoomQuit_SC::_Internal {
 public:
};

Msg_RoomQuit_SC::Msg_RoomQuit_SC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:XrPb.Msg_RoomQuit_SC)
}
Msg_RoomQuit_SC::Msg_RoomQuit_SC(const Msg_RoomQuit_SC& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XrPb.Msg_RoomQuit_SC)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_RoomQuit_SC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_RoomQuit_SC::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Msg_RoomQuit_SC::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_client_2fMsgScene_2eproto_getter, &descriptor_table_client_2fMsgScene_2eproto_once,
      file_level_metadata_client_2fMsgScene_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace XrPb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::XrPb::MsgMod_Scene* Arena::CreateMaybeMessage< ::XrPb::MsgMod_Scene >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::MsgMod_Scene >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_Battle_Error_Push* Arena::CreateMaybeMessage< ::XrPb::Msg_Battle_Error_Push >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_Battle_Error_Push >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::SceneRoomData* Arena::CreateMaybeMessage< ::XrPb::SceneRoomData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::SceneRoomData >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_SceneBeat_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_SceneBeat_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_SceneBeat_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_SceneBeat_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_SceneBeat_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_SceneBeat_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_EnterRoom_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_EnterRoom_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_EnterRoom_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_EnterRoom_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_EnterRoom_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_EnterRoom_SC >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_Move_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_Move_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_Move_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_RoomQuit_CS* Arena::CreateMaybeMessage< ::XrPb::Msg_RoomQuit_CS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_RoomQuit_CS >(arena);
}
template<> PROTOBUF_NOINLINE ::XrPb::Msg_RoomQuit_SC* Arena::CreateMaybeMessage< ::XrPb::Msg_RoomQuit_SC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::XrPb::Msg_RoomQuit_SC >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
